// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iperf.proto

#include "data-sources/yanpit/iperf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_iperf_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BootstrapInformation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionIntention;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CumulativeInterval;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReportedReceivingStream;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReportedReceivingSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReportedSendingStream;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReportedSendingSummary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourceStatistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Stream;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Interval;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Connection;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReportedStreamsPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReportedSummariesPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Report;
}  // namespace protobuf_iperf_2eproto
class ConnectionStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionStatus>
      _instance;
} _ConnectionStatus_default_instance_;
class ConnectionIntentionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionIntention>
      _instance;
} _ConnectionIntention_default_instance_;
class ConnectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Connection>
      _instance;
} _Connection_default_instance_;
class BootstrapInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BootstrapInformation>
      _instance;
} _BootstrapInformation_default_instance_;
class HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Header>
      _instance;
} _Header_default_instance_;
class StreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stream>
      _instance;
} _Stream_default_instance_;
class IntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Interval>
      _instance;
} _Interval_default_instance_;
class CumulativeIntervalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CumulativeInterval>
      _instance;
} _CumulativeInterval_default_instance_;
class ReportedSendingStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedSendingStream>
      _instance;
} _ReportedSendingStream_default_instance_;
class ReportedReceivingStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedReceivingStream>
      _instance;
} _ReportedReceivingStream_default_instance_;
class ReportedStreamsPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedStreamsPair>
      _instance;
} _ReportedStreamsPair_default_instance_;
class ReportedSendingSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedSendingSummary>
      _instance;
} _ReportedSendingSummary_default_instance_;
class ReportedReceivingSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedReceivingSummary>
      _instance;
} _ReportedReceivingSummary_default_instance_;
class ReportedSummariesPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportedSummariesPair>
      _instance;
} _ReportedSummariesPair_default_instance_;
class ResourceStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceStatistics>
      _instance;
} _ResourceStatistics_default_instance_;
class ReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Report>
      _instance;
} _Report_default_instance_;
class IperfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Iperf>
      _instance;
} _Iperf_default_instance_;
namespace protobuf_iperf_2eproto {
static void InitDefaultsConnectionStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConnectionStatus_default_instance_;
    new (ptr) ::ConnectionStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConnectionStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionStatus}, {}};

static void InitDefaultsConnectionIntention() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ConnectionIntention_default_instance_;
    new (ptr) ::ConnectionIntention();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ConnectionIntention::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionIntention =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionIntention}, {}};

static void InitDefaultsConnection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Connection_default_instance_;
    new (ptr) ::Connection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Connection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Connection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConnection}, {
      &protobuf_iperf_2eproto::scc_info_ConnectionStatus.base,
      &protobuf_iperf_2eproto::scc_info_ConnectionIntention.base,}};

static void InitDefaultsBootstrapInformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BootstrapInformation_default_instance_;
    new (ptr) ::BootstrapInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BootstrapInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BootstrapInformation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBootstrapInformation}, {}};

static void InitDefaultsHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Header_default_instance_;
    new (ptr) ::Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Header::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Header =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHeader}, {
      &protobuf_iperf_2eproto::scc_info_Connection.base,
      &protobuf_iperf_2eproto::scc_info_BootstrapInformation.base,}};

static void InitDefaultsStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Stream_default_instance_;
    new (ptr) ::Stream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Stream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Stream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStream}, {}};

static void InitDefaultsInterval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Interval_default_instance_;
    new (ptr) ::Interval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Interval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Interval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInterval}, {
      &protobuf_iperf_2eproto::scc_info_Stream.base,}};

static void InitDefaultsCumulativeInterval() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CumulativeInterval_default_instance_;
    new (ptr) ::CumulativeInterval();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CumulativeInterval::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CumulativeInterval =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCumulativeInterval}, {}};

static void InitDefaultsReportedSendingStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedSendingStream_default_instance_;
    new (ptr) ::ReportedSendingStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedSendingStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportedSendingStream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportedSendingStream}, {}};

static void InitDefaultsReportedReceivingStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedReceivingStream_default_instance_;
    new (ptr) ::ReportedReceivingStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedReceivingStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportedReceivingStream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportedReceivingStream}, {}};

static void InitDefaultsReportedStreamsPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedStreamsPair_default_instance_;
    new (ptr) ::ReportedStreamsPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedStreamsPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReportedStreamsPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReportedStreamsPair}, {
      &protobuf_iperf_2eproto::scc_info_ReportedSendingStream.base,
      &protobuf_iperf_2eproto::scc_info_ReportedReceivingStream.base,}};

static void InitDefaultsReportedSendingSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedSendingSummary_default_instance_;
    new (ptr) ::ReportedSendingSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedSendingSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportedSendingSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportedSendingSummary}, {}};

static void InitDefaultsReportedReceivingSummary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedReceivingSummary_default_instance_;
    new (ptr) ::ReportedReceivingSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedReceivingSummary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportedReceivingSummary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportedReceivingSummary}, {}};

static void InitDefaultsReportedSummariesPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ReportedSummariesPair_default_instance_;
    new (ptr) ::ReportedSummariesPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReportedSummariesPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReportedSummariesPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReportedSummariesPair}, {
      &protobuf_iperf_2eproto::scc_info_ReportedSendingSummary.base,
      &protobuf_iperf_2eproto::scc_info_ReportedReceivingSummary.base,}};

static void InitDefaultsResourceStatistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ResourceStatistics_default_instance_;
    new (ptr) ::ResourceStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ResourceStatistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceStatistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceStatistics}, {}};

static void InitDefaultsReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Report_default_instance_;
    new (ptr) ::Report();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Report::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Report =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsReport}, {
      &protobuf_iperf_2eproto::scc_info_ReportedStreamsPair.base,
      &protobuf_iperf_2eproto::scc_info_ReportedSummariesPair.base,
      &protobuf_iperf_2eproto::scc_info_ResourceStatistics.base,}};

static void InitDefaultsIperf() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Iperf_default_instance_;
    new (ptr) ::Iperf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Iperf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Iperf =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsIperf}, {
      &protobuf_iperf_2eproto::scc_info_Header.base,
      &protobuf_iperf_2eproto::scc_info_Interval.base,
      &protobuf_iperf_2eproto::scc_info_CumulativeInterval.base,
      &protobuf_iperf_2eproto::scc_info_Report.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionIntention.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Connection.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BootstrapInformation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Header.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Stream.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Interval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CumulativeInterval.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedSendingStream.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedReceivingStream.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedStreamsPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedSendingSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedReceivingSummary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportedSummariesPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceStatistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Report.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Iperf.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, socket_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, local_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, local_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, remote_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionStatus, remote_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionIntention, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionIntention, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ConnectionIntention, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Connection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Connection, connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Connection, intention_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, system_information_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, tcp_mss_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, target_bitrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, sock_bufsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, sndbuf_actual_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, rcvbuf_actual_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, number_of_streams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, block_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, omitted_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, blocks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, reverse_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BootstrapInformation, tos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Header, cookie_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Header, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Header, information_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Header, starting_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, socket_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, bits_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, omitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Stream, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interval, streams_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CumulativeInterval, bits_per_second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, socket_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, bits_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingStream, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, socket_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, bits_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingStream, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedStreamsPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedStreamsPair, sending_stream_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedStreamsPair, receiving_stream_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, bits_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSendingSummary, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, bits_per_second_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedReceivingSummary, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSummariesPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSummariesPair, sending_summary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReportedSummariesPair, receiving_summary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, host_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, host_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, host_system_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, remote_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, remote_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ResourceStatistics, remote_system_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Report, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Report, streams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Report, summaries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Report, cpu_usage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Iperf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Iperf, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Iperf, intervals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Iperf, cumulative_intervals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Iperf, end_report_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ConnectionStatus)},
  { 10, -1, sizeof(::ConnectionIntention)},
  { 17, -1, sizeof(::Connection)},
  { 24, -1, sizeof(::BootstrapInformation)},
  { 45, -1, sizeof(::Header)},
  { 54, -1, sizeof(::Stream)},
  { 67, -1, sizeof(::Interval)},
  { 73, -1, sizeof(::CumulativeInterval)},
  { 83, -1, sizeof(::ReportedSendingStream)},
  { 95, -1, sizeof(::ReportedReceivingStream)},
  { 107, -1, sizeof(::ReportedStreamsPair)},
  { 114, -1, sizeof(::ReportedSendingSummary)},
  { 125, -1, sizeof(::ReportedReceivingSummary)},
  { 136, -1, sizeof(::ReportedSummariesPair)},
  { 143, -1, sizeof(::ResourceStatistics)},
  { 154, -1, sizeof(::Report)},
  { 162, -1, sizeof(::Iperf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConnectionStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ConnectionIntention_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Connection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BootstrapInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Stream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Interval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CumulativeInterval_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedSendingStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedReceivingStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedStreamsPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedSendingSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedReceivingSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReportedSummariesPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ResourceStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Report_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Iperf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "iperf.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013iperf.proto\"{\n\020ConnectionStatus\022\025\n\rsoc"
      "ket_number\030\001 \001(\005\022\022\n\nlocal_host\030\002 \001(\t\022\022\n\n"
      "local_port\030\003 \001(\r\022\023\n\013remote_host\030\004 \001(\t\022\023\n"
      "\013remote_port\030\005 \001(\r\"1\n\023ConnectionIntentio"
      "n\022\014\n\004host\030\001 \001(\t\022\014\n\004port\030\002 \001(\r\"]\n\nConnect"
      "ion\022&\n\013connections\030\001 \003(\0132\021.ConnectionSta"
      "tus\022\'\n\tintention\030\002 \001(\0132\024.ConnectionInten"
      "tion\"\365\002\n\024BootstrapInformation\022\017\n\007version"
      "\030\001 \001(\t\022\032\n\022system_information\030\002 \001(\t\022\027\n\017tc"
      "p_mss_default\030\003 \001(\005\022\026\n\016target_bitrate\030\004 "
      "\001(\001\022\024\n\014sock_bufsize\030\005 \001(\005\022\025\n\rsndbuf_actu"
      "al\030\006 \001(\005\022\025\n\rrcvbuf_actual\030\007 \001(\005\022\037\n\010proto"
      "col\030\010 \001(\0162\r.ProtocolType\022\031\n\021number_of_st"
      "reams\030\t \001(\005\022\022\n\nblock_size\030\n \001(\005\022\027\n\017omitt"
      "ed_seconds\030\013 \001(\005\022\020\n\010duration\030\014 \001(\005\022\r\n\005by"
      "tes\030\r \001(\005\022\016\n\006blocks\030\016 \001(\005\022\024\n\014reverse_mod"
      "e\030\017 \001(\010\022\013\n\003tos\030\020 \001(\005\"|\n\006Header\022\016\n\006cookie"
      "\030\001 \001(\t\022\037\n\nconnection\030\002 \001(\0132\013.Connection\022"
      "*\n\013information\030\003 \001(\0132\025.BootstrapInformat"
      "ion\022\025\n\rstarting_time\030\004 \001(\003\"\223\001\n\006Stream\022\025\n"
      "\rsocket_number\030\001 \001(\005\022\r\n\005start\030\002 \001(\001\022\013\n\003e"
      "nd\030\003 \001(\001\022\r\n\005range\030\004 \001(\001\022\r\n\005bytes\030\005 \001(\004\022\027"
      "\n\017bits_per_second\030\006 \001(\001\022\017\n\007omitted\030\007 \001(\010"
      "\022\016\n\006sender\030\010 \001(\010\"$\n\010Interval\022\030\n\007streams\030"
      "\001 \003(\0132\007.Stream\"g\n\022CumulativeInterval\022\r\n\005"
      "start\030\001 \001(\001\022\013\n\003end\030\002 \001(\001\022\r\n\005range\030\003 \001(\001\022"
      "\r\n\005bytes\030\004 \001(\004\022\027\n\017bits_per_second\030\005 \001(\001\""
      "\221\001\n\025ReportedSendingStream\022\025\n\rsocket_numb"
      "er\030\001 \001(\005\022\r\n\005start\030\002 \001(\001\022\013\n\003end\030\003 \001(\001\022\r\n\005"
      "range\030\004 \001(\001\022\r\n\005bytes\030\005 \001(\004\022\027\n\017bits_per_s"
      "econd\030\006 \001(\001\022\016\n\006sender\030\007 \001(\010\"\223\001\n\027Reported"
      "ReceivingStream\022\025\n\rsocket_number\030\001 \001(\005\022\r"
      "\n\005start\030\002 \001(\001\022\013\n\003end\030\003 \001(\001\022\r\n\005range\030\004 \001("
      "\001\022\r\n\005bytes\030\005 \001(\004\022\027\n\017bits_per_second\030\006 \001("
      "\001\022\016\n\006sender\030\007 \001(\010\"y\n\023ReportedStreamsPair"
      "\022.\n\016sending_stream\030\001 \001(\0132\026.ReportedSendi"
      "ngStream\0222\n\020receiving_stream\030\002 \001(\0132\030.Rep"
      "ortedReceivingStream\"{\n\026ReportedSendingS"
      "ummary\022\r\n\005start\030\001 \001(\001\022\013\n\003end\030\002 \001(\001\022\r\n\005ra"
      "nge\030\003 \001(\001\022\r\n\005bytes\030\004 \001(\004\022\027\n\017bits_per_sec"
      "ond\030\005 \001(\001\022\016\n\006sender\030\006 \001(\010\"}\n\030ReportedRec"
      "eivingSummary\022\r\n\005start\030\001 \001(\001\022\013\n\003end\030\002 \001("
      "\001\022\r\n\005range\030\003 \001(\001\022\r\n\005bytes\030\004 \001(\004\022\027\n\017bits_"
      "per_second\030\005 \001(\001\022\016\n\006sender\030\006 \001(\010\"\177\n\025Repo"
      "rtedSummariesPair\0220\n\017sending_summary\030\001 \001"
      "(\0132\027.ReportedSendingSummary\0224\n\021receiving"
      "_summary\030\002 \001(\0132\031.ReportedReceivingSummar"
      "y\"\222\001\n\022ResourceStatistics\022\022\n\nhost_total\030\001"
      " \001(\001\022\021\n\thost_user\030\002 \001(\001\022\023\n\013host_system\030\003"
      " \001(\001\022\024\n\014remote_total\030\004 \001(\001\022\023\n\013remote_use"
      "r\030\005 \001(\001\022\025\n\rremote_system\030\006 \001(\001\"\202\001\n\006Repor"
      "t\022%\n\007streams\030\001 \003(\0132\024.ReportedStreamsPair"
      "\022)\n\tsummaries\030\002 \001(\0132\026.ReportedSummariesP"
      "air\022&\n\tcpu_usage\030\003 \001(\0132\023.ResourceStatist"
      "ics\"\216\001\n\005Iperf\022\027\n\006header\030\001 \001(\0132\007.Header\022\034"
      "\n\tintervals\030\002 \003(\0132\t.Interval\0221\n\024cumulati"
      "ve_intervals\030\003 \003(\0132\023.CumulativeInterval\022"
      "\033\n\nend_report\030\004 \001(\0132\007.Report* \n\014Protocol"
      "Type\022\007\n\003TCP\020\000\022\007\n\003UDP\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2350);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iperf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_iperf_2eproto
const ::google::protobuf::EnumDescriptor* ProtocolType_descriptor() {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_iperf_2eproto::file_level_enum_descriptors[0];
}
bool ProtocolType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ConnectionStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionStatus::kSocketNumberFieldNumber;
const int ConnectionStatus::kLocalHostFieldNumber;
const int ConnectionStatus::kLocalPortFieldNumber;
const int ConnectionStatus::kRemoteHostFieldNumber;
const int ConnectionStatus::kRemotePortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionStatus::ConnectionStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ConnectionStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectionStatus)
}
ConnectionStatus::ConnectionStatus(const ConnectionStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  local_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.local_host().size() > 0) {
    local_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_host_);
  }
  remote_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remote_host().size() > 0) {
    remote_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_host_);
  }
  ::memcpy(&socket_number_, &from.socket_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_port_) -
    reinterpret_cast<char*>(&socket_number_)) + sizeof(remote_port_));
  // @@protoc_insertion_point(copy_constructor:ConnectionStatus)
}

void ConnectionStatus::SharedCtor() {
  local_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&socket_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_port_) -
      reinterpret_cast<char*>(&socket_number_)) + sizeof(remote_port_));
}

ConnectionStatus::~ConnectionStatus() {
  // @@protoc_insertion_point(destructor:ConnectionStatus)
  SharedDtor();
}

void ConnectionStatus::SharedDtor() {
  local_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionStatus::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionStatus& ConnectionStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ConnectionStatus.base);
  return *internal_default_instance();
}


void ConnectionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remote_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&socket_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_port_) -
      reinterpret_cast<char*>(&socket_number_)) + sizeof(remote_port_));
  _internal_metadata_.Clear();
}

bool ConnectionStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectionStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 socket_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string local_host = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_local_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->local_host().data(), static_cast<int>(this->local_host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConnectionStatus.local_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 local_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &local_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remote_host = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remote_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remote_host().data(), static_cast<int>(this->remote_host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConnectionStatus.remote_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 remote_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remote_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectionStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectionStatus)
  return false;
#undef DO_
}

void ConnectionStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket_number(), output);
  }

  // string local_host = 2;
  if (this->local_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_host().data(), static_cast<int>(this->local_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionStatus.local_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->local_host(), output);
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->local_port(), output);
  }

  // string remote_host = 4;
  if (this->remote_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_host().data(), static_cast<int>(this->remote_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionStatus.remote_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remote_host(), output);
  }

  // uint32 remote_port = 5;
  if (this->remote_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->remote_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectionStatus)
}

::google::protobuf::uint8* ConnectionStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectionStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket_number(), target);
  }

  // string local_host = 2;
  if (this->local_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->local_host().data(), static_cast<int>(this->local_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionStatus.local_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->local_host(), target);
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->local_port(), target);
  }

  // string remote_host = 4;
  if (this->remote_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remote_host().data(), static_cast<int>(this->remote_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionStatus.remote_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->remote_host(), target);
  }

  // uint32 remote_port = 5;
  if (this->remote_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->remote_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectionStatus)
  return target;
}

size_t ConnectionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectionStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string local_host = 2;
  if (this->local_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->local_host());
  }

  // string remote_host = 4;
  if (this->remote_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remote_host());
  }

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket_number());
  }

  // uint32 local_port = 3;
  if (this->local_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->local_port());
  }

  // uint32 remote_port = 5;
  if (this->remote_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remote_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectionStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectionStatus)
    MergeFrom(*source);
  }
}

void ConnectionStatus::MergeFrom(const ConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_host().size() > 0) {

    local_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.local_host_);
  }
  if (from.remote_host().size() > 0) {

    remote_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remote_host_);
  }
  if (from.socket_number() != 0) {
    set_socket_number(from.socket_number());
  }
  if (from.local_port() != 0) {
    set_local_port(from.local_port());
  }
  if (from.remote_port() != 0) {
    set_remote_port(from.remote_port());
  }
}

void ConnectionStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionStatus::CopyFrom(const ConnectionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionStatus::IsInitialized() const {
  return true;
}

void ConnectionStatus::Swap(ConnectionStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionStatus::InternalSwap(ConnectionStatus* other) {
  using std::swap;
  local_host_.Swap(&other->local_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_host_.Swap(&other->remote_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(socket_number_, other->socket_number_);
  swap(local_port_, other->local_port_);
  swap(remote_port_, other->remote_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionStatus::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionIntention::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionIntention::kHostFieldNumber;
const int ConnectionIntention::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionIntention::ConnectionIntention()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ConnectionIntention.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConnectionIntention)
}
ConnectionIntention::ConnectionIntention(const ConnectionIntention& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:ConnectionIntention)
}

void ConnectionIntention::SharedCtor() {
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

ConnectionIntention::~ConnectionIntention() {
  // @@protoc_insertion_point(destructor:ConnectionIntention)
  SharedDtor();
}

void ConnectionIntention::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionIntention::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionIntention::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionIntention& ConnectionIntention::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ConnectionIntention.base);
  return *internal_default_instance();
}


void ConnectionIntention::Clear() {
// @@protoc_insertion_point(message_clear_start:ConnectionIntention)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  _internal_metadata_.Clear();
}

bool ConnectionIntention::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConnectionIntention)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), static_cast<int>(this->host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ConnectionIntention.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConnectionIntention)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConnectionIntention)
  return false;
#undef DO_
}

void ConnectionIntention::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConnectionIntention)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionIntention.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->host(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConnectionIntention)
}

::google::protobuf::uint8* ConnectionIntention::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConnectionIntention)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host = 1;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), static_cast<int>(this->host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ConnectionIntention.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->host(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConnectionIntention)
  return target;
}

size_t ConnectionIntention::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConnectionIntention)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host = 1;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionIntention::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConnectionIntention)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionIntention* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionIntention>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConnectionIntention)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConnectionIntention)
    MergeFrom(*source);
  }
}

void ConnectionIntention::MergeFrom(const ConnectionIntention& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConnectionIntention)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void ConnectionIntention::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConnectionIntention)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionIntention::CopyFrom(const ConnectionIntention& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConnectionIntention)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionIntention::IsInitialized() const {
  return true;
}

void ConnectionIntention::Swap(ConnectionIntention* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionIntention::InternalSwap(ConnectionIntention* other) {
  using std::swap;
  host_.Swap(&other->host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionIntention::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Connection::InitAsDefaultInstance() {
  ::_Connection_default_instance_._instance.get_mutable()->intention_ = const_cast< ::ConnectionIntention*>(
      ::ConnectionIntention::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Connection::kConnectionsFieldNumber;
const int Connection::kIntentionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Connection::Connection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Connection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Connection)
}
Connection::Connection(const Connection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      connections_(from.connections_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_intention()) {
    intention_ = new ::ConnectionIntention(*from.intention_);
  } else {
    intention_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Connection)
}

void Connection::SharedCtor() {
  intention_ = NULL;
}

Connection::~Connection() {
  // @@protoc_insertion_point(destructor:Connection)
  SharedDtor();
}

void Connection::SharedDtor() {
  if (this != internal_default_instance()) delete intention_;
}

void Connection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Connection::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Connection& Connection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Connection.base);
  return *internal_default_instance();
}


void Connection::Clear() {
// @@protoc_insertion_point(message_clear_start:Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connections_.Clear();
  if (GetArenaNoVirtual() == NULL && intention_ != NULL) {
    delete intention_;
  }
  intention_ = NULL;
  _internal_metadata_.Clear();
}

bool Connection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Connection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ConnectionStatus connections = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_connections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ConnectionIntention intention = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intention()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Connection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Connection)
  return false;
#undef DO_
}

void Connection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ConnectionStatus connections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connections_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->connections(static_cast<int>(i)),
      output);
  }

  // .ConnectionIntention intention = 2;
  if (this->has_intention()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_intention(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Connection)
}

::google::protobuf::uint8* Connection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Connection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ConnectionStatus connections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connections_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->connections(static_cast<int>(i)), deterministic, target);
  }

  // .ConnectionIntention intention = 2;
  if (this->has_intention()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_intention(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Connection)
  return target;
}

size_t Connection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Connection)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ConnectionStatus connections = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->connections_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->connections(static_cast<int>(i)));
    }
  }

  // .ConnectionIntention intention = 2;
  if (this->has_intention()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *intention_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Connection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Connection)
  GOOGLE_DCHECK_NE(&from, this);
  const Connection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Connection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Connection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Connection)
    MergeFrom(*source);
  }
}

void Connection::MergeFrom(const Connection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Connection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connections_.MergeFrom(from.connections_);
  if (from.has_intention()) {
    mutable_intention()->::ConnectionIntention::MergeFrom(from.intention());
  }
}

void Connection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Connection::CopyFrom(const Connection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Connection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Connection::IsInitialized() const {
  return true;
}

void Connection::Swap(Connection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Connection::InternalSwap(Connection* other) {
  using std::swap;
  CastToBase(&connections_)->InternalSwap(CastToBase(&other->connections_));
  swap(intention_, other->intention_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Connection::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BootstrapInformation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BootstrapInformation::kVersionFieldNumber;
const int BootstrapInformation::kSystemInformationFieldNumber;
const int BootstrapInformation::kTcpMssDefaultFieldNumber;
const int BootstrapInformation::kTargetBitrateFieldNumber;
const int BootstrapInformation::kSockBufsizeFieldNumber;
const int BootstrapInformation::kSndbufActualFieldNumber;
const int BootstrapInformation::kRcvbufActualFieldNumber;
const int BootstrapInformation::kProtocolFieldNumber;
const int BootstrapInformation::kNumberOfStreamsFieldNumber;
const int BootstrapInformation::kBlockSizeFieldNumber;
const int BootstrapInformation::kOmittedSecondsFieldNumber;
const int BootstrapInformation::kDurationFieldNumber;
const int BootstrapInformation::kBytesFieldNumber;
const int BootstrapInformation::kBlocksFieldNumber;
const int BootstrapInformation::kReverseModeFieldNumber;
const int BootstrapInformation::kTosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapInformation::BootstrapInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_BootstrapInformation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BootstrapInformation)
}
BootstrapInformation::BootstrapInformation(const BootstrapInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  system_information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_information().size() > 0) {
    system_information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_information_);
  }
  ::memcpy(&target_bitrate_, &from.target_bitrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&tos_) -
    reinterpret_cast<char*>(&target_bitrate_)) + sizeof(tos_));
  // @@protoc_insertion_point(copy_constructor:BootstrapInformation)
}

void BootstrapInformation::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tos_) -
      reinterpret_cast<char*>(&target_bitrate_)) + sizeof(tos_));
}

BootstrapInformation::~BootstrapInformation() {
  // @@protoc_insertion_point(destructor:BootstrapInformation)
  SharedDtor();
}

void BootstrapInformation::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BootstrapInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BootstrapInformation::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BootstrapInformation& BootstrapInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_BootstrapInformation.base);
  return *internal_default_instance();
}


void BootstrapInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:BootstrapInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&target_bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tos_) -
      reinterpret_cast<char*>(&target_bitrate_)) + sizeof(tos_));
  _internal_metadata_.Clear();
}

bool BootstrapInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BootstrapInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BootstrapInformation.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string system_information = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_information()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_information().data(), static_cast<int>(this->system_information().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BootstrapInformation.system_information"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tcp_mss_default = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tcp_mss_default_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double target_bitrate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_bitrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sock_bufsize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sock_bufsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sndbuf_actual = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sndbuf_actual_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rcvbuf_actual = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcvbuf_actual_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtocolType protocol = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol(static_cast< ::ProtocolType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 number_of_streams = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_of_streams_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 block_size = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 omitted_seconds = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &omitted_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bytes = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 blocks = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reverse_mode = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tos = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BootstrapInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BootstrapInformation)
  return false;
#undef DO_
}

void BootstrapInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BootstrapInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BootstrapInformation.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string system_information = 2;
  if (this->system_information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_information().data(), static_cast<int>(this->system_information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BootstrapInformation.system_information");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->system_information(), output);
  }

  // int32 tcp_mss_default = 3;
  if (this->tcp_mss_default() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tcp_mss_default(), output);
  }

  // double target_bitrate = 4;
  if (this->target_bitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->target_bitrate(), output);
  }

  // int32 sock_bufsize = 5;
  if (this->sock_bufsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sock_bufsize(), output);
  }

  // int32 sndbuf_actual = 6;
  if (this->sndbuf_actual() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sndbuf_actual(), output);
  }

  // int32 rcvbuf_actual = 7;
  if (this->rcvbuf_actual() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->rcvbuf_actual(), output);
  }

  // .ProtocolType protocol = 8;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->protocol(), output);
  }

  // int32 number_of_streams = 9;
  if (this->number_of_streams() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->number_of_streams(), output);
  }

  // int32 block_size = 10;
  if (this->block_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->block_size(), output);
  }

  // int32 omitted_seconds = 11;
  if (this->omitted_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->omitted_seconds(), output);
  }

  // int32 duration = 12;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->duration(), output);
  }

  // int32 bytes = 13;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->bytes(), output);
  }

  // int32 blocks = 14;
  if (this->blocks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->blocks(), output);
  }

  // bool reverse_mode = 15;
  if (this->reverse_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->reverse_mode(), output);
  }

  // int32 tos = 16;
  if (this->tos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->tos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BootstrapInformation)
}

::google::protobuf::uint8* BootstrapInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BootstrapInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BootstrapInformation.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string system_information = 2;
  if (this->system_information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_information().data(), static_cast<int>(this->system_information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BootstrapInformation.system_information");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->system_information(), target);
  }

  // int32 tcp_mss_default = 3;
  if (this->tcp_mss_default() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tcp_mss_default(), target);
  }

  // double target_bitrate = 4;
  if (this->target_bitrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->target_bitrate(), target);
  }

  // int32 sock_bufsize = 5;
  if (this->sock_bufsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sock_bufsize(), target);
  }

  // int32 sndbuf_actual = 6;
  if (this->sndbuf_actual() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sndbuf_actual(), target);
  }

  // int32 rcvbuf_actual = 7;
  if (this->rcvbuf_actual() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->rcvbuf_actual(), target);
  }

  // .ProtocolType protocol = 8;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->protocol(), target);
  }

  // int32 number_of_streams = 9;
  if (this->number_of_streams() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->number_of_streams(), target);
  }

  // int32 block_size = 10;
  if (this->block_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->block_size(), target);
  }

  // int32 omitted_seconds = 11;
  if (this->omitted_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->omitted_seconds(), target);
  }

  // int32 duration = 12;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->duration(), target);
  }

  // int32 bytes = 13;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->bytes(), target);
  }

  // int32 blocks = 14;
  if (this->blocks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->blocks(), target);
  }

  // bool reverse_mode = 15;
  if (this->reverse_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->reverse_mode(), target);
  }

  // int32 tos = 16;
  if (this->tos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->tos(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BootstrapInformation)
  return target;
}

size_t BootstrapInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BootstrapInformation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string system_information = 2;
  if (this->system_information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_information());
  }

  // double target_bitrate = 4;
  if (this->target_bitrate() != 0) {
    total_size += 1 + 8;
  }

  // int32 tcp_mss_default = 3;
  if (this->tcp_mss_default() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tcp_mss_default());
  }

  // int32 sock_bufsize = 5;
  if (this->sock_bufsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sock_bufsize());
  }

  // int32 sndbuf_actual = 6;
  if (this->sndbuf_actual() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sndbuf_actual());
  }

  // int32 rcvbuf_actual = 7;
  if (this->rcvbuf_actual() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcvbuf_actual());
  }

  // .ProtocolType protocol = 8;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
  }

  // int32 number_of_streams = 9;
  if (this->number_of_streams() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number_of_streams());
  }

  // int32 block_size = 10;
  if (this->block_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_size());
  }

  // int32 omitted_seconds = 11;
  if (this->omitted_seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->omitted_seconds());
  }

  // int32 duration = 12;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 bytes = 13;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bytes());
  }

  // int32 blocks = 14;
  if (this->blocks() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blocks());
  }

  // bool reverse_mode = 15;
  if (this->reverse_mode() != 0) {
    total_size += 1 + 1;
  }

  // int32 tos = 16;
  if (this->tos() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BootstrapInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BootstrapInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const BootstrapInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BootstrapInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BootstrapInformation)
    MergeFrom(*source);
  }
}

void BootstrapInformation::MergeFrom(const BootstrapInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BootstrapInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.system_information().size() > 0) {

    system_information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_information_);
  }
  if (from.target_bitrate() != 0) {
    set_target_bitrate(from.target_bitrate());
  }
  if (from.tcp_mss_default() != 0) {
    set_tcp_mss_default(from.tcp_mss_default());
  }
  if (from.sock_bufsize() != 0) {
    set_sock_bufsize(from.sock_bufsize());
  }
  if (from.sndbuf_actual() != 0) {
    set_sndbuf_actual(from.sndbuf_actual());
  }
  if (from.rcvbuf_actual() != 0) {
    set_rcvbuf_actual(from.rcvbuf_actual());
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
  if (from.number_of_streams() != 0) {
    set_number_of_streams(from.number_of_streams());
  }
  if (from.block_size() != 0) {
    set_block_size(from.block_size());
  }
  if (from.omitted_seconds() != 0) {
    set_omitted_seconds(from.omitted_seconds());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.blocks() != 0) {
    set_blocks(from.blocks());
  }
  if (from.reverse_mode() != 0) {
    set_reverse_mode(from.reverse_mode());
  }
  if (from.tos() != 0) {
    set_tos(from.tos());
  }
}

void BootstrapInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BootstrapInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapInformation::CopyFrom(const BootstrapInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BootstrapInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BootstrapInformation::IsInitialized() const {
  return true;
}

void BootstrapInformation::Swap(BootstrapInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapInformation::InternalSwap(BootstrapInformation* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  system_information_.Swap(&other->system_information_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_bitrate_, other->target_bitrate_);
  swap(tcp_mss_default_, other->tcp_mss_default_);
  swap(sock_bufsize_, other->sock_bufsize_);
  swap(sndbuf_actual_, other->sndbuf_actual_);
  swap(rcvbuf_actual_, other->rcvbuf_actual_);
  swap(protocol_, other->protocol_);
  swap(number_of_streams_, other->number_of_streams_);
  swap(block_size_, other->block_size_);
  swap(omitted_seconds_, other->omitted_seconds_);
  swap(duration_, other->duration_);
  swap(bytes_, other->bytes_);
  swap(blocks_, other->blocks_);
  swap(reverse_mode_, other->reverse_mode_);
  swap(tos_, other->tos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BootstrapInformation::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Header::InitAsDefaultInstance() {
  ::_Header_default_instance_._instance.get_mutable()->connection_ = const_cast< ::Connection*>(
      ::Connection::internal_default_instance());
  ::_Header_default_instance_._instance.get_mutable()->information_ = const_cast< ::BootstrapInformation*>(
      ::BootstrapInformation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kCookieFieldNumber;
const int Header::kConnectionFieldNumber;
const int Header::kInformationFieldNumber;
const int Header::kStartingTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Header.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cookie().size() > 0) {
    cookie_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cookie_);
  }
  if (from.has_connection()) {
    connection_ = new ::Connection(*from.connection_);
  } else {
    connection_ = NULL;
  }
  if (from.has_information()) {
    information_ = new ::BootstrapInformation(*from.information_);
  } else {
    information_ = NULL;
  }
  starting_time_ = from.starting_time_;
  // @@protoc_insertion_point(copy_constructor:Header)
}

void Header::SharedCtor() {
  cookie_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&connection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starting_time_) -
      reinterpret_cast<char*>(&connection_)) + sizeof(starting_time_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:Header)
  SharedDtor();
}

void Header::SharedDtor() {
  cookie_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete connection_;
  if (this != internal_default_instance()) delete information_;
}

void Header::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Header& Header::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Header.base);
  return *internal_default_instance();
}


void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
  if (GetArenaNoVirtual() == NULL && information_ != NULL) {
    delete information_;
  }
  information_ = NULL;
  starting_time_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Header)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cookie = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cookie()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cookie().data(), static_cast<int>(this->cookie().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Header.cookie"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Connection connection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BootstrapInformation information = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 starting_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &starting_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cookie = 1;
  if (this->cookie().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cookie().data(), static_cast<int>(this->cookie().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Header.cookie");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cookie(), output);
  }

  // .Connection connection = 2;
  if (this->has_connection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_connection(), output);
  }

  // .BootstrapInformation information = 3;
  if (this->has_information()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_information(), output);
  }

  // int64 starting_time = 4;
  if (this->starting_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->starting_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cookie = 1;
  if (this->cookie().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cookie().data(), static_cast<int>(this->cookie().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Header.cookie");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cookie(), target);
  }

  // .Connection connection = 2;
  if (this->has_connection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_connection(), deterministic, target);
  }

  // .BootstrapInformation information = 3;
  if (this->has_information()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_information(), deterministic, target);
  }

  // int64 starting_time = 4;
  if (this->starting_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->starting_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cookie = 1;
  if (this->cookie().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cookie());
  }

  // .Connection connection = 2;
  if (this->has_connection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connection_);
  }

  // .BootstrapInformation information = 3;
  if (this->has_information()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *information_);
  }

  // int64 starting_time = 4;
  if (this->starting_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->starting_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cookie().size() > 0) {

    cookie_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cookie_);
  }
  if (from.has_connection()) {
    mutable_connection()->::Connection::MergeFrom(from.connection());
  }
  if (from.has_information()) {
    mutable_information()->::BootstrapInformation::MergeFrom(from.information());
  }
  if (from.starting_time() != 0) {
    set_starting_time(from.starting_time());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  using std::swap;
  cookie_.Swap(&other->cookie_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(connection_, other->connection_);
  swap(information_, other->information_);
  swap(starting_time_, other->starting_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stream::kSocketNumberFieldNumber;
const int Stream::kStartFieldNumber;
const int Stream::kEndFieldNumber;
const int Stream::kRangeFieldNumber;
const int Stream::kBytesFieldNumber;
const int Stream::kBitsPerSecondFieldNumber;
const int Stream::kOmittedFieldNumber;
const int Stream::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stream::Stream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Stream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Stream)
}
Stream::Stream(const Stream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&bits_per_second_) -
    reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  // @@protoc_insertion_point(copy_constructor:Stream)
}

void Stream::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
}

Stream::~Stream() {
  // @@protoc_insertion_point(destructor:Stream)
  SharedDtor();
}

void Stream::SharedDtor() {
}

void Stream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Stream::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stream& Stream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Stream.base);
  return *internal_default_instance();
}


void Stream::Clear() {
// @@protoc_insertion_point(message_clear_start:Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  _internal_metadata_.Clear();
}

bool Stream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Stream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 socket_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool omitted = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &omitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sender = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Stream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Stream)
  return false;
#undef DO_
}

void Stream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket_number(), output);
  }

  // double start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start(), output);
  }

  // double end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end(), output);
  }

  // double range = 4;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->range(), output);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes(), output);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bits_per_second(), output);
  }

  // bool omitted = 7;
  if (this->omitted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->omitted(), output);
  }

  // bool sender = 8;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Stream)
}

::google::protobuf::uint8* Stream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Stream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket_number(), target);
  }

  // double start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start(), target);
  }

  // double end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end(), target);
  }

  // double range = 4;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->range(), target);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes(), target);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bits_per_second(), target);
  }

  // bool omitted = 7;
  if (this->omitted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->omitted(), target);
  }

  // bool sender = 8;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Stream)
  return target;
}

size_t Stream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Stream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 2;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 3;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 4;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket_number());
  }

  // bool omitted = 7;
  if (this->omitted() != 0) {
    total_size += 1 + 1;
  }

  // bool sender = 8;
  if (this->sender() != 0) {
    total_size += 1 + 1;
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Stream)
  GOOGLE_DCHECK_NE(&from, this);
  const Stream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Stream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Stream)
    MergeFrom(*source);
  }
}

void Stream::MergeFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Stream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.socket_number() != 0) {
    set_socket_number(from.socket_number());
  }
  if (from.omitted() != 0) {
    set_omitted(from.omitted());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
}

void Stream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stream::CopyFrom(const Stream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Stream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stream::IsInitialized() const {
  return true;
}

void Stream::Swap(Stream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stream::InternalSwap(Stream* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(bytes_, other->bytes_);
  swap(socket_number_, other->socket_number_);
  swap(omitted_, other->omitted_);
  swap(sender_, other->sender_);
  swap(bits_per_second_, other->bits_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Stream::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Interval::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Interval::kStreamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Interval::Interval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Interval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interval)
}
Interval::Interval(const Interval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      streams_(from.streams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Interval)
}

void Interval::SharedCtor() {
}

Interval::~Interval() {
  // @@protoc_insertion_point(destructor:Interval)
  SharedDtor();
}

void Interval::SharedDtor() {
}

void Interval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Interval::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Interval& Interval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Interval.base);
  return *internal_default_instance();
}


void Interval::Clear() {
// @@protoc_insertion_point(message_clear_start:Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  streams_.Clear();
  _internal_metadata_.Clear();
}

bool Interval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Stream streams = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_streams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interval)
  return false;
#undef DO_
}

void Interval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Stream streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->streams(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Interval)
}

::google::protobuf::uint8* Interval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Stream streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->streams(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Interval)
  return target;
}

size_t Interval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Stream streams = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->streams_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->streams(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Interval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interval)
  GOOGLE_DCHECK_NE(&from, this);
  const Interval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Interval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interval)
    MergeFrom(*source);
  }
}

void Interval::MergeFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  streams_.MergeFrom(from.streams_);
}

void Interval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interval::CopyFrom(const Interval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interval::IsInitialized() const {
  return true;
}

void Interval::Swap(Interval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interval::InternalSwap(Interval* other) {
  using std::swap;
  CastToBase(&streams_)->InternalSwap(CastToBase(&other->streams_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Interval::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CumulativeInterval::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CumulativeInterval::kStartFieldNumber;
const int CumulativeInterval::kEndFieldNumber;
const int CumulativeInterval::kRangeFieldNumber;
const int CumulativeInterval::kBytesFieldNumber;
const int CumulativeInterval::kBitsPerSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CumulativeInterval::CumulativeInterval()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_CumulativeInterval.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CumulativeInterval)
}
CumulativeInterval::CumulativeInterval(const CumulativeInterval& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&bits_per_second_) -
    reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  // @@protoc_insertion_point(copy_constructor:CumulativeInterval)
}

void CumulativeInterval::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
}

CumulativeInterval::~CumulativeInterval() {
  // @@protoc_insertion_point(destructor:CumulativeInterval)
  SharedDtor();
}

void CumulativeInterval::SharedDtor() {
}

void CumulativeInterval::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CumulativeInterval::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CumulativeInterval& CumulativeInterval::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_CumulativeInterval.base);
  return *internal_default_instance();
}


void CumulativeInterval::Clear() {
// @@protoc_insertion_point(message_clear_start:CumulativeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  _internal_metadata_.Clear();
}

bool CumulativeInterval::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CumulativeInterval)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CumulativeInterval)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CumulativeInterval)
  return false;
#undef DO_
}

void CumulativeInterval::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CumulativeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start(), output);
  }

  // double end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end(), output);
  }

  // double range = 3;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->range(), output);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bits_per_second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CumulativeInterval)
}

::google::protobuf::uint8* CumulativeInterval::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CumulativeInterval)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start(), target);
  }

  // double end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end(), target);
  }

  // double range = 3;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->range(), target);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bits_per_second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CumulativeInterval)
  return target;
}

size_t CumulativeInterval::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CumulativeInterval)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 1;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 2;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 3;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CumulativeInterval::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CumulativeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  const CumulativeInterval* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CumulativeInterval>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CumulativeInterval)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CumulativeInterval)
    MergeFrom(*source);
  }
}

void CumulativeInterval::MergeFrom(const CumulativeInterval& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CumulativeInterval)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
}

void CumulativeInterval::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CumulativeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CumulativeInterval::CopyFrom(const CumulativeInterval& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CumulativeInterval)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CumulativeInterval::IsInitialized() const {
  return true;
}

void CumulativeInterval::Swap(CumulativeInterval* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CumulativeInterval::InternalSwap(CumulativeInterval* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(bytes_, other->bytes_);
  swap(bits_per_second_, other->bits_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CumulativeInterval::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedSendingStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedSendingStream::kSocketNumberFieldNumber;
const int ReportedSendingStream::kStartFieldNumber;
const int ReportedSendingStream::kEndFieldNumber;
const int ReportedSendingStream::kRangeFieldNumber;
const int ReportedSendingStream::kBytesFieldNumber;
const int ReportedSendingStream::kBitsPerSecondFieldNumber;
const int ReportedSendingStream::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedSendingStream::ReportedSendingStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedSendingStream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedSendingStream)
}
ReportedSendingStream::ReportedSendingStream(const ReportedSendingStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&bits_per_second_) -
    reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  // @@protoc_insertion_point(copy_constructor:ReportedSendingStream)
}

void ReportedSendingStream::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
}

ReportedSendingStream::~ReportedSendingStream() {
  // @@protoc_insertion_point(destructor:ReportedSendingStream)
  SharedDtor();
}

void ReportedSendingStream::SharedDtor() {
}

void ReportedSendingStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedSendingStream::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedSendingStream& ReportedSendingStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedSendingStream.base);
  return *internal_default_instance();
}


void ReportedSendingStream::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedSendingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  _internal_metadata_.Clear();
}

bool ReportedSendingStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedSendingStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 socket_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sender = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedSendingStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedSendingStream)
  return false;
#undef DO_
}

void ReportedSendingStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedSendingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket_number(), output);
  }

  // double start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start(), output);
  }

  // double end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end(), output);
  }

  // double range = 4;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->range(), output);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes(), output);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bits_per_second(), output);
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedSendingStream)
}

::google::protobuf::uint8* ReportedSendingStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedSendingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket_number(), target);
  }

  // double start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start(), target);
  }

  // double end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end(), target);
  }

  // double range = 4;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->range(), target);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes(), target);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bits_per_second(), target);
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedSendingStream)
  return target;
}

size_t ReportedSendingStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedSendingStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 2;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 3;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 4;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket_number());
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    total_size += 1 + 1;
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedSendingStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedSendingStream)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedSendingStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedSendingStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedSendingStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedSendingStream)
    MergeFrom(*source);
  }
}

void ReportedSendingStream::MergeFrom(const ReportedSendingStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedSendingStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.socket_number() != 0) {
    set_socket_number(from.socket_number());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
}

void ReportedSendingStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedSendingStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedSendingStream::CopyFrom(const ReportedSendingStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedSendingStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedSendingStream::IsInitialized() const {
  return true;
}

void ReportedSendingStream::Swap(ReportedSendingStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedSendingStream::InternalSwap(ReportedSendingStream* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(socket_number_, other->socket_number_);
  swap(sender_, other->sender_);
  swap(bytes_, other->bytes_);
  swap(bits_per_second_, other->bits_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedSendingStream::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedReceivingStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedReceivingStream::kSocketNumberFieldNumber;
const int ReportedReceivingStream::kStartFieldNumber;
const int ReportedReceivingStream::kEndFieldNumber;
const int ReportedReceivingStream::kRangeFieldNumber;
const int ReportedReceivingStream::kBytesFieldNumber;
const int ReportedReceivingStream::kBitsPerSecondFieldNumber;
const int ReportedReceivingStream::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedReceivingStream::ReportedReceivingStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedReceivingStream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedReceivingStream)
}
ReportedReceivingStream::ReportedReceivingStream(const ReportedReceivingStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&bits_per_second_) -
    reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  // @@protoc_insertion_point(copy_constructor:ReportedReceivingStream)
}

void ReportedReceivingStream::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
}

ReportedReceivingStream::~ReportedReceivingStream() {
  // @@protoc_insertion_point(destructor:ReportedReceivingStream)
  SharedDtor();
}

void ReportedReceivingStream::SharedDtor() {
}

void ReportedReceivingStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedReceivingStream::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedReceivingStream& ReportedReceivingStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedReceivingStream.base);
  return *internal_default_instance();
}


void ReportedReceivingStream::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedReceivingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bits_per_second_) -
      reinterpret_cast<char*>(&start_)) + sizeof(bits_per_second_));
  _internal_metadata_.Clear();
}

bool ReportedReceivingStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedReceivingStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 socket_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sender = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedReceivingStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedReceivingStream)
  return false;
#undef DO_
}

void ReportedReceivingStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedReceivingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket_number(), output);
  }

  // double start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start(), output);
  }

  // double end = 3;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end(), output);
  }

  // double range = 4;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->range(), output);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes(), output);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->bits_per_second(), output);
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedReceivingStream)
}

::google::protobuf::uint8* ReportedReceivingStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedReceivingStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket_number(), target);
  }

  // double start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start(), target);
  }

  // double end = 3;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end(), target);
  }

  // double range = 4;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->range(), target);
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes(), target);
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->bits_per_second(), target);
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedReceivingStream)
  return target;
}

size_t ReportedReceivingStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedReceivingStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 2;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 3;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 4;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // int32 socket_number = 1;
  if (this->socket_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->socket_number());
  }

  // bool sender = 7;
  if (this->sender() != 0) {
    total_size += 1 + 1;
  }

  // uint64 bytes = 5;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // double bits_per_second = 6;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedReceivingStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedReceivingStream)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedReceivingStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedReceivingStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedReceivingStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedReceivingStream)
    MergeFrom(*source);
  }
}

void ReportedReceivingStream::MergeFrom(const ReportedReceivingStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedReceivingStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.socket_number() != 0) {
    set_socket_number(from.socket_number());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
}

void ReportedReceivingStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedReceivingStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedReceivingStream::CopyFrom(const ReportedReceivingStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedReceivingStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedReceivingStream::IsInitialized() const {
  return true;
}

void ReportedReceivingStream::Swap(ReportedReceivingStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedReceivingStream::InternalSwap(ReportedReceivingStream* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(socket_number_, other->socket_number_);
  swap(sender_, other->sender_);
  swap(bytes_, other->bytes_);
  swap(bits_per_second_, other->bits_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedReceivingStream::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedStreamsPair::InitAsDefaultInstance() {
  ::_ReportedStreamsPair_default_instance_._instance.get_mutable()->sending_stream_ = const_cast< ::ReportedSendingStream*>(
      ::ReportedSendingStream::internal_default_instance());
  ::_ReportedStreamsPair_default_instance_._instance.get_mutable()->receiving_stream_ = const_cast< ::ReportedReceivingStream*>(
      ::ReportedReceivingStream::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedStreamsPair::kSendingStreamFieldNumber;
const int ReportedStreamsPair::kReceivingStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedStreamsPair::ReportedStreamsPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedStreamsPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedStreamsPair)
}
ReportedStreamsPair::ReportedStreamsPair(const ReportedStreamsPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sending_stream()) {
    sending_stream_ = new ::ReportedSendingStream(*from.sending_stream_);
  } else {
    sending_stream_ = NULL;
  }
  if (from.has_receiving_stream()) {
    receiving_stream_ = new ::ReportedReceivingStream(*from.receiving_stream_);
  } else {
    receiving_stream_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ReportedStreamsPair)
}

void ReportedStreamsPair::SharedCtor() {
  ::memset(&sending_stream_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiving_stream_) -
      reinterpret_cast<char*>(&sending_stream_)) + sizeof(receiving_stream_));
}

ReportedStreamsPair::~ReportedStreamsPair() {
  // @@protoc_insertion_point(destructor:ReportedStreamsPair)
  SharedDtor();
}

void ReportedStreamsPair::SharedDtor() {
  if (this != internal_default_instance()) delete sending_stream_;
  if (this != internal_default_instance()) delete receiving_stream_;
}

void ReportedStreamsPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedStreamsPair::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedStreamsPair& ReportedStreamsPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedStreamsPair.base);
  return *internal_default_instance();
}


void ReportedStreamsPair::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedStreamsPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sending_stream_ != NULL) {
    delete sending_stream_;
  }
  sending_stream_ = NULL;
  if (GetArenaNoVirtual() == NULL && receiving_stream_ != NULL) {
    delete receiving_stream_;
  }
  receiving_stream_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportedStreamsPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedStreamsPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ReportedSendingStream sending_stream = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sending_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ReportedReceivingStream receiving_stream = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_receiving_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedStreamsPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedStreamsPair)
  return false;
#undef DO_
}

void ReportedStreamsPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedStreamsPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ReportedSendingStream sending_stream = 1;
  if (this->has_sending_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sending_stream(), output);
  }

  // .ReportedReceivingStream receiving_stream = 2;
  if (this->has_receiving_stream()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_receiving_stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedStreamsPair)
}

::google::protobuf::uint8* ReportedStreamsPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedStreamsPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ReportedSendingStream sending_stream = 1;
  if (this->has_sending_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sending_stream(), deterministic, target);
  }

  // .ReportedReceivingStream receiving_stream = 2;
  if (this->has_receiving_stream()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_receiving_stream(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedStreamsPair)
  return target;
}

size_t ReportedStreamsPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedStreamsPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ReportedSendingStream sending_stream = 1;
  if (this->has_sending_stream()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sending_stream_);
  }

  // .ReportedReceivingStream receiving_stream = 2;
  if (this->has_receiving_stream()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *receiving_stream_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedStreamsPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedStreamsPair)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedStreamsPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedStreamsPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedStreamsPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedStreamsPair)
    MergeFrom(*source);
  }
}

void ReportedStreamsPair::MergeFrom(const ReportedStreamsPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedStreamsPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sending_stream()) {
    mutable_sending_stream()->::ReportedSendingStream::MergeFrom(from.sending_stream());
  }
  if (from.has_receiving_stream()) {
    mutable_receiving_stream()->::ReportedReceivingStream::MergeFrom(from.receiving_stream());
  }
}

void ReportedStreamsPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedStreamsPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedStreamsPair::CopyFrom(const ReportedStreamsPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedStreamsPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedStreamsPair::IsInitialized() const {
  return true;
}

void ReportedStreamsPair::Swap(ReportedStreamsPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedStreamsPair::InternalSwap(ReportedStreamsPair* other) {
  using std::swap;
  swap(sending_stream_, other->sending_stream_);
  swap(receiving_stream_, other->receiving_stream_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedStreamsPair::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedSendingSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedSendingSummary::kStartFieldNumber;
const int ReportedSendingSummary::kEndFieldNumber;
const int ReportedSendingSummary::kRangeFieldNumber;
const int ReportedSendingSummary::kBytesFieldNumber;
const int ReportedSendingSummary::kBitsPerSecondFieldNumber;
const int ReportedSendingSummary::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedSendingSummary::ReportedSendingSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedSendingSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedSendingSummary)
}
ReportedSendingSummary::ReportedSendingSummary(const ReportedSendingSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&sender_) -
    reinterpret_cast<char*>(&start_)) + sizeof(sender_));
  // @@protoc_insertion_point(copy_constructor:ReportedSendingSummary)
}

void ReportedSendingSummary::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_) -
      reinterpret_cast<char*>(&start_)) + sizeof(sender_));
}

ReportedSendingSummary::~ReportedSendingSummary() {
  // @@protoc_insertion_point(destructor:ReportedSendingSummary)
  SharedDtor();
}

void ReportedSendingSummary::SharedDtor() {
}

void ReportedSendingSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedSendingSummary::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedSendingSummary& ReportedSendingSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedSendingSummary.base);
  return *internal_default_instance();
}


void ReportedSendingSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedSendingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_) -
      reinterpret_cast<char*>(&start_)) + sizeof(sender_));
  _internal_metadata_.Clear();
}

bool ReportedSendingSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedSendingSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sender = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedSendingSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedSendingSummary)
  return false;
#undef DO_
}

void ReportedSendingSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedSendingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start(), output);
  }

  // double end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end(), output);
  }

  // double range = 3;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->range(), output);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bits_per_second(), output);
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedSendingSummary)
}

::google::protobuf::uint8* ReportedSendingSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedSendingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start(), target);
  }

  // double end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end(), target);
  }

  // double range = 3;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->range(), target);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bits_per_second(), target);
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedSendingSummary)
  return target;
}

size_t ReportedSendingSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedSendingSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 1;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 2;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 3;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedSendingSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedSendingSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedSendingSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedSendingSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedSendingSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedSendingSummary)
    MergeFrom(*source);
  }
}

void ReportedSendingSummary::MergeFrom(const ReportedSendingSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedSendingSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
}

void ReportedSendingSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedSendingSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedSendingSummary::CopyFrom(const ReportedSendingSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedSendingSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedSendingSummary::IsInitialized() const {
  return true;
}

void ReportedSendingSummary::Swap(ReportedSendingSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedSendingSummary::InternalSwap(ReportedSendingSummary* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(bytes_, other->bytes_);
  swap(bits_per_second_, other->bits_per_second_);
  swap(sender_, other->sender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedSendingSummary::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedReceivingSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedReceivingSummary::kStartFieldNumber;
const int ReportedReceivingSummary::kEndFieldNumber;
const int ReportedReceivingSummary::kRangeFieldNumber;
const int ReportedReceivingSummary::kBytesFieldNumber;
const int ReportedReceivingSummary::kBitsPerSecondFieldNumber;
const int ReportedReceivingSummary::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedReceivingSummary::ReportedReceivingSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedReceivingSummary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedReceivingSummary)
}
ReportedReceivingSummary::ReportedReceivingSummary(const ReportedReceivingSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&sender_) -
    reinterpret_cast<char*>(&start_)) + sizeof(sender_));
  // @@protoc_insertion_point(copy_constructor:ReportedReceivingSummary)
}

void ReportedReceivingSummary::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_) -
      reinterpret_cast<char*>(&start_)) + sizeof(sender_));
}

ReportedReceivingSummary::~ReportedReceivingSummary() {
  // @@protoc_insertion_point(destructor:ReportedReceivingSummary)
  SharedDtor();
}

void ReportedReceivingSummary::SharedDtor() {
}

void ReportedReceivingSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedReceivingSummary::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedReceivingSummary& ReportedReceivingSummary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedReceivingSummary.base);
  return *internal_default_instance();
}


void ReportedReceivingSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedReceivingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sender_) -
      reinterpret_cast<char*>(&start_)) + sizeof(sender_));
  _internal_metadata_.Clear();
}

bool ReportedReceivingSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedReceivingSummary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bits_per_second = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bits_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sender = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sender_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedReceivingSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedReceivingSummary)
  return false;
#undef DO_
}

void ReportedReceivingSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedReceivingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start(), output);
  }

  // double end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end(), output);
  }

  // double range = 3;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->range(), output);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->bits_per_second(), output);
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedReceivingSummary)
}

::google::protobuf::uint8* ReportedReceivingSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedReceivingSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start(), target);
  }

  // double end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end(), target);
  }

  // double range = 3;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->range(), target);
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->bits_per_second(), target);
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedReceivingSummary)
  return target;
}

size_t ReportedReceivingSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedReceivingSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 1;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 2;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  // double range = 3;
  if (this->range() != 0) {
    total_size += 1 + 8;
  }

  // uint64 bytes = 4;
  if (this->bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bytes());
  }

  // double bits_per_second = 5;
  if (this->bits_per_second() != 0) {
    total_size += 1 + 8;
  }

  // bool sender = 6;
  if (this->sender() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedReceivingSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedReceivingSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedReceivingSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedReceivingSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedReceivingSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedReceivingSummary)
    MergeFrom(*source);
  }
}

void ReportedReceivingSummary::MergeFrom(const ReportedReceivingSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedReceivingSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.bytes() != 0) {
    set_bytes(from.bytes());
  }
  if (from.bits_per_second() != 0) {
    set_bits_per_second(from.bits_per_second());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
}

void ReportedReceivingSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedReceivingSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedReceivingSummary::CopyFrom(const ReportedReceivingSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedReceivingSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedReceivingSummary::IsInitialized() const {
  return true;
}

void ReportedReceivingSummary::Swap(ReportedReceivingSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedReceivingSummary::InternalSwap(ReportedReceivingSummary* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(range_, other->range_);
  swap(bytes_, other->bytes_);
  swap(bits_per_second_, other->bits_per_second_);
  swap(sender_, other->sender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedReceivingSummary::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportedSummariesPair::InitAsDefaultInstance() {
  ::_ReportedSummariesPair_default_instance_._instance.get_mutable()->sending_summary_ = const_cast< ::ReportedSendingSummary*>(
      ::ReportedSendingSummary::internal_default_instance());
  ::_ReportedSummariesPair_default_instance_._instance.get_mutable()->receiving_summary_ = const_cast< ::ReportedReceivingSummary*>(
      ::ReportedReceivingSummary::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportedSummariesPair::kSendingSummaryFieldNumber;
const int ReportedSummariesPair::kReceivingSummaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportedSummariesPair::ReportedSummariesPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ReportedSummariesPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReportedSummariesPair)
}
ReportedSummariesPair::ReportedSummariesPair(const ReportedSummariesPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sending_summary()) {
    sending_summary_ = new ::ReportedSendingSummary(*from.sending_summary_);
  } else {
    sending_summary_ = NULL;
  }
  if (from.has_receiving_summary()) {
    receiving_summary_ = new ::ReportedReceivingSummary(*from.receiving_summary_);
  } else {
    receiving_summary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ReportedSummariesPair)
}

void ReportedSummariesPair::SharedCtor() {
  ::memset(&sending_summary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiving_summary_) -
      reinterpret_cast<char*>(&sending_summary_)) + sizeof(receiving_summary_));
}

ReportedSummariesPair::~ReportedSummariesPair() {
  // @@protoc_insertion_point(destructor:ReportedSummariesPair)
  SharedDtor();
}

void ReportedSummariesPair::SharedDtor() {
  if (this != internal_default_instance()) delete sending_summary_;
  if (this != internal_default_instance()) delete receiving_summary_;
}

void ReportedSummariesPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportedSummariesPair::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportedSummariesPair& ReportedSummariesPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ReportedSummariesPair.base);
  return *internal_default_instance();
}


void ReportedSummariesPair::Clear() {
// @@protoc_insertion_point(message_clear_start:ReportedSummariesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sending_summary_ != NULL) {
    delete sending_summary_;
  }
  sending_summary_ = NULL;
  if (GetArenaNoVirtual() == NULL && receiving_summary_ != NULL) {
    delete receiving_summary_;
  }
  receiving_summary_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportedSummariesPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReportedSummariesPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ReportedSendingSummary sending_summary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sending_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ReportedReceivingSummary receiving_summary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_receiving_summary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReportedSummariesPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReportedSummariesPair)
  return false;
#undef DO_
}

void ReportedSummariesPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReportedSummariesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ReportedSendingSummary sending_summary = 1;
  if (this->has_sending_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sending_summary(), output);
  }

  // .ReportedReceivingSummary receiving_summary = 2;
  if (this->has_receiving_summary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_receiving_summary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReportedSummariesPair)
}

::google::protobuf::uint8* ReportedSummariesPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReportedSummariesPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ReportedSendingSummary sending_summary = 1;
  if (this->has_sending_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sending_summary(), deterministic, target);
  }

  // .ReportedReceivingSummary receiving_summary = 2;
  if (this->has_receiving_summary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_receiving_summary(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReportedSummariesPair)
  return target;
}

size_t ReportedSummariesPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReportedSummariesPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ReportedSendingSummary sending_summary = 1;
  if (this->has_sending_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sending_summary_);
  }

  // .ReportedReceivingSummary receiving_summary = 2;
  if (this->has_receiving_summary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *receiving_summary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportedSummariesPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReportedSummariesPair)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportedSummariesPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportedSummariesPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReportedSummariesPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReportedSummariesPair)
    MergeFrom(*source);
  }
}

void ReportedSummariesPair::MergeFrom(const ReportedSummariesPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReportedSummariesPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sending_summary()) {
    mutable_sending_summary()->::ReportedSendingSummary::MergeFrom(from.sending_summary());
  }
  if (from.has_receiving_summary()) {
    mutable_receiving_summary()->::ReportedReceivingSummary::MergeFrom(from.receiving_summary());
  }
}

void ReportedSummariesPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReportedSummariesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportedSummariesPair::CopyFrom(const ReportedSummariesPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReportedSummariesPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportedSummariesPair::IsInitialized() const {
  return true;
}

void ReportedSummariesPair::Swap(ReportedSummariesPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportedSummariesPair::InternalSwap(ReportedSummariesPair* other) {
  using std::swap;
  swap(sending_summary_, other->sending_summary_);
  swap(receiving_summary_, other->receiving_summary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportedSummariesPair::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceStatistics::kHostTotalFieldNumber;
const int ResourceStatistics::kHostUserFieldNumber;
const int ResourceStatistics::kHostSystemFieldNumber;
const int ResourceStatistics::kRemoteTotalFieldNumber;
const int ResourceStatistics::kRemoteUserFieldNumber;
const int ResourceStatistics::kRemoteSystemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceStatistics::ResourceStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_ResourceStatistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResourceStatistics)
}
ResourceStatistics::ResourceStatistics(const ResourceStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&host_total_, &from.host_total_,
    static_cast<size_t>(reinterpret_cast<char*>(&remote_system_) -
    reinterpret_cast<char*>(&host_total_)) + sizeof(remote_system_));
  // @@protoc_insertion_point(copy_constructor:ResourceStatistics)
}

void ResourceStatistics::SharedCtor() {
  ::memset(&host_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_system_) -
      reinterpret_cast<char*>(&host_total_)) + sizeof(remote_system_));
}

ResourceStatistics::~ResourceStatistics() {
  // @@protoc_insertion_point(destructor:ResourceStatistics)
  SharedDtor();
}

void ResourceStatistics::SharedDtor() {
}

void ResourceStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceStatistics::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceStatistics& ResourceStatistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_ResourceStatistics.base);
  return *internal_default_instance();
}


void ResourceStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:ResourceStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&host_total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remote_system_) -
      reinterpret_cast<char*>(&host_total_)) + sizeof(remote_system_));
  _internal_metadata_.Clear();
}

bool ResourceStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResourceStatistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double host_total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double host_system = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &host_system_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double remote_total = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &remote_total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double remote_user = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &remote_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double remote_system = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &remote_system_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResourceStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResourceStatistics)
  return false;
#undef DO_
}

void ResourceStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResourceStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double host_total = 1;
  if (this->host_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->host_total(), output);
  }

  // double host_user = 2;
  if (this->host_user() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->host_user(), output);
  }

  // double host_system = 3;
  if (this->host_system() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->host_system(), output);
  }

  // double remote_total = 4;
  if (this->remote_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->remote_total(), output);
  }

  // double remote_user = 5;
  if (this->remote_user() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->remote_user(), output);
  }

  // double remote_system = 6;
  if (this->remote_system() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->remote_system(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ResourceStatistics)
}

::google::protobuf::uint8* ResourceStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResourceStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double host_total = 1;
  if (this->host_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->host_total(), target);
  }

  // double host_user = 2;
  if (this->host_user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->host_user(), target);
  }

  // double host_system = 3;
  if (this->host_system() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->host_system(), target);
  }

  // double remote_total = 4;
  if (this->remote_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->remote_total(), target);
  }

  // double remote_user = 5;
  if (this->remote_user() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->remote_user(), target);
  }

  // double remote_system = 6;
  if (this->remote_system() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->remote_system(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResourceStatistics)
  return target;
}

size_t ResourceStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ResourceStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double host_total = 1;
  if (this->host_total() != 0) {
    total_size += 1 + 8;
  }

  // double host_user = 2;
  if (this->host_user() != 0) {
    total_size += 1 + 8;
  }

  // double host_system = 3;
  if (this->host_system() != 0) {
    total_size += 1 + 8;
  }

  // double remote_total = 4;
  if (this->remote_total() != 0) {
    total_size += 1 + 8;
  }

  // double remote_user = 5;
  if (this->remote_user() != 0) {
    total_size += 1 + 8;
  }

  // double remote_system = 6;
  if (this->remote_system() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResourceStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResourceStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResourceStatistics)
    MergeFrom(*source);
  }
}

void ResourceStatistics::MergeFrom(const ResourceStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResourceStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_total() != 0) {
    set_host_total(from.host_total());
  }
  if (from.host_user() != 0) {
    set_host_user(from.host_user());
  }
  if (from.host_system() != 0) {
    set_host_system(from.host_system());
  }
  if (from.remote_total() != 0) {
    set_remote_total(from.remote_total());
  }
  if (from.remote_user() != 0) {
    set_remote_user(from.remote_user());
  }
  if (from.remote_system() != 0) {
    set_remote_system(from.remote_system());
  }
}

void ResourceStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResourceStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceStatistics::CopyFrom(const ResourceStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResourceStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceStatistics::IsInitialized() const {
  return true;
}

void ResourceStatistics::Swap(ResourceStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceStatistics::InternalSwap(ResourceStatistics* other) {
  using std::swap;
  swap(host_total_, other->host_total_);
  swap(host_user_, other->host_user_);
  swap(host_system_, other->host_system_);
  swap(remote_total_, other->remote_total_);
  swap(remote_user_, other->remote_user_);
  swap(remote_system_, other->remote_system_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceStatistics::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Report::InitAsDefaultInstance() {
  ::_Report_default_instance_._instance.get_mutable()->summaries_ = const_cast< ::ReportedSummariesPair*>(
      ::ReportedSummariesPair::internal_default_instance());
  ::_Report_default_instance_._instance.get_mutable()->cpu_usage_ = const_cast< ::ResourceStatistics*>(
      ::ResourceStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Report::kStreamsFieldNumber;
const int Report::kSummariesFieldNumber;
const int Report::kCpuUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Report::Report()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Report.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Report)
}
Report::Report(const Report& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      streams_(from.streams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_summaries()) {
    summaries_ = new ::ReportedSummariesPair(*from.summaries_);
  } else {
    summaries_ = NULL;
  }
  if (from.has_cpu_usage()) {
    cpu_usage_ = new ::ResourceStatistics(*from.cpu_usage_);
  } else {
    cpu_usage_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Report)
}

void Report::SharedCtor() {
  ::memset(&summaries_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cpu_usage_) -
      reinterpret_cast<char*>(&summaries_)) + sizeof(cpu_usage_));
}

Report::~Report() {
  // @@protoc_insertion_point(destructor:Report)
  SharedDtor();
}

void Report::SharedDtor() {
  if (this != internal_default_instance()) delete summaries_;
  if (this != internal_default_instance()) delete cpu_usage_;
}

void Report::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Report::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Report& Report::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Report.base);
  return *internal_default_instance();
}


void Report::Clear() {
// @@protoc_insertion_point(message_clear_start:Report)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  streams_.Clear();
  if (GetArenaNoVirtual() == NULL && summaries_ != NULL) {
    delete summaries_;
  }
  summaries_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpu_usage_ != NULL) {
    delete cpu_usage_;
  }
  cpu_usage_ = NULL;
  _internal_metadata_.Clear();
}

bool Report::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Report)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ReportedStreamsPair streams = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_streams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ReportedSummariesPair summaries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_summaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ResourceStatistics cpu_usage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Report)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Report)
  return false;
#undef DO_
}

void Report::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Report)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReportedStreamsPair streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->streams(static_cast<int>(i)),
      output);
  }

  // .ReportedSummariesPair summaries = 2;
  if (this->has_summaries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_summaries(), output);
  }

  // .ResourceStatistics cpu_usage = 3;
  if (this->has_cpu_usage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_cpu_usage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Report)
}

::google::protobuf::uint8* Report::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Report)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ReportedStreamsPair streams = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->streams_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->streams(static_cast<int>(i)), deterministic, target);
  }

  // .ReportedSummariesPair summaries = 2;
  if (this->has_summaries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_summaries(), deterministic, target);
  }

  // .ResourceStatistics cpu_usage = 3;
  if (this->has_cpu_usage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_cpu_usage(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Report)
  return target;
}

size_t Report::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Report)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ReportedStreamsPair streams = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->streams_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->streams(static_cast<int>(i)));
    }
  }

  // .ReportedSummariesPair summaries = 2;
  if (this->has_summaries()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *summaries_);
  }

  // .ResourceStatistics cpu_usage = 3;
  if (this->has_cpu_usage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpu_usage_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Report::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Report)
  GOOGLE_DCHECK_NE(&from, this);
  const Report* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Report>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Report)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Report)
    MergeFrom(*source);
  }
}

void Report::MergeFrom(const Report& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Report)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  streams_.MergeFrom(from.streams_);
  if (from.has_summaries()) {
    mutable_summaries()->::ReportedSummariesPair::MergeFrom(from.summaries());
  }
  if (from.has_cpu_usage()) {
    mutable_cpu_usage()->::ResourceStatistics::MergeFrom(from.cpu_usage());
  }
}

void Report::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Report::CopyFrom(const Report& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Report::IsInitialized() const {
  return true;
}

void Report::Swap(Report* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Report::InternalSwap(Report* other) {
  using std::swap;
  CastToBase(&streams_)->InternalSwap(CastToBase(&other->streams_));
  swap(summaries_, other->summaries_);
  swap(cpu_usage_, other->cpu_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Report::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Iperf::InitAsDefaultInstance() {
  ::_Iperf_default_instance_._instance.get_mutable()->header_ = const_cast< ::Header*>(
      ::Header::internal_default_instance());
  ::_Iperf_default_instance_._instance.get_mutable()->end_report_ = const_cast< ::Report*>(
      ::Report::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Iperf::kHeaderFieldNumber;
const int Iperf::kIntervalsFieldNumber;
const int Iperf::kCumulativeIntervalsFieldNumber;
const int Iperf::kEndReportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Iperf::Iperf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_iperf_2eproto::scc_info_Iperf.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Iperf)
}
Iperf::Iperf(const Iperf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intervals_(from.intervals_),
      cumulative_intervals_(from.cumulative_intervals_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_end_report()) {
    end_report_ = new ::Report(*from.end_report_);
  } else {
    end_report_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Iperf)
}

void Iperf::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_report_) -
      reinterpret_cast<char*>(&header_)) + sizeof(end_report_));
}

Iperf::~Iperf() {
  // @@protoc_insertion_point(destructor:Iperf)
  SharedDtor();
}

void Iperf::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete end_report_;
}

void Iperf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Iperf::descriptor() {
  ::protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Iperf& Iperf::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_iperf_2eproto::scc_info_Iperf.base);
  return *internal_default_instance();
}


void Iperf::Clear() {
// @@protoc_insertion_point(message_clear_start:Iperf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intervals_.Clear();
  cumulative_intervals_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_report_ != NULL) {
    delete end_report_;
  }
  end_report_ = NULL;
  _internal_metadata_.Clear();
}

bool Iperf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Iperf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Interval intervals = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_intervals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CumulativeInterval cumulative_intervals = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cumulative_intervals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Report end_report = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_report()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Iperf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Iperf)
  return false;
#undef DO_
}

void Iperf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Iperf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .Interval intervals = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intervals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->intervals(static_cast<int>(i)),
      output);
  }

  // repeated .CumulativeInterval cumulative_intervals = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cumulative_intervals_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->cumulative_intervals(static_cast<int>(i)),
      output);
  }

  // .Report end_report = 4;
  if (this->has_end_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_end_report(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Iperf)
}

::google::protobuf::uint8* Iperf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Iperf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .Interval intervals = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->intervals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->intervals(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CumulativeInterval cumulative_intervals = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cumulative_intervals_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cumulative_intervals(static_cast<int>(i)), deterministic, target);
  }

  // .Report end_report = 4;
  if (this->has_end_report()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_end_report(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Iperf)
  return target;
}

size_t Iperf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Iperf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Interval intervals = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->intervals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->intervals(static_cast<int>(i)));
    }
  }

  // repeated .CumulativeInterval cumulative_intervals = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cumulative_intervals_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cumulative_intervals(static_cast<int>(i)));
    }
  }

  // .Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .Report end_report = 4;
  if (this->has_end_report()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_report_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Iperf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Iperf)
  GOOGLE_DCHECK_NE(&from, this);
  const Iperf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Iperf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Iperf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Iperf)
    MergeFrom(*source);
  }
}

void Iperf::MergeFrom(const Iperf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Iperf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intervals_.MergeFrom(from.intervals_);
  cumulative_intervals_.MergeFrom(from.cumulative_intervals_);
  if (from.has_header()) {
    mutable_header()->::Header::MergeFrom(from.header());
  }
  if (from.has_end_report()) {
    mutable_end_report()->::Report::MergeFrom(from.end_report());
  }
}

void Iperf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Iperf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Iperf::CopyFrom(const Iperf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Iperf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Iperf::IsInitialized() const {
  return true;
}

void Iperf::Swap(Iperf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Iperf::InternalSwap(Iperf* other) {
  using std::swap;
  CastToBase(&intervals_)->InternalSwap(CastToBase(&other->intervals_));
  CastToBase(&cumulative_intervals_)->InternalSwap(CastToBase(&other->cumulative_intervals_));
  swap(header_, other->header_);
  swap(end_report_, other->end_report_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Iperf::GetMetadata() const {
  protobuf_iperf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_iperf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ConnectionStatus* Arena::CreateMaybeMessage< ::ConnectionStatus >(Arena* arena) {
  return Arena::CreateInternal< ::ConnectionStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ConnectionIntention* Arena::CreateMaybeMessage< ::ConnectionIntention >(Arena* arena) {
  return Arena::CreateInternal< ::ConnectionIntention >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Connection* Arena::CreateMaybeMessage< ::Connection >(Arena* arena) {
  return Arena::CreateInternal< ::Connection >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BootstrapInformation* Arena::CreateMaybeMessage< ::BootstrapInformation >(Arena* arena) {
  return Arena::CreateInternal< ::BootstrapInformation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Header* Arena::CreateMaybeMessage< ::Header >(Arena* arena) {
  return Arena::CreateInternal< ::Header >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Stream* Arena::CreateMaybeMessage< ::Stream >(Arena* arena) {
  return Arena::CreateInternal< ::Stream >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Interval* Arena::CreateMaybeMessage< ::Interval >(Arena* arena) {
  return Arena::CreateInternal< ::Interval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CumulativeInterval* Arena::CreateMaybeMessage< ::CumulativeInterval >(Arena* arena) {
  return Arena::CreateInternal< ::CumulativeInterval >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedSendingStream* Arena::CreateMaybeMessage< ::ReportedSendingStream >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedSendingStream >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedReceivingStream* Arena::CreateMaybeMessage< ::ReportedReceivingStream >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedReceivingStream >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedStreamsPair* Arena::CreateMaybeMessage< ::ReportedStreamsPair >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedStreamsPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedSendingSummary* Arena::CreateMaybeMessage< ::ReportedSendingSummary >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedSendingSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedReceivingSummary* Arena::CreateMaybeMessage< ::ReportedReceivingSummary >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedReceivingSummary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ReportedSummariesPair* Arena::CreateMaybeMessage< ::ReportedSummariesPair >(Arena* arena) {
  return Arena::CreateInternal< ::ReportedSummariesPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ResourceStatistics* Arena::CreateMaybeMessage< ::ResourceStatistics >(Arena* arena) {
  return Arena::CreateInternal< ::ResourceStatistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Report* Arena::CreateMaybeMessage< ::Report >(Arena* arena) {
  return Arena::CreateInternal< ::Report >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Iperf* Arena::CreateMaybeMessage< ::Iperf >(Arena* arena) {
  return Arena::CreateInternal< ::Iperf >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
