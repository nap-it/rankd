// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localnet.proto

#include "data-sources/yanpit/localnet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_localnet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_localnet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Interface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_localnet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Localnet_InterfacesEntry_DoNotUse;
}  // namespace protobuf_localnet_2eproto
class InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Interface>
      _instance;
} _Interface_default_instance_;
class Localnet_InterfacesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Localnet_InterfacesEntry_DoNotUse>
      _instance;
} _Localnet_InterfacesEntry_DoNotUse_default_instance_;
class LocalnetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Localnet>
      _instance;
} _Localnet_default_instance_;
namespace protobuf_localnet_2eproto {
static void InitDefaultsInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Interface_default_instance_;
    new (ptr) ::Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Interface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Interface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterface}, {}};

static void InitDefaultsLocalnet_InterfacesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Localnet_InterfacesEntry_DoNotUse_default_instance_;
    new (ptr) ::Localnet_InterfacesEntry_DoNotUse();
  }
  ::Localnet_InterfacesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Localnet_InterfacesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalnet_InterfacesEntry_DoNotUse}, {
      &protobuf_localnet_2eproto::scc_info_Interface.base,}};

static void InitDefaultsLocalnet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Localnet_default_instance_;
    new (ptr) ::Localnet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Localnet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Localnet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLocalnet}, {
      &protobuf_localnet_2eproto::scc_info_Localnet_InterfacesEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Interface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Localnet_InterfacesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Localnet.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, mac_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, ip4_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, ip6_addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, has_carrier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, duplex_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, interface_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, enslaved_interface_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, mtu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, operation_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, rx_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, tx_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, rx_packets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, tx_packets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, rx_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, tx_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, rx_dropped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Interface, tx_dropped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet_InterfacesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet_InterfacesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet_InterfacesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet_InterfacesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Localnet, interfaces_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Interface)},
  { 23, 30, sizeof(::Localnet_InterfacesEntry_DoNotUse)},
  { 32, -1, sizeof(::Localnet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Localnet_InterfacesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Localnet_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "localnet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016localnet.proto\"\202\003\n\tInterface\022\023\n\013mac_ad"
      "dress\030\001 \001(\t\022\025\n\rip4_addresses\030\002 \003(\t\022\025\n\rip"
      "6_addresses\030\003 \003(\t\022\023\n\013has_carrier\030\004 \001(\010\022\023"
      "\n\013duplex_type\030\005 \001(\t\022\027\n\017interface_index\030\006"
      " \001(\005\022 \n\030enslaved_interface_index\030\007 \001(\005\022\013"
      "\n\003mtu\030\010 \001(\005\022\027\n\017operation_state\030\t \001(\t\022\r\n\005"
      "speed\030\n \001(\003\022\020\n\010rx_bytes\030\013 \001(\003\022\020\n\010tx_byte"
      "s\030\014 \001(\003\022\022\n\nrx_packets\030\r \001(\003\022\022\n\ntx_packet"
      "s\030\016 \001(\003\022\021\n\trx_errors\030\017 \001(\005\022\021\n\ttx_errors\030"
      "\020 \001(\005\022\022\n\nrx_dropped\030\021 \001(\005\022\022\n\ntx_dropped\030"
      "\022 \001(\005\"\213\001\n\010Localnet\022\021\n\ttimestamp\030\001 \001(\003\022-\n"
      "\ninterfaces\030\002 \003(\0132\031.Localnet.InterfacesE"
      "ntry\032=\n\017InterfacesEntry\022\013\n\003key\030\001 \001(\t\022\031\n\005"
      "value\030\002 \001(\0132\n.Interface:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 555);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "localnet.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_localnet_2eproto

// ===================================================================

void Interface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Interface::kMacAddressFieldNumber;
const int Interface::kIp4AddressesFieldNumber;
const int Interface::kIp6AddressesFieldNumber;
const int Interface::kHasCarrierFieldNumber;
const int Interface::kDuplexTypeFieldNumber;
const int Interface::kInterfaceIndexFieldNumber;
const int Interface::kEnslavedInterfaceIndexFieldNumber;
const int Interface::kMtuFieldNumber;
const int Interface::kOperationStateFieldNumber;
const int Interface::kSpeedFieldNumber;
const int Interface::kRxBytesFieldNumber;
const int Interface::kTxBytesFieldNumber;
const int Interface::kRxPacketsFieldNumber;
const int Interface::kTxPacketsFieldNumber;
const int Interface::kRxErrorsFieldNumber;
const int Interface::kTxErrorsFieldNumber;
const int Interface::kRxDroppedFieldNumber;
const int Interface::kTxDroppedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Interface::Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_localnet_2eproto::scc_info_Interface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Interface)
}
Interface::Interface(const Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip4_addresses_(from.ip4_addresses_),
      ip6_addresses_(from.ip6_addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_address().size() > 0) {
    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  duplex_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duplex_type().size() > 0) {
    duplex_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duplex_type_);
  }
  operation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_state().size() > 0) {
    operation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_state_);
  }
  ::memcpy(&has_carrier_, &from.has_carrier_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_dropped_) -
    reinterpret_cast<char*>(&has_carrier_)) + sizeof(tx_dropped_));
  // @@protoc_insertion_point(copy_constructor:Interface)
}

void Interface::SharedCtor() {
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duplex_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&has_carrier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_dropped_) -
      reinterpret_cast<char*>(&has_carrier_)) + sizeof(tx_dropped_));
}

Interface::~Interface() {
  // @@protoc_insertion_point(destructor:Interface)
  SharedDtor();
}

void Interface::SharedDtor() {
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duplex_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Interface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Interface::descriptor() {
  ::protobuf_localnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_localnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Interface& Interface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_localnet_2eproto::scc_info_Interface.base);
  return *internal_default_instance();
}


void Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip4_addresses_.Clear();
  ip6_addresses_.Clear();
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duplex_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&has_carrier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_dropped_) -
      reinterpret_cast<char*>(&has_carrier_)) + sizeof(tx_dropped_));
  _internal_metadata_.Clear();
}

bool Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Interface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mac_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_address().data(), static_cast<int>(this->mac_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interface.mac_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ip4_addresses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ip4_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip4_addresses(this->ip4_addresses_size() - 1).data(),
            static_cast<int>(this->ip4_addresses(this->ip4_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interface.ip4_addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ip6_addresses = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ip6_addresses()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip6_addresses(this->ip6_addresses_size() - 1).data(),
            static_cast<int>(this->ip6_addresses(this->ip6_addresses_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interface.ip6_addresses"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_carrier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_carrier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duplex_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duplex_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duplex_type().data(), static_cast<int>(this->duplex_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interface.duplex_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 interface_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &interface_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 enslaved_interface_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enslaved_interface_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mtu = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mtu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string operation_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_state().data(), static_cast<int>(this->operation_state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Interface.operation_state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 speed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rx_bytes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rx_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tx_bytes = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tx_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 rx_packets = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rx_packets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tx_packets = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tx_packets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rx_errors = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rx_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tx_errors = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tx_errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rx_dropped = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rx_dropped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tx_dropped = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tx_dropped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Interface)
  return false;
#undef DO_
}

void Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_address = 1;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), static_cast<int>(this->mac_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mac_address(), output);
  }

  // repeated string ip4_addresses = 2;
  for (int i = 0, n = this->ip4_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip4_addresses(i).data(), static_cast<int>(this->ip4_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.ip4_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ip4_addresses(i), output);
  }

  // repeated string ip6_addresses = 3;
  for (int i = 0, n = this->ip6_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip6_addresses(i).data(), static_cast<int>(this->ip6_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.ip6_addresses");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ip6_addresses(i), output);
  }

  // bool has_carrier = 4;
  if (this->has_carrier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->has_carrier(), output);
  }

  // string duplex_type = 5;
  if (this->duplex_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duplex_type().data(), static_cast<int>(this->duplex_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.duplex_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->duplex_type(), output);
  }

  // int32 interface_index = 6;
  if (this->interface_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->interface_index(), output);
  }

  // int32 enslaved_interface_index = 7;
  if (this->enslaved_interface_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->enslaved_interface_index(), output);
  }

  // int32 mtu = 8;
  if (this->mtu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->mtu(), output);
  }

  // string operation_state = 9;
  if (this->operation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_state().data(), static_cast<int>(this->operation_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.operation_state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->operation_state(), output);
  }

  // int64 speed = 10;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->speed(), output);
  }

  // int64 rx_bytes = 11;
  if (this->rx_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->rx_bytes(), output);
  }

  // int64 tx_bytes = 12;
  if (this->tx_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->tx_bytes(), output);
  }

  // int64 rx_packets = 13;
  if (this->rx_packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->rx_packets(), output);
  }

  // int64 tx_packets = 14;
  if (this->tx_packets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->tx_packets(), output);
  }

  // int32 rx_errors = 15;
  if (this->rx_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->rx_errors(), output);
  }

  // int32 tx_errors = 16;
  if (this->tx_errors() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->tx_errors(), output);
  }

  // int32 rx_dropped = 17;
  if (this->rx_dropped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->rx_dropped(), output);
  }

  // int32 tx_dropped = 18;
  if (this->tx_dropped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->tx_dropped(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Interface)
}

::google::protobuf::uint8* Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mac_address = 1;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), static_cast<int>(this->mac_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mac_address(), target);
  }

  // repeated string ip4_addresses = 2;
  for (int i = 0, n = this->ip4_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip4_addresses(i).data(), static_cast<int>(this->ip4_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.ip4_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->ip4_addresses(i), target);
  }

  // repeated string ip6_addresses = 3;
  for (int i = 0, n = this->ip6_addresses_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip6_addresses(i).data(), static_cast<int>(this->ip6_addresses(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.ip6_addresses");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->ip6_addresses(i), target);
  }

  // bool has_carrier = 4;
  if (this->has_carrier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->has_carrier(), target);
  }

  // string duplex_type = 5;
  if (this->duplex_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duplex_type().data(), static_cast<int>(this->duplex_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.duplex_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->duplex_type(), target);
  }

  // int32 interface_index = 6;
  if (this->interface_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->interface_index(), target);
  }

  // int32 enslaved_interface_index = 7;
  if (this->enslaved_interface_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->enslaved_interface_index(), target);
  }

  // int32 mtu = 8;
  if (this->mtu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->mtu(), target);
  }

  // string operation_state = 9;
  if (this->operation_state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_state().data(), static_cast<int>(this->operation_state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Interface.operation_state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->operation_state(), target);
  }

  // int64 speed = 10;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->speed(), target);
  }

  // int64 rx_bytes = 11;
  if (this->rx_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->rx_bytes(), target);
  }

  // int64 tx_bytes = 12;
  if (this->tx_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->tx_bytes(), target);
  }

  // int64 rx_packets = 13;
  if (this->rx_packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->rx_packets(), target);
  }

  // int64 tx_packets = 14;
  if (this->tx_packets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->tx_packets(), target);
  }

  // int32 rx_errors = 15;
  if (this->rx_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->rx_errors(), target);
  }

  // int32 tx_errors = 16;
  if (this->tx_errors() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->tx_errors(), target);
  }

  // int32 rx_dropped = 17;
  if (this->rx_dropped() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->rx_dropped(), target);
  }

  // int32 tx_dropped = 18;
  if (this->tx_dropped() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->tx_dropped(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Interface)
  return target;
}

size_t Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string ip4_addresses = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ip4_addresses_size());
  for (int i = 0, n = this->ip4_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ip4_addresses(i));
  }

  // repeated string ip6_addresses = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ip6_addresses_size());
  for (int i = 0, n = this->ip6_addresses_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ip6_addresses(i));
  }

  // string mac_address = 1;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_address());
  }

  // string duplex_type = 5;
  if (this->duplex_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duplex_type());
  }

  // string operation_state = 9;
  if (this->operation_state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_state());
  }

  // bool has_carrier = 4;
  if (this->has_carrier() != 0) {
    total_size += 1 + 1;
  }

  // int32 interface_index = 6;
  if (this->interface_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->interface_index());
  }

  // int32 enslaved_interface_index = 7;
  if (this->enslaved_interface_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->enslaved_interface_index());
  }

  // int32 mtu = 8;
  if (this->mtu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mtu());
  }

  // int64 speed = 10;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->speed());
  }

  // int64 rx_bytes = 11;
  if (this->rx_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rx_bytes());
  }

  // int64 tx_bytes = 12;
  if (this->tx_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tx_bytes());
  }

  // int64 rx_packets = 13;
  if (this->rx_packets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rx_packets());
  }

  // int64 tx_packets = 14;
  if (this->tx_packets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tx_packets());
  }

  // int32 rx_errors = 15;
  if (this->rx_errors() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rx_errors());
  }

  // int32 tx_errors = 16;
  if (this->tx_errors() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tx_errors());
  }

  // int32 rx_dropped = 17;
  if (this->rx_dropped() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rx_dropped());
  }

  // int32 tx_dropped = 18;
  if (this->tx_dropped() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tx_dropped());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Interface)
    MergeFrom(*source);
  }
}

void Interface::MergeFrom(const Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ip4_addresses_.MergeFrom(from.ip4_addresses_);
  ip6_addresses_.MergeFrom(from.ip6_addresses_);
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.duplex_type().size() > 0) {

    duplex_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duplex_type_);
  }
  if (from.operation_state().size() > 0) {

    operation_state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_state_);
  }
  if (from.has_carrier() != 0) {
    set_has_carrier(from.has_carrier());
  }
  if (from.interface_index() != 0) {
    set_interface_index(from.interface_index());
  }
  if (from.enslaved_interface_index() != 0) {
    set_enslaved_interface_index(from.enslaved_interface_index());
  }
  if (from.mtu() != 0) {
    set_mtu(from.mtu());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.rx_bytes() != 0) {
    set_rx_bytes(from.rx_bytes());
  }
  if (from.tx_bytes() != 0) {
    set_tx_bytes(from.tx_bytes());
  }
  if (from.rx_packets() != 0) {
    set_rx_packets(from.rx_packets());
  }
  if (from.tx_packets() != 0) {
    set_tx_packets(from.tx_packets());
  }
  if (from.rx_errors() != 0) {
    set_rx_errors(from.rx_errors());
  }
  if (from.tx_errors() != 0) {
    set_tx_errors(from.tx_errors());
  }
  if (from.rx_dropped() != 0) {
    set_rx_dropped(from.rx_dropped());
  }
  if (from.tx_dropped() != 0) {
    set_tx_dropped(from.tx_dropped());
  }
}

void Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Interface::CopyFrom(const Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Interface::IsInitialized() const {
  return true;
}

void Interface::Swap(Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Interface::InternalSwap(Interface* other) {
  using std::swap;
  ip4_addresses_.InternalSwap(CastToBase(&other->ip4_addresses_));
  ip6_addresses_.InternalSwap(CastToBase(&other->ip6_addresses_));
  mac_address_.Swap(&other->mac_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duplex_type_.Swap(&other->duplex_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  operation_state_.Swap(&other->operation_state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(has_carrier_, other->has_carrier_);
  swap(interface_index_, other->interface_index_);
  swap(enslaved_interface_index_, other->enslaved_interface_index_);
  swap(mtu_, other->mtu_);
  swap(speed_, other->speed_);
  swap(rx_bytes_, other->rx_bytes_);
  swap(tx_bytes_, other->tx_bytes_);
  swap(rx_packets_, other->rx_packets_);
  swap(tx_packets_, other->tx_packets_);
  swap(rx_errors_, other->rx_errors_);
  swap(tx_errors_, other->tx_errors_);
  swap(rx_dropped_, other->rx_dropped_);
  swap(tx_dropped_, other->tx_dropped_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Interface::GetMetadata() const {
  protobuf_localnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_localnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Localnet_InterfacesEntry_DoNotUse::Localnet_InterfacesEntry_DoNotUse() {}
Localnet_InterfacesEntry_DoNotUse::Localnet_InterfacesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Localnet_InterfacesEntry_DoNotUse::MergeFrom(const Localnet_InterfacesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Localnet_InterfacesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_localnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_localnet_2eproto::file_level_metadata[1];
}
void Localnet_InterfacesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Localnet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Localnet::kTimestampFieldNumber;
const int Localnet::kInterfacesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Localnet::Localnet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_localnet_2eproto::scc_info_Localnet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Localnet)
}
Localnet::Localnet(const Localnet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interfaces_.MergeFrom(from.interfaces_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Localnet)
}

void Localnet::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
}

Localnet::~Localnet() {
  // @@protoc_insertion_point(destructor:Localnet)
  SharedDtor();
}

void Localnet::SharedDtor() {
}

void Localnet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Localnet::descriptor() {
  ::protobuf_localnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_localnet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Localnet& Localnet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_localnet_2eproto::scc_info_Localnet.base);
  return *internal_default_instance();
}


void Localnet::Clear() {
// @@protoc_insertion_point(message_clear_start:Localnet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interfaces_.Clear();
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Localnet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Localnet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .Interface> interfaces = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Localnet_InterfacesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Localnet_InterfacesEntry_DoNotUse,
              ::std::string, ::Interface,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::Interface > > parser(&interfaces_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Localnet.InterfacesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Localnet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Localnet)
  return false;
#undef DO_
}

void Localnet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Localnet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // map<string, .Interface> interfaces = 2;
  if (!this->interfaces().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Interface >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Localnet.InterfacesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->interfaces().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->interfaces().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Interface >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Interface >::const_iterator
          it = this->interfaces().begin();
          it != this->interfaces().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Localnet_InterfacesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(interfaces_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Localnet_InterfacesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Interface >::const_iterator
          it = this->interfaces().begin();
          it != this->interfaces().end(); ++it) {
        entry.reset(interfaces_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Localnet)
}

::google::protobuf::uint8* Localnet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Localnet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // map<string, .Interface> interfaces = 2;
  if (!this->interfaces().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Interface >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Localnet.InterfacesEntry.key");
      }
    };

    if (deterministic &&
        this->interfaces().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->interfaces().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Interface >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Interface >::const_iterator
          it = this->interfaces().begin();
          it != this->interfaces().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Localnet_InterfacesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(interfaces_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Localnet_InterfacesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Interface >::const_iterator
          it = this->interfaces().begin();
          it != this->interfaces().end(); ++it) {
        entry.reset(interfaces_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Localnet)
  return target;
}

size_t Localnet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Localnet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .Interface> interfaces = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->interfaces_size());
  {
    ::std::unique_ptr<Localnet_InterfacesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::Interface >::const_iterator
        it = this->interfaces().begin();
        it != this->interfaces().end(); ++it) {
      entry.reset(interfaces_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Localnet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Localnet)
  GOOGLE_DCHECK_NE(&from, this);
  const Localnet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Localnet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Localnet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Localnet)
    MergeFrom(*source);
  }
}

void Localnet::MergeFrom(const Localnet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Localnet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interfaces_.MergeFrom(from.interfaces_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Localnet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Localnet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Localnet::CopyFrom(const Localnet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Localnet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Localnet::IsInitialized() const {
  return true;
}

void Localnet::Swap(Localnet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Localnet::InternalSwap(Localnet* other) {
  using std::swap;
  interfaces_.Swap(&other->interfaces_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Localnet::GetMetadata() const {
  protobuf_localnet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_localnet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Interface* Arena::CreateMaybeMessage< ::Interface >(Arena* arena) {
  return Arena::CreateInternal< ::Interface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Localnet_InterfacesEntry_DoNotUse* Arena::CreateMaybeMessage< ::Localnet_InterfacesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Localnet_InterfacesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Localnet* Arena::CreateMaybeMessage< ::Localnet >(Arena* arena) {
  return Arena::CreateInternal< ::Localnet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
