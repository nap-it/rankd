// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iperf.proto

#ifndef PROTOBUF_INCLUDED_iperf_2eproto
#define PROTOBUF_INCLUDED_iperf_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_iperf_2eproto 

namespace protobuf_iperf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[17];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_iperf_2eproto
class BootstrapInformation;
class BootstrapInformationDefaultTypeInternal;
extern BootstrapInformationDefaultTypeInternal _BootstrapInformation_default_instance_;
class Connection;
class ConnectionDefaultTypeInternal;
extern ConnectionDefaultTypeInternal _Connection_default_instance_;
class ConnectionIntention;
class ConnectionIntentionDefaultTypeInternal;
extern ConnectionIntentionDefaultTypeInternal _ConnectionIntention_default_instance_;
class ConnectionStatus;
class ConnectionStatusDefaultTypeInternal;
extern ConnectionStatusDefaultTypeInternal _ConnectionStatus_default_instance_;
class CumulativeInterval;
class CumulativeIntervalDefaultTypeInternal;
extern CumulativeIntervalDefaultTypeInternal _CumulativeInterval_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class Interval;
class IntervalDefaultTypeInternal;
extern IntervalDefaultTypeInternal _Interval_default_instance_;
class Iperf;
class IperfDefaultTypeInternal;
extern IperfDefaultTypeInternal _Iperf_default_instance_;
class Report;
class ReportDefaultTypeInternal;
extern ReportDefaultTypeInternal _Report_default_instance_;
class ReportedReceivingStream;
class ReportedReceivingStreamDefaultTypeInternal;
extern ReportedReceivingStreamDefaultTypeInternal _ReportedReceivingStream_default_instance_;
class ReportedReceivingSummary;
class ReportedReceivingSummaryDefaultTypeInternal;
extern ReportedReceivingSummaryDefaultTypeInternal _ReportedReceivingSummary_default_instance_;
class ReportedSendingStream;
class ReportedSendingStreamDefaultTypeInternal;
extern ReportedSendingStreamDefaultTypeInternal _ReportedSendingStream_default_instance_;
class ReportedSendingSummary;
class ReportedSendingSummaryDefaultTypeInternal;
extern ReportedSendingSummaryDefaultTypeInternal _ReportedSendingSummary_default_instance_;
class ReportedStreamsPair;
class ReportedStreamsPairDefaultTypeInternal;
extern ReportedStreamsPairDefaultTypeInternal _ReportedStreamsPair_default_instance_;
class ReportedSummariesPair;
class ReportedSummariesPairDefaultTypeInternal;
extern ReportedSummariesPairDefaultTypeInternal _ReportedSummariesPair_default_instance_;
class ResourceStatistics;
class ResourceStatisticsDefaultTypeInternal;
extern ResourceStatisticsDefaultTypeInternal _ResourceStatistics_default_instance_;
class Stream;
class StreamDefaultTypeInternal;
extern StreamDefaultTypeInternal _Stream_default_instance_;
namespace google {
namespace protobuf {
template<> ::BootstrapInformation* Arena::CreateMaybeMessage<::BootstrapInformation>(Arena*);
template<> ::Connection* Arena::CreateMaybeMessage<::Connection>(Arena*);
template<> ::ConnectionIntention* Arena::CreateMaybeMessage<::ConnectionIntention>(Arena*);
template<> ::ConnectionStatus* Arena::CreateMaybeMessage<::ConnectionStatus>(Arena*);
template<> ::CumulativeInterval* Arena::CreateMaybeMessage<::CumulativeInterval>(Arena*);
template<> ::Header* Arena::CreateMaybeMessage<::Header>(Arena*);
template<> ::Interval* Arena::CreateMaybeMessage<::Interval>(Arena*);
template<> ::Iperf* Arena::CreateMaybeMessage<::Iperf>(Arena*);
template<> ::Report* Arena::CreateMaybeMessage<::Report>(Arena*);
template<> ::ReportedReceivingStream* Arena::CreateMaybeMessage<::ReportedReceivingStream>(Arena*);
template<> ::ReportedReceivingSummary* Arena::CreateMaybeMessage<::ReportedReceivingSummary>(Arena*);
template<> ::ReportedSendingStream* Arena::CreateMaybeMessage<::ReportedSendingStream>(Arena*);
template<> ::ReportedSendingSummary* Arena::CreateMaybeMessage<::ReportedSendingSummary>(Arena*);
template<> ::ReportedStreamsPair* Arena::CreateMaybeMessage<::ReportedStreamsPair>(Arena*);
template<> ::ReportedSummariesPair* Arena::CreateMaybeMessage<::ReportedSummariesPair>(Arena*);
template<> ::ResourceStatistics* Arena::CreateMaybeMessage<::ResourceStatistics>(Arena*);
template<> ::Stream* Arena::CreateMaybeMessage<::Stream>(Arena*);
}  // namespace protobuf
}  // namespace google

enum ProtocolType {
  TCP = 0,
  UDP = 1,
  ProtocolType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProtocolType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProtocolType_IsValid(int value);
const ProtocolType ProtocolType_MIN = TCP;
const ProtocolType ProtocolType_MAX = UDP;
const int ProtocolType_ARRAYSIZE = ProtocolType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtocolType_descriptor();
inline const ::std::string& ProtocolType_Name(ProtocolType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtocolType_descriptor(), value);
}
inline bool ProtocolType_Parse(
    const ::std::string& name, ProtocolType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtocolType>(
    ProtocolType_descriptor(), name, value);
}
// ===================================================================

class ConnectionStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectionStatus) */ {
 public:
  ConnectionStatus();
  virtual ~ConnectionStatus();

  ConnectionStatus(const ConnectionStatus& from);

  inline ConnectionStatus& operator=(const ConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectionStatus(ConnectionStatus&& from) noexcept
    : ConnectionStatus() {
    *this = ::std::move(from);
  }

  inline ConnectionStatus& operator=(ConnectionStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectionStatus* internal_default_instance() {
    return reinterpret_cast<const ConnectionStatus*>(
               &_ConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ConnectionStatus* other);
  friend void swap(ConnectionStatus& a, ConnectionStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectionStatus* New() const final {
    return CreateMaybeMessage<ConnectionStatus>(NULL);
  }

  ConnectionStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectionStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectionStatus& from);
  void MergeFrom(const ConnectionStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectionStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string local_host = 2;
  void clear_local_host();
  static const int kLocalHostFieldNumber = 2;
  const ::std::string& local_host() const;
  void set_local_host(const ::std::string& value);
  #if LANG_CXX11
  void set_local_host(::std::string&& value);
  #endif
  void set_local_host(const char* value);
  void set_local_host(const char* value, size_t size);
  ::std::string* mutable_local_host();
  ::std::string* release_local_host();
  void set_allocated_local_host(::std::string* local_host);

  // string remote_host = 4;
  void clear_remote_host();
  static const int kRemoteHostFieldNumber = 4;
  const ::std::string& remote_host() const;
  void set_remote_host(const ::std::string& value);
  #if LANG_CXX11
  void set_remote_host(::std::string&& value);
  #endif
  void set_remote_host(const char* value);
  void set_remote_host(const char* value, size_t size);
  ::std::string* mutable_remote_host();
  ::std::string* release_remote_host();
  void set_allocated_remote_host(::std::string* remote_host);

  // int32 socket_number = 1;
  void clear_socket_number();
  static const int kSocketNumberFieldNumber = 1;
  ::google::protobuf::int32 socket_number() const;
  void set_socket_number(::google::protobuf::int32 value);

  // uint32 local_port = 3;
  void clear_local_port();
  static const int kLocalPortFieldNumber = 3;
  ::google::protobuf::uint32 local_port() const;
  void set_local_port(::google::protobuf::uint32 value);

  // uint32 remote_port = 5;
  void clear_remote_port();
  static const int kRemotePortFieldNumber = 5;
  ::google::protobuf::uint32 remote_port() const;
  void set_remote_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConnectionStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr local_host_;
  ::google::protobuf::internal::ArenaStringPtr remote_host_;
  ::google::protobuf::int32 socket_number_;
  ::google::protobuf::uint32 local_port_;
  ::google::protobuf::uint32 remote_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectionIntention : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectionIntention) */ {
 public:
  ConnectionIntention();
  virtual ~ConnectionIntention();

  ConnectionIntention(const ConnectionIntention& from);

  inline ConnectionIntention& operator=(const ConnectionIntention& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectionIntention(ConnectionIntention&& from) noexcept
    : ConnectionIntention() {
    *this = ::std::move(from);
  }

  inline ConnectionIntention& operator=(ConnectionIntention&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectionIntention& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectionIntention* internal_default_instance() {
    return reinterpret_cast<const ConnectionIntention*>(
               &_ConnectionIntention_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ConnectionIntention* other);
  friend void swap(ConnectionIntention& a, ConnectionIntention& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectionIntention* New() const final {
    return CreateMaybeMessage<ConnectionIntention>(NULL);
  }

  ConnectionIntention* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectionIntention>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectionIntention& from);
  void MergeFrom(const ConnectionIntention& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectionIntention* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConnectionIntention)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Connection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Connection) */ {
 public:
  Connection();
  virtual ~Connection();

  Connection(const Connection& from);

  inline Connection& operator=(const Connection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Connection(Connection&& from) noexcept
    : Connection() {
    *this = ::std::move(from);
  }

  inline Connection& operator=(Connection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Connection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Connection* internal_default_instance() {
    return reinterpret_cast<const Connection*>(
               &_Connection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Connection* other);
  friend void swap(Connection& a, Connection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Connection* New() const final {
    return CreateMaybeMessage<Connection>(NULL);
  }

  Connection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Connection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Connection& from);
  void MergeFrom(const Connection& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Connection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ConnectionStatus connections = 1;
  int connections_size() const;
  void clear_connections();
  static const int kConnectionsFieldNumber = 1;
  ::ConnectionStatus* mutable_connections(int index);
  ::google::protobuf::RepeatedPtrField< ::ConnectionStatus >*
      mutable_connections();
  const ::ConnectionStatus& connections(int index) const;
  ::ConnectionStatus* add_connections();
  const ::google::protobuf::RepeatedPtrField< ::ConnectionStatus >&
      connections() const;

  // .ConnectionIntention intention = 2;
  bool has_intention() const;
  void clear_intention();
  static const int kIntentionFieldNumber = 2;
  private:
  const ::ConnectionIntention& _internal_intention() const;
  public:
  const ::ConnectionIntention& intention() const;
  ::ConnectionIntention* release_intention();
  ::ConnectionIntention* mutable_intention();
  void set_allocated_intention(::ConnectionIntention* intention);

  // @@protoc_insertion_point(class_scope:Connection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ConnectionStatus > connections_;
  ::ConnectionIntention* intention_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BootstrapInformation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BootstrapInformation) */ {
 public:
  BootstrapInformation();
  virtual ~BootstrapInformation();

  BootstrapInformation(const BootstrapInformation& from);

  inline BootstrapInformation& operator=(const BootstrapInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BootstrapInformation(BootstrapInformation&& from) noexcept
    : BootstrapInformation() {
    *this = ::std::move(from);
  }

  inline BootstrapInformation& operator=(BootstrapInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BootstrapInformation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BootstrapInformation* internal_default_instance() {
    return reinterpret_cast<const BootstrapInformation*>(
               &_BootstrapInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(BootstrapInformation* other);
  friend void swap(BootstrapInformation& a, BootstrapInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BootstrapInformation* New() const final {
    return CreateMaybeMessage<BootstrapInformation>(NULL);
  }

  BootstrapInformation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BootstrapInformation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BootstrapInformation& from);
  void MergeFrom(const BootstrapInformation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BootstrapInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string system_information = 2;
  void clear_system_information();
  static const int kSystemInformationFieldNumber = 2;
  const ::std::string& system_information() const;
  void set_system_information(const ::std::string& value);
  #if LANG_CXX11
  void set_system_information(::std::string&& value);
  #endif
  void set_system_information(const char* value);
  void set_system_information(const char* value, size_t size);
  ::std::string* mutable_system_information();
  ::std::string* release_system_information();
  void set_allocated_system_information(::std::string* system_information);

  // double target_bitrate = 4;
  void clear_target_bitrate();
  static const int kTargetBitrateFieldNumber = 4;
  double target_bitrate() const;
  void set_target_bitrate(double value);

  // int32 tcp_mss_default = 3;
  void clear_tcp_mss_default();
  static const int kTcpMssDefaultFieldNumber = 3;
  ::google::protobuf::int32 tcp_mss_default() const;
  void set_tcp_mss_default(::google::protobuf::int32 value);

  // int32 sock_bufsize = 5;
  void clear_sock_bufsize();
  static const int kSockBufsizeFieldNumber = 5;
  ::google::protobuf::int32 sock_bufsize() const;
  void set_sock_bufsize(::google::protobuf::int32 value);

  // int32 sndbuf_actual = 6;
  void clear_sndbuf_actual();
  static const int kSndbufActualFieldNumber = 6;
  ::google::protobuf::int32 sndbuf_actual() const;
  void set_sndbuf_actual(::google::protobuf::int32 value);

  // int32 rcvbuf_actual = 7;
  void clear_rcvbuf_actual();
  static const int kRcvbufActualFieldNumber = 7;
  ::google::protobuf::int32 rcvbuf_actual() const;
  void set_rcvbuf_actual(::google::protobuf::int32 value);

  // .ProtocolType protocol = 8;
  void clear_protocol();
  static const int kProtocolFieldNumber = 8;
  ::ProtocolType protocol() const;
  void set_protocol(::ProtocolType value);

  // int32 number_of_streams = 9;
  void clear_number_of_streams();
  static const int kNumberOfStreamsFieldNumber = 9;
  ::google::protobuf::int32 number_of_streams() const;
  void set_number_of_streams(::google::protobuf::int32 value);

  // int32 block_size = 10;
  void clear_block_size();
  static const int kBlockSizeFieldNumber = 10;
  ::google::protobuf::int32 block_size() const;
  void set_block_size(::google::protobuf::int32 value);

  // int32 omitted_seconds = 11;
  void clear_omitted_seconds();
  static const int kOmittedSecondsFieldNumber = 11;
  ::google::protobuf::int32 omitted_seconds() const;
  void set_omitted_seconds(::google::protobuf::int32 value);

  // int32 duration = 12;
  void clear_duration();
  static const int kDurationFieldNumber = 12;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // int32 bytes = 13;
  void clear_bytes();
  static const int kBytesFieldNumber = 13;
  ::google::protobuf::int32 bytes() const;
  void set_bytes(::google::protobuf::int32 value);

  // int32 blocks = 14;
  void clear_blocks();
  static const int kBlocksFieldNumber = 14;
  ::google::protobuf::int32 blocks() const;
  void set_blocks(::google::protobuf::int32 value);

  // bool reverse_mode = 15;
  void clear_reverse_mode();
  static const int kReverseModeFieldNumber = 15;
  bool reverse_mode() const;
  void set_reverse_mode(bool value);

  // int32 tos = 16;
  void clear_tos();
  static const int kTosFieldNumber = 16;
  ::google::protobuf::int32 tos() const;
  void set_tos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:BootstrapInformation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr system_information_;
  double target_bitrate_;
  ::google::protobuf::int32 tcp_mss_default_;
  ::google::protobuf::int32 sock_bufsize_;
  ::google::protobuf::int32 sndbuf_actual_;
  ::google::protobuf::int32 rcvbuf_actual_;
  int protocol_;
  ::google::protobuf::int32 number_of_streams_;
  ::google::protobuf::int32 block_size_;
  ::google::protobuf::int32 omitted_seconds_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 bytes_;
  ::google::protobuf::int32 blocks_;
  bool reverse_mode_;
  ::google::protobuf::int32 tos_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const final {
    return CreateMaybeMessage<Header>(NULL);
  }

  Header* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cookie = 1;
  void clear_cookie();
  static const int kCookieFieldNumber = 1;
  const ::std::string& cookie() const;
  void set_cookie(const ::std::string& value);
  #if LANG_CXX11
  void set_cookie(::std::string&& value);
  #endif
  void set_cookie(const char* value);
  void set_cookie(const char* value, size_t size);
  ::std::string* mutable_cookie();
  ::std::string* release_cookie();
  void set_allocated_cookie(::std::string* cookie);

  // .Connection connection = 2;
  bool has_connection() const;
  void clear_connection();
  static const int kConnectionFieldNumber = 2;
  private:
  const ::Connection& _internal_connection() const;
  public:
  const ::Connection& connection() const;
  ::Connection* release_connection();
  ::Connection* mutable_connection();
  void set_allocated_connection(::Connection* connection);

  // .BootstrapInformation information = 3;
  bool has_information() const;
  void clear_information();
  static const int kInformationFieldNumber = 3;
  private:
  const ::BootstrapInformation& _internal_information() const;
  public:
  const ::BootstrapInformation& information() const;
  ::BootstrapInformation* release_information();
  ::BootstrapInformation* mutable_information();
  void set_allocated_information(::BootstrapInformation* information);

  // int64 starting_time = 4;
  void clear_starting_time();
  static const int kStartingTimeFieldNumber = 4;
  ::google::protobuf::int64 starting_time() const;
  void set_starting_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cookie_;
  ::Connection* connection_;
  ::BootstrapInformation* information_;
  ::google::protobuf::int64 starting_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stream : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Stream) */ {
 public:
  Stream();
  virtual ~Stream();

  Stream(const Stream& from);

  inline Stream& operator=(const Stream& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stream(Stream&& from) noexcept
    : Stream() {
    *this = ::std::move(from);
  }

  inline Stream& operator=(Stream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stream* internal_default_instance() {
    return reinterpret_cast<const Stream*>(
               &_Stream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Stream* other);
  friend void swap(Stream& a, Stream& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stream* New() const final {
    return CreateMaybeMessage<Stream>(NULL);
  }

  Stream* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Stream>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Stream& from);
  void MergeFrom(const Stream& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Stream* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  double start() const;
  void set_start(double value);

  // double end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  double end() const;
  void set_end(double value);

  // double range = 4;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  double range() const;
  void set_range(double value);

  // uint64 bytes = 5;
  void clear_bytes();
  static const int kBytesFieldNumber = 5;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // int32 socket_number = 1;
  void clear_socket_number();
  static const int kSocketNumberFieldNumber = 1;
  ::google::protobuf::int32 socket_number() const;
  void set_socket_number(::google::protobuf::int32 value);

  // bool omitted = 7;
  void clear_omitted();
  static const int kOmittedFieldNumber = 7;
  bool omitted() const;
  void set_omitted(bool value);

  // bool sender = 8;
  void clear_sender();
  static const int kSenderFieldNumber = 8;
  bool sender() const;
  void set_sender(bool value);

  // double bits_per_second = 6;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 6;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // @@protoc_insertion_point(class_scope:Stream)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::uint64 bytes_;
  ::google::protobuf::int32 socket_number_;
  bool omitted_;
  bool sender_;
  double bits_per_second_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Interval : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interval) */ {
 public:
  Interval();
  virtual ~Interval();

  Interval(const Interval& from);

  inline Interval& operator=(const Interval& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interval(Interval&& from) noexcept
    : Interval() {
    *this = ::std::move(from);
  }

  inline Interval& operator=(Interval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interval* internal_default_instance() {
    return reinterpret_cast<const Interval*>(
               &_Interval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Interval* other);
  friend void swap(Interval& a, Interval& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interval* New() const final {
    return CreateMaybeMessage<Interval>(NULL);
  }

  Interval* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interval>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interval& from);
  void MergeFrom(const Interval& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interval* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Stream streams = 1;
  int streams_size() const;
  void clear_streams();
  static const int kStreamsFieldNumber = 1;
  ::Stream* mutable_streams(int index);
  ::google::protobuf::RepeatedPtrField< ::Stream >*
      mutable_streams();
  const ::Stream& streams(int index) const;
  ::Stream* add_streams();
  const ::google::protobuf::RepeatedPtrField< ::Stream >&
      streams() const;

  // @@protoc_insertion_point(class_scope:Interval)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Stream > streams_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CumulativeInterval : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CumulativeInterval) */ {
 public:
  CumulativeInterval();
  virtual ~CumulativeInterval();

  CumulativeInterval(const CumulativeInterval& from);

  inline CumulativeInterval& operator=(const CumulativeInterval& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CumulativeInterval(CumulativeInterval&& from) noexcept
    : CumulativeInterval() {
    *this = ::std::move(from);
  }

  inline CumulativeInterval& operator=(CumulativeInterval&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CumulativeInterval& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CumulativeInterval* internal_default_instance() {
    return reinterpret_cast<const CumulativeInterval*>(
               &_CumulativeInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CumulativeInterval* other);
  friend void swap(CumulativeInterval& a, CumulativeInterval& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CumulativeInterval* New() const final {
    return CreateMaybeMessage<CumulativeInterval>(NULL);
  }

  CumulativeInterval* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CumulativeInterval>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CumulativeInterval& from);
  void MergeFrom(const CumulativeInterval& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CumulativeInterval* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  double start() const;
  void set_start(double value);

  // double end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  double end() const;
  void set_end(double value);

  // double range = 3;
  void clear_range();
  static const int kRangeFieldNumber = 3;
  double range() const;
  void set_range(double value);

  // uint64 bytes = 4;
  void clear_bytes();
  static const int kBytesFieldNumber = 4;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // double bits_per_second = 5;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 5;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // @@protoc_insertion_point(class_scope:CumulativeInterval)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::uint64 bytes_;
  double bits_per_second_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedSendingStream : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedSendingStream) */ {
 public:
  ReportedSendingStream();
  virtual ~ReportedSendingStream();

  ReportedSendingStream(const ReportedSendingStream& from);

  inline ReportedSendingStream& operator=(const ReportedSendingStream& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedSendingStream(ReportedSendingStream&& from) noexcept
    : ReportedSendingStream() {
    *this = ::std::move(from);
  }

  inline ReportedSendingStream& operator=(ReportedSendingStream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedSendingStream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedSendingStream* internal_default_instance() {
    return reinterpret_cast<const ReportedSendingStream*>(
               &_ReportedSendingStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ReportedSendingStream* other);
  friend void swap(ReportedSendingStream& a, ReportedSendingStream& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedSendingStream* New() const final {
    return CreateMaybeMessage<ReportedSendingStream>(NULL);
  }

  ReportedSendingStream* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedSendingStream>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedSendingStream& from);
  void MergeFrom(const ReportedSendingStream& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedSendingStream* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  double start() const;
  void set_start(double value);

  // double end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  double end() const;
  void set_end(double value);

  // double range = 4;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  double range() const;
  void set_range(double value);

  // int32 socket_number = 1;
  void clear_socket_number();
  static const int kSocketNumberFieldNumber = 1;
  ::google::protobuf::int32 socket_number() const;
  void set_socket_number(::google::protobuf::int32 value);

  // bool sender = 7;
  void clear_sender();
  static const int kSenderFieldNumber = 7;
  bool sender() const;
  void set_sender(bool value);

  // uint64 bytes = 5;
  void clear_bytes();
  static const int kBytesFieldNumber = 5;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // double bits_per_second = 6;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 6;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // @@protoc_insertion_point(class_scope:ReportedSendingStream)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::int32 socket_number_;
  bool sender_;
  ::google::protobuf::uint64 bytes_;
  double bits_per_second_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedReceivingStream : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedReceivingStream) */ {
 public:
  ReportedReceivingStream();
  virtual ~ReportedReceivingStream();

  ReportedReceivingStream(const ReportedReceivingStream& from);

  inline ReportedReceivingStream& operator=(const ReportedReceivingStream& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedReceivingStream(ReportedReceivingStream&& from) noexcept
    : ReportedReceivingStream() {
    *this = ::std::move(from);
  }

  inline ReportedReceivingStream& operator=(ReportedReceivingStream&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedReceivingStream& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedReceivingStream* internal_default_instance() {
    return reinterpret_cast<const ReportedReceivingStream*>(
               &_ReportedReceivingStream_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ReportedReceivingStream* other);
  friend void swap(ReportedReceivingStream& a, ReportedReceivingStream& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedReceivingStream* New() const final {
    return CreateMaybeMessage<ReportedReceivingStream>(NULL);
  }

  ReportedReceivingStream* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedReceivingStream>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedReceivingStream& from);
  void MergeFrom(const ReportedReceivingStream& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedReceivingStream* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  double start() const;
  void set_start(double value);

  // double end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  double end() const;
  void set_end(double value);

  // double range = 4;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  double range() const;
  void set_range(double value);

  // int32 socket_number = 1;
  void clear_socket_number();
  static const int kSocketNumberFieldNumber = 1;
  ::google::protobuf::int32 socket_number() const;
  void set_socket_number(::google::protobuf::int32 value);

  // bool sender = 7;
  void clear_sender();
  static const int kSenderFieldNumber = 7;
  bool sender() const;
  void set_sender(bool value);

  // uint64 bytes = 5;
  void clear_bytes();
  static const int kBytesFieldNumber = 5;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // double bits_per_second = 6;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 6;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // @@protoc_insertion_point(class_scope:ReportedReceivingStream)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::int32 socket_number_;
  bool sender_;
  ::google::protobuf::uint64 bytes_;
  double bits_per_second_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedStreamsPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedStreamsPair) */ {
 public:
  ReportedStreamsPair();
  virtual ~ReportedStreamsPair();

  ReportedStreamsPair(const ReportedStreamsPair& from);

  inline ReportedStreamsPair& operator=(const ReportedStreamsPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedStreamsPair(ReportedStreamsPair&& from) noexcept
    : ReportedStreamsPair() {
    *this = ::std::move(from);
  }

  inline ReportedStreamsPair& operator=(ReportedStreamsPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedStreamsPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedStreamsPair* internal_default_instance() {
    return reinterpret_cast<const ReportedStreamsPair*>(
               &_ReportedStreamsPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ReportedStreamsPair* other);
  friend void swap(ReportedStreamsPair& a, ReportedStreamsPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedStreamsPair* New() const final {
    return CreateMaybeMessage<ReportedStreamsPair>(NULL);
  }

  ReportedStreamsPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedStreamsPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedStreamsPair& from);
  void MergeFrom(const ReportedStreamsPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedStreamsPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ReportedSendingStream sending_stream = 1;
  bool has_sending_stream() const;
  void clear_sending_stream();
  static const int kSendingStreamFieldNumber = 1;
  private:
  const ::ReportedSendingStream& _internal_sending_stream() const;
  public:
  const ::ReportedSendingStream& sending_stream() const;
  ::ReportedSendingStream* release_sending_stream();
  ::ReportedSendingStream* mutable_sending_stream();
  void set_allocated_sending_stream(::ReportedSendingStream* sending_stream);

  // .ReportedReceivingStream receiving_stream = 2;
  bool has_receiving_stream() const;
  void clear_receiving_stream();
  static const int kReceivingStreamFieldNumber = 2;
  private:
  const ::ReportedReceivingStream& _internal_receiving_stream() const;
  public:
  const ::ReportedReceivingStream& receiving_stream() const;
  ::ReportedReceivingStream* release_receiving_stream();
  ::ReportedReceivingStream* mutable_receiving_stream();
  void set_allocated_receiving_stream(::ReportedReceivingStream* receiving_stream);

  // @@protoc_insertion_point(class_scope:ReportedStreamsPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ReportedSendingStream* sending_stream_;
  ::ReportedReceivingStream* receiving_stream_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedSendingSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedSendingSummary) */ {
 public:
  ReportedSendingSummary();
  virtual ~ReportedSendingSummary();

  ReportedSendingSummary(const ReportedSendingSummary& from);

  inline ReportedSendingSummary& operator=(const ReportedSendingSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedSendingSummary(ReportedSendingSummary&& from) noexcept
    : ReportedSendingSummary() {
    *this = ::std::move(from);
  }

  inline ReportedSendingSummary& operator=(ReportedSendingSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedSendingSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedSendingSummary* internal_default_instance() {
    return reinterpret_cast<const ReportedSendingSummary*>(
               &_ReportedSendingSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ReportedSendingSummary* other);
  friend void swap(ReportedSendingSummary& a, ReportedSendingSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedSendingSummary* New() const final {
    return CreateMaybeMessage<ReportedSendingSummary>(NULL);
  }

  ReportedSendingSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedSendingSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedSendingSummary& from);
  void MergeFrom(const ReportedSendingSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedSendingSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  double start() const;
  void set_start(double value);

  // double end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  double end() const;
  void set_end(double value);

  // double range = 3;
  void clear_range();
  static const int kRangeFieldNumber = 3;
  double range() const;
  void set_range(double value);

  // uint64 bytes = 4;
  void clear_bytes();
  static const int kBytesFieldNumber = 4;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // double bits_per_second = 5;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 5;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // bool sender = 6;
  void clear_sender();
  static const int kSenderFieldNumber = 6;
  bool sender() const;
  void set_sender(bool value);

  // @@protoc_insertion_point(class_scope:ReportedSendingSummary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::uint64 bytes_;
  double bits_per_second_;
  bool sender_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedReceivingSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedReceivingSummary) */ {
 public:
  ReportedReceivingSummary();
  virtual ~ReportedReceivingSummary();

  ReportedReceivingSummary(const ReportedReceivingSummary& from);

  inline ReportedReceivingSummary& operator=(const ReportedReceivingSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedReceivingSummary(ReportedReceivingSummary&& from) noexcept
    : ReportedReceivingSummary() {
    *this = ::std::move(from);
  }

  inline ReportedReceivingSummary& operator=(ReportedReceivingSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedReceivingSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedReceivingSummary* internal_default_instance() {
    return reinterpret_cast<const ReportedReceivingSummary*>(
               &_ReportedReceivingSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ReportedReceivingSummary* other);
  friend void swap(ReportedReceivingSummary& a, ReportedReceivingSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedReceivingSummary* New() const final {
    return CreateMaybeMessage<ReportedReceivingSummary>(NULL);
  }

  ReportedReceivingSummary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedReceivingSummary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedReceivingSummary& from);
  void MergeFrom(const ReportedReceivingSummary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedReceivingSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  double start() const;
  void set_start(double value);

  // double end = 2;
  void clear_end();
  static const int kEndFieldNumber = 2;
  double end() const;
  void set_end(double value);

  // double range = 3;
  void clear_range();
  static const int kRangeFieldNumber = 3;
  double range() const;
  void set_range(double value);

  // uint64 bytes = 4;
  void clear_bytes();
  static const int kBytesFieldNumber = 4;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // double bits_per_second = 5;
  void clear_bits_per_second();
  static const int kBitsPerSecondFieldNumber = 5;
  double bits_per_second() const;
  void set_bits_per_second(double value);

  // bool sender = 6;
  void clear_sender();
  static const int kSenderFieldNumber = 6;
  bool sender() const;
  void set_sender(bool value);

  // @@protoc_insertion_point(class_scope:ReportedReceivingSummary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double start_;
  double end_;
  double range_;
  ::google::protobuf::uint64 bytes_;
  double bits_per_second_;
  bool sender_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportedSummariesPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReportedSummariesPair) */ {
 public:
  ReportedSummariesPair();
  virtual ~ReportedSummariesPair();

  ReportedSummariesPair(const ReportedSummariesPair& from);

  inline ReportedSummariesPair& operator=(const ReportedSummariesPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReportedSummariesPair(ReportedSummariesPair&& from) noexcept
    : ReportedSummariesPair() {
    *this = ::std::move(from);
  }

  inline ReportedSummariesPair& operator=(ReportedSummariesPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportedSummariesPair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReportedSummariesPair* internal_default_instance() {
    return reinterpret_cast<const ReportedSummariesPair*>(
               &_ReportedSummariesPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ReportedSummariesPair* other);
  friend void swap(ReportedSummariesPair& a, ReportedSummariesPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReportedSummariesPair* New() const final {
    return CreateMaybeMessage<ReportedSummariesPair>(NULL);
  }

  ReportedSummariesPair* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReportedSummariesPair>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReportedSummariesPair& from);
  void MergeFrom(const ReportedSummariesPair& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReportedSummariesPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ReportedSendingSummary sending_summary = 1;
  bool has_sending_summary() const;
  void clear_sending_summary();
  static const int kSendingSummaryFieldNumber = 1;
  private:
  const ::ReportedSendingSummary& _internal_sending_summary() const;
  public:
  const ::ReportedSendingSummary& sending_summary() const;
  ::ReportedSendingSummary* release_sending_summary();
  ::ReportedSendingSummary* mutable_sending_summary();
  void set_allocated_sending_summary(::ReportedSendingSummary* sending_summary);

  // .ReportedReceivingSummary receiving_summary = 2;
  bool has_receiving_summary() const;
  void clear_receiving_summary();
  static const int kReceivingSummaryFieldNumber = 2;
  private:
  const ::ReportedReceivingSummary& _internal_receiving_summary() const;
  public:
  const ::ReportedReceivingSummary& receiving_summary() const;
  ::ReportedReceivingSummary* release_receiving_summary();
  ::ReportedReceivingSummary* mutable_receiving_summary();
  void set_allocated_receiving_summary(::ReportedReceivingSummary* receiving_summary);

  // @@protoc_insertion_point(class_scope:ReportedSummariesPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ReportedSendingSummary* sending_summary_;
  ::ReportedReceivingSummary* receiving_summary_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResourceStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResourceStatistics) */ {
 public:
  ResourceStatistics();
  virtual ~ResourceStatistics();

  ResourceStatistics(const ResourceStatistics& from);

  inline ResourceStatistics& operator=(const ResourceStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResourceStatistics(ResourceStatistics&& from) noexcept
    : ResourceStatistics() {
    *this = ::std::move(from);
  }

  inline ResourceStatistics& operator=(ResourceStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResourceStatistics* internal_default_instance() {
    return reinterpret_cast<const ResourceStatistics*>(
               &_ResourceStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(ResourceStatistics* other);
  friend void swap(ResourceStatistics& a, ResourceStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResourceStatistics* New() const final {
    return CreateMaybeMessage<ResourceStatistics>(NULL);
  }

  ResourceStatistics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResourceStatistics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResourceStatistics& from);
  void MergeFrom(const ResourceStatistics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResourceStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double host_total = 1;
  void clear_host_total();
  static const int kHostTotalFieldNumber = 1;
  double host_total() const;
  void set_host_total(double value);

  // double host_user = 2;
  void clear_host_user();
  static const int kHostUserFieldNumber = 2;
  double host_user() const;
  void set_host_user(double value);

  // double host_system = 3;
  void clear_host_system();
  static const int kHostSystemFieldNumber = 3;
  double host_system() const;
  void set_host_system(double value);

  // double remote_total = 4;
  void clear_remote_total();
  static const int kRemoteTotalFieldNumber = 4;
  double remote_total() const;
  void set_remote_total(double value);

  // double remote_user = 5;
  void clear_remote_user();
  static const int kRemoteUserFieldNumber = 5;
  double remote_user() const;
  void set_remote_user(double value);

  // double remote_system = 6;
  void clear_remote_system();
  static const int kRemoteSystemFieldNumber = 6;
  double remote_system() const;
  void set_remote_system(double value);

  // @@protoc_insertion_point(class_scope:ResourceStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double host_total_;
  double host_user_;
  double host_system_;
  double remote_total_;
  double remote_user_;
  double remote_system_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Report) */ {
 public:
  Report();
  virtual ~Report();

  Report(const Report& from);

  inline Report& operator=(const Report& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Report(Report&& from) noexcept
    : Report() {
    *this = ::std::move(from);
  }

  inline Report& operator=(Report&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Report& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Report* internal_default_instance() {
    return reinterpret_cast<const Report*>(
               &_Report_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(Report* other);
  friend void swap(Report& a, Report& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Report* New() const final {
    return CreateMaybeMessage<Report>(NULL);
  }

  Report* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Report>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Report& from);
  void MergeFrom(const Report& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ReportedStreamsPair streams = 1;
  int streams_size() const;
  void clear_streams();
  static const int kStreamsFieldNumber = 1;
  ::ReportedStreamsPair* mutable_streams(int index);
  ::google::protobuf::RepeatedPtrField< ::ReportedStreamsPair >*
      mutable_streams();
  const ::ReportedStreamsPair& streams(int index) const;
  ::ReportedStreamsPair* add_streams();
  const ::google::protobuf::RepeatedPtrField< ::ReportedStreamsPair >&
      streams() const;

  // .ReportedSummariesPair summaries = 2;
  bool has_summaries() const;
  void clear_summaries();
  static const int kSummariesFieldNumber = 2;
  private:
  const ::ReportedSummariesPair& _internal_summaries() const;
  public:
  const ::ReportedSummariesPair& summaries() const;
  ::ReportedSummariesPair* release_summaries();
  ::ReportedSummariesPair* mutable_summaries();
  void set_allocated_summaries(::ReportedSummariesPair* summaries);

  // .ResourceStatistics cpu_usage = 3;
  bool has_cpu_usage() const;
  void clear_cpu_usage();
  static const int kCpuUsageFieldNumber = 3;
  private:
  const ::ResourceStatistics& _internal_cpu_usage() const;
  public:
  const ::ResourceStatistics& cpu_usage() const;
  ::ResourceStatistics* release_cpu_usage();
  ::ResourceStatistics* mutable_cpu_usage();
  void set_allocated_cpu_usage(::ResourceStatistics* cpu_usage);

  // @@protoc_insertion_point(class_scope:Report)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ReportedStreamsPair > streams_;
  ::ReportedSummariesPair* summaries_;
  ::ResourceStatistics* cpu_usage_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Iperf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Iperf) */ {
 public:
  Iperf();
  virtual ~Iperf();

  Iperf(const Iperf& from);

  inline Iperf& operator=(const Iperf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Iperf(Iperf&& from) noexcept
    : Iperf() {
    *this = ::std::move(from);
  }

  inline Iperf& operator=(Iperf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Iperf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Iperf* internal_default_instance() {
    return reinterpret_cast<const Iperf*>(
               &_Iperf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Iperf* other);
  friend void swap(Iperf& a, Iperf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Iperf* New() const final {
    return CreateMaybeMessage<Iperf>(NULL);
  }

  Iperf* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Iperf>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Iperf& from);
  void MergeFrom(const Iperf& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Iperf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Interval intervals = 2;
  int intervals_size() const;
  void clear_intervals();
  static const int kIntervalsFieldNumber = 2;
  ::Interval* mutable_intervals(int index);
  ::google::protobuf::RepeatedPtrField< ::Interval >*
      mutable_intervals();
  const ::Interval& intervals(int index) const;
  ::Interval* add_intervals();
  const ::google::protobuf::RepeatedPtrField< ::Interval >&
      intervals() const;

  // repeated .CumulativeInterval cumulative_intervals = 3;
  int cumulative_intervals_size() const;
  void clear_cumulative_intervals();
  static const int kCumulativeIntervalsFieldNumber = 3;
  ::CumulativeInterval* mutable_cumulative_intervals(int index);
  ::google::protobuf::RepeatedPtrField< ::CumulativeInterval >*
      mutable_cumulative_intervals();
  const ::CumulativeInterval& cumulative_intervals(int index) const;
  ::CumulativeInterval* add_cumulative_intervals();
  const ::google::protobuf::RepeatedPtrField< ::CumulativeInterval >&
      cumulative_intervals() const;

  // .Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Header& _internal_header() const;
  public:
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);

  // .Report end_report = 4;
  bool has_end_report() const;
  void clear_end_report();
  static const int kEndReportFieldNumber = 4;
  private:
  const ::Report& _internal_end_report() const;
  public:
  const ::Report& end_report() const;
  ::Report* release_end_report();
  ::Report* mutable_end_report();
  void set_allocated_end_report(::Report* end_report);

  // @@protoc_insertion_point(class_scope:Iperf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Interval > intervals_;
  ::google::protobuf::RepeatedPtrField< ::CumulativeInterval > cumulative_intervals_;
  ::Header* header_;
  ::Report* end_report_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_iperf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConnectionStatus

// int32 socket_number = 1;
inline void ConnectionStatus::clear_socket_number() {
  socket_number_ = 0;
}
inline ::google::protobuf::int32 ConnectionStatus::socket_number() const {
  // @@protoc_insertion_point(field_get:ConnectionStatus.socket_number)
  return socket_number_;
}
inline void ConnectionStatus::set_socket_number(::google::protobuf::int32 value) {
  
  socket_number_ = value;
  // @@protoc_insertion_point(field_set:ConnectionStatus.socket_number)
}

// string local_host = 2;
inline void ConnectionStatus::clear_local_host() {
  local_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectionStatus::local_host() const {
  // @@protoc_insertion_point(field_get:ConnectionStatus.local_host)
  return local_host_.GetNoArena();
}
inline void ConnectionStatus::set_local_host(const ::std::string& value) {
  
  local_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionStatus.local_host)
}
#if LANG_CXX11
inline void ConnectionStatus::set_local_host(::std::string&& value) {
  
  local_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConnectionStatus.local_host)
}
#endif
inline void ConnectionStatus::set_local_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  local_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionStatus.local_host)
}
inline void ConnectionStatus::set_local_host(const char* value, size_t size) {
  
  local_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionStatus.local_host)
}
inline ::std::string* ConnectionStatus::mutable_local_host() {
  
  // @@protoc_insertion_point(field_mutable:ConnectionStatus.local_host)
  return local_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectionStatus::release_local_host() {
  // @@protoc_insertion_point(field_release:ConnectionStatus.local_host)
  
  return local_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionStatus::set_allocated_local_host(::std::string* local_host) {
  if (local_host != NULL) {
    
  } else {
    
  }
  local_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_host);
  // @@protoc_insertion_point(field_set_allocated:ConnectionStatus.local_host)
}

// uint32 local_port = 3;
inline void ConnectionStatus::clear_local_port() {
  local_port_ = 0u;
}
inline ::google::protobuf::uint32 ConnectionStatus::local_port() const {
  // @@protoc_insertion_point(field_get:ConnectionStatus.local_port)
  return local_port_;
}
inline void ConnectionStatus::set_local_port(::google::protobuf::uint32 value) {
  
  local_port_ = value;
  // @@protoc_insertion_point(field_set:ConnectionStatus.local_port)
}

// string remote_host = 4;
inline void ConnectionStatus::clear_remote_host() {
  remote_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectionStatus::remote_host() const {
  // @@protoc_insertion_point(field_get:ConnectionStatus.remote_host)
  return remote_host_.GetNoArena();
}
inline void ConnectionStatus::set_remote_host(const ::std::string& value) {
  
  remote_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionStatus.remote_host)
}
#if LANG_CXX11
inline void ConnectionStatus::set_remote_host(::std::string&& value) {
  
  remote_host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConnectionStatus.remote_host)
}
#endif
inline void ConnectionStatus::set_remote_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  remote_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionStatus.remote_host)
}
inline void ConnectionStatus::set_remote_host(const char* value, size_t size) {
  
  remote_host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionStatus.remote_host)
}
inline ::std::string* ConnectionStatus::mutable_remote_host() {
  
  // @@protoc_insertion_point(field_mutable:ConnectionStatus.remote_host)
  return remote_host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectionStatus::release_remote_host() {
  // @@protoc_insertion_point(field_release:ConnectionStatus.remote_host)
  
  return remote_host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionStatus::set_allocated_remote_host(::std::string* remote_host) {
  if (remote_host != NULL) {
    
  } else {
    
  }
  remote_host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_host);
  // @@protoc_insertion_point(field_set_allocated:ConnectionStatus.remote_host)
}

// uint32 remote_port = 5;
inline void ConnectionStatus::clear_remote_port() {
  remote_port_ = 0u;
}
inline ::google::protobuf::uint32 ConnectionStatus::remote_port() const {
  // @@protoc_insertion_point(field_get:ConnectionStatus.remote_port)
  return remote_port_;
}
inline void ConnectionStatus::set_remote_port(::google::protobuf::uint32 value) {
  
  remote_port_ = value;
  // @@protoc_insertion_point(field_set:ConnectionStatus.remote_port)
}

// -------------------------------------------------------------------

// ConnectionIntention

// string host = 1;
inline void ConnectionIntention::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectionIntention::host() const {
  // @@protoc_insertion_point(field_get:ConnectionIntention.host)
  return host_.GetNoArena();
}
inline void ConnectionIntention::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConnectionIntention.host)
}
#if LANG_CXX11
inline void ConnectionIntention::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConnectionIntention.host)
}
#endif
inline void ConnectionIntention::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConnectionIntention.host)
}
inline void ConnectionIntention::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConnectionIntention.host)
}
inline ::std::string* ConnectionIntention::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:ConnectionIntention.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectionIntention::release_host() {
  // @@protoc_insertion_point(field_release:ConnectionIntention.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectionIntention::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ConnectionIntention.host)
}

// uint32 port = 2;
inline void ConnectionIntention::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 ConnectionIntention::port() const {
  // @@protoc_insertion_point(field_get:ConnectionIntention.port)
  return port_;
}
inline void ConnectionIntention::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:ConnectionIntention.port)
}

// -------------------------------------------------------------------

// Connection

// repeated .ConnectionStatus connections = 1;
inline int Connection::connections_size() const {
  return connections_.size();
}
inline void Connection::clear_connections() {
  connections_.Clear();
}
inline ::ConnectionStatus* Connection::mutable_connections(int index) {
  // @@protoc_insertion_point(field_mutable:Connection.connections)
  return connections_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ConnectionStatus >*
Connection::mutable_connections() {
  // @@protoc_insertion_point(field_mutable_list:Connection.connections)
  return &connections_;
}
inline const ::ConnectionStatus& Connection::connections(int index) const {
  // @@protoc_insertion_point(field_get:Connection.connections)
  return connections_.Get(index);
}
inline ::ConnectionStatus* Connection::add_connections() {
  // @@protoc_insertion_point(field_add:Connection.connections)
  return connections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConnectionStatus >&
Connection::connections() const {
  // @@protoc_insertion_point(field_list:Connection.connections)
  return connections_;
}

// .ConnectionIntention intention = 2;
inline bool Connection::has_intention() const {
  return this != internal_default_instance() && intention_ != NULL;
}
inline void Connection::clear_intention() {
  if (GetArenaNoVirtual() == NULL && intention_ != NULL) {
    delete intention_;
  }
  intention_ = NULL;
}
inline const ::ConnectionIntention& Connection::_internal_intention() const {
  return *intention_;
}
inline const ::ConnectionIntention& Connection::intention() const {
  const ::ConnectionIntention* p = intention_;
  // @@protoc_insertion_point(field_get:Connection.intention)
  return p != NULL ? *p : *reinterpret_cast<const ::ConnectionIntention*>(
      &::_ConnectionIntention_default_instance_);
}
inline ::ConnectionIntention* Connection::release_intention() {
  // @@protoc_insertion_point(field_release:Connection.intention)
  
  ::ConnectionIntention* temp = intention_;
  intention_ = NULL;
  return temp;
}
inline ::ConnectionIntention* Connection::mutable_intention() {
  
  if (intention_ == NULL) {
    auto* p = CreateMaybeMessage<::ConnectionIntention>(GetArenaNoVirtual());
    intention_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Connection.intention)
  return intention_;
}
inline void Connection::set_allocated_intention(::ConnectionIntention* intention) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete intention_;
  }
  if (intention) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intention = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intention, submessage_arena);
    }
    
  } else {
    
  }
  intention_ = intention;
  // @@protoc_insertion_point(field_set_allocated:Connection.intention)
}

// -------------------------------------------------------------------

// BootstrapInformation

// string version = 1;
inline void BootstrapInformation::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BootstrapInformation::version() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.version)
  return version_.GetNoArena();
}
inline void BootstrapInformation::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BootstrapInformation.version)
}
#if LANG_CXX11
inline void BootstrapInformation::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BootstrapInformation.version)
}
#endif
inline void BootstrapInformation::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BootstrapInformation.version)
}
inline void BootstrapInformation::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BootstrapInformation.version)
}
inline ::std::string* BootstrapInformation::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:BootstrapInformation.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BootstrapInformation::release_version() {
  // @@protoc_insertion_point(field_release:BootstrapInformation.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BootstrapInformation::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:BootstrapInformation.version)
}

// string system_information = 2;
inline void BootstrapInformation::clear_system_information() {
  system_information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BootstrapInformation::system_information() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.system_information)
  return system_information_.GetNoArena();
}
inline void BootstrapInformation::set_system_information(const ::std::string& value) {
  
  system_information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BootstrapInformation.system_information)
}
#if LANG_CXX11
inline void BootstrapInformation::set_system_information(::std::string&& value) {
  
  system_information_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BootstrapInformation.system_information)
}
#endif
inline void BootstrapInformation::set_system_information(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BootstrapInformation.system_information)
}
inline void BootstrapInformation::set_system_information(const char* value, size_t size) {
  
  system_information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BootstrapInformation.system_information)
}
inline ::std::string* BootstrapInformation::mutable_system_information() {
  
  // @@protoc_insertion_point(field_mutable:BootstrapInformation.system_information)
  return system_information_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BootstrapInformation::release_system_information() {
  // @@protoc_insertion_point(field_release:BootstrapInformation.system_information)
  
  return system_information_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BootstrapInformation::set_allocated_system_information(::std::string* system_information) {
  if (system_information != NULL) {
    
  } else {
    
  }
  system_information_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_information);
  // @@protoc_insertion_point(field_set_allocated:BootstrapInformation.system_information)
}

// int32 tcp_mss_default = 3;
inline void BootstrapInformation::clear_tcp_mss_default() {
  tcp_mss_default_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::tcp_mss_default() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.tcp_mss_default)
  return tcp_mss_default_;
}
inline void BootstrapInformation::set_tcp_mss_default(::google::protobuf::int32 value) {
  
  tcp_mss_default_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.tcp_mss_default)
}

// double target_bitrate = 4;
inline void BootstrapInformation::clear_target_bitrate() {
  target_bitrate_ = 0;
}
inline double BootstrapInformation::target_bitrate() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.target_bitrate)
  return target_bitrate_;
}
inline void BootstrapInformation::set_target_bitrate(double value) {
  
  target_bitrate_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.target_bitrate)
}

// int32 sock_bufsize = 5;
inline void BootstrapInformation::clear_sock_bufsize() {
  sock_bufsize_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::sock_bufsize() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.sock_bufsize)
  return sock_bufsize_;
}
inline void BootstrapInformation::set_sock_bufsize(::google::protobuf::int32 value) {
  
  sock_bufsize_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.sock_bufsize)
}

// int32 sndbuf_actual = 6;
inline void BootstrapInformation::clear_sndbuf_actual() {
  sndbuf_actual_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::sndbuf_actual() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.sndbuf_actual)
  return sndbuf_actual_;
}
inline void BootstrapInformation::set_sndbuf_actual(::google::protobuf::int32 value) {
  
  sndbuf_actual_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.sndbuf_actual)
}

// int32 rcvbuf_actual = 7;
inline void BootstrapInformation::clear_rcvbuf_actual() {
  rcvbuf_actual_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::rcvbuf_actual() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.rcvbuf_actual)
  return rcvbuf_actual_;
}
inline void BootstrapInformation::set_rcvbuf_actual(::google::protobuf::int32 value) {
  
  rcvbuf_actual_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.rcvbuf_actual)
}

// .ProtocolType protocol = 8;
inline void BootstrapInformation::clear_protocol() {
  protocol_ = 0;
}
inline ::ProtocolType BootstrapInformation::protocol() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.protocol)
  return static_cast< ::ProtocolType >(protocol_);
}
inline void BootstrapInformation::set_protocol(::ProtocolType value) {
  
  protocol_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.protocol)
}

// int32 number_of_streams = 9;
inline void BootstrapInformation::clear_number_of_streams() {
  number_of_streams_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::number_of_streams() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.number_of_streams)
  return number_of_streams_;
}
inline void BootstrapInformation::set_number_of_streams(::google::protobuf::int32 value) {
  
  number_of_streams_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.number_of_streams)
}

// int32 block_size = 10;
inline void BootstrapInformation::clear_block_size() {
  block_size_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::block_size() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.block_size)
  return block_size_;
}
inline void BootstrapInformation::set_block_size(::google::protobuf::int32 value) {
  
  block_size_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.block_size)
}

// int32 omitted_seconds = 11;
inline void BootstrapInformation::clear_omitted_seconds() {
  omitted_seconds_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::omitted_seconds() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.omitted_seconds)
  return omitted_seconds_;
}
inline void BootstrapInformation::set_omitted_seconds(::google::protobuf::int32 value) {
  
  omitted_seconds_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.omitted_seconds)
}

// int32 duration = 12;
inline void BootstrapInformation::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::duration() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.duration)
  return duration_;
}
inline void BootstrapInformation::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.duration)
}

// int32 bytes = 13;
inline void BootstrapInformation::clear_bytes() {
  bytes_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::bytes() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.bytes)
  return bytes_;
}
inline void BootstrapInformation::set_bytes(::google::protobuf::int32 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.bytes)
}

// int32 blocks = 14;
inline void BootstrapInformation::clear_blocks() {
  blocks_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::blocks() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.blocks)
  return blocks_;
}
inline void BootstrapInformation::set_blocks(::google::protobuf::int32 value) {
  
  blocks_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.blocks)
}

// bool reverse_mode = 15;
inline void BootstrapInformation::clear_reverse_mode() {
  reverse_mode_ = false;
}
inline bool BootstrapInformation::reverse_mode() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.reverse_mode)
  return reverse_mode_;
}
inline void BootstrapInformation::set_reverse_mode(bool value) {
  
  reverse_mode_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.reverse_mode)
}

// int32 tos = 16;
inline void BootstrapInformation::clear_tos() {
  tos_ = 0;
}
inline ::google::protobuf::int32 BootstrapInformation::tos() const {
  // @@protoc_insertion_point(field_get:BootstrapInformation.tos)
  return tos_;
}
inline void BootstrapInformation::set_tos(::google::protobuf::int32 value) {
  
  tos_ = value;
  // @@protoc_insertion_point(field_set:BootstrapInformation.tos)
}

// -------------------------------------------------------------------

// Header

// string cookie = 1;
inline void Header::clear_cookie() {
  cookie_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::cookie() const {
  // @@protoc_insertion_point(field_get:Header.cookie)
  return cookie_.GetNoArena();
}
inline void Header::set_cookie(const ::std::string& value) {
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Header.cookie)
}
#if LANG_CXX11
inline void Header::set_cookie(::std::string&& value) {
  
  cookie_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Header.cookie)
}
#endif
inline void Header::set_cookie(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Header.cookie)
}
inline void Header::set_cookie(const char* value, size_t size) {
  
  cookie_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Header.cookie)
}
inline ::std::string* Header::mutable_cookie() {
  
  // @@protoc_insertion_point(field_mutable:Header.cookie)
  return cookie_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_cookie() {
  // @@protoc_insertion_point(field_release:Header.cookie)
  
  return cookie_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_cookie(::std::string* cookie) {
  if (cookie != NULL) {
    
  } else {
    
  }
  cookie_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cookie);
  // @@protoc_insertion_point(field_set_allocated:Header.cookie)
}

// .Connection connection = 2;
inline bool Header::has_connection() const {
  return this != internal_default_instance() && connection_ != NULL;
}
inline void Header::clear_connection() {
  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
}
inline const ::Connection& Header::_internal_connection() const {
  return *connection_;
}
inline const ::Connection& Header::connection() const {
  const ::Connection* p = connection_;
  // @@protoc_insertion_point(field_get:Header.connection)
  return p != NULL ? *p : *reinterpret_cast<const ::Connection*>(
      &::_Connection_default_instance_);
}
inline ::Connection* Header::release_connection() {
  // @@protoc_insertion_point(field_release:Header.connection)
  
  ::Connection* temp = connection_;
  connection_ = NULL;
  return temp;
}
inline ::Connection* Header::mutable_connection() {
  
  if (connection_ == NULL) {
    auto* p = CreateMaybeMessage<::Connection>(GetArenaNoVirtual());
    connection_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Header.connection)
  return connection_;
}
inline void Header::set_allocated_connection(::Connection* connection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete connection_;
  }
  if (connection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection, submessage_arena);
    }
    
  } else {
    
  }
  connection_ = connection;
  // @@protoc_insertion_point(field_set_allocated:Header.connection)
}

// .BootstrapInformation information = 3;
inline bool Header::has_information() const {
  return this != internal_default_instance() && information_ != NULL;
}
inline void Header::clear_information() {
  if (GetArenaNoVirtual() == NULL && information_ != NULL) {
    delete information_;
  }
  information_ = NULL;
}
inline const ::BootstrapInformation& Header::_internal_information() const {
  return *information_;
}
inline const ::BootstrapInformation& Header::information() const {
  const ::BootstrapInformation* p = information_;
  // @@protoc_insertion_point(field_get:Header.information)
  return p != NULL ? *p : *reinterpret_cast<const ::BootstrapInformation*>(
      &::_BootstrapInformation_default_instance_);
}
inline ::BootstrapInformation* Header::release_information() {
  // @@protoc_insertion_point(field_release:Header.information)
  
  ::BootstrapInformation* temp = information_;
  information_ = NULL;
  return temp;
}
inline ::BootstrapInformation* Header::mutable_information() {
  
  if (information_ == NULL) {
    auto* p = CreateMaybeMessage<::BootstrapInformation>(GetArenaNoVirtual());
    information_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Header.information)
  return information_;
}
inline void Header::set_allocated_information(::BootstrapInformation* information) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete information_;
  }
  if (information) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      information = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, information, submessage_arena);
    }
    
  } else {
    
  }
  information_ = information;
  // @@protoc_insertion_point(field_set_allocated:Header.information)
}

// int64 starting_time = 4;
inline void Header::clear_starting_time() {
  starting_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Header::starting_time() const {
  // @@protoc_insertion_point(field_get:Header.starting_time)
  return starting_time_;
}
inline void Header::set_starting_time(::google::protobuf::int64 value) {
  
  starting_time_ = value;
  // @@protoc_insertion_point(field_set:Header.starting_time)
}

// -------------------------------------------------------------------

// Stream

// int32 socket_number = 1;
inline void Stream::clear_socket_number() {
  socket_number_ = 0;
}
inline ::google::protobuf::int32 Stream::socket_number() const {
  // @@protoc_insertion_point(field_get:Stream.socket_number)
  return socket_number_;
}
inline void Stream::set_socket_number(::google::protobuf::int32 value) {
  
  socket_number_ = value;
  // @@protoc_insertion_point(field_set:Stream.socket_number)
}

// double start = 2;
inline void Stream::clear_start() {
  start_ = 0;
}
inline double Stream::start() const {
  // @@protoc_insertion_point(field_get:Stream.start)
  return start_;
}
inline void Stream::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:Stream.start)
}

// double end = 3;
inline void Stream::clear_end() {
  end_ = 0;
}
inline double Stream::end() const {
  // @@protoc_insertion_point(field_get:Stream.end)
  return end_;
}
inline void Stream::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:Stream.end)
}

// double range = 4;
inline void Stream::clear_range() {
  range_ = 0;
}
inline double Stream::range() const {
  // @@protoc_insertion_point(field_get:Stream.range)
  return range_;
}
inline void Stream::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:Stream.range)
}

// uint64 bytes = 5;
inline void Stream::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Stream::bytes() const {
  // @@protoc_insertion_point(field_get:Stream.bytes)
  return bytes_;
}
inline void Stream::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:Stream.bytes)
}

// double bits_per_second = 6;
inline void Stream::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double Stream::bits_per_second() const {
  // @@protoc_insertion_point(field_get:Stream.bits_per_second)
  return bits_per_second_;
}
inline void Stream::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:Stream.bits_per_second)
}

// bool omitted = 7;
inline void Stream::clear_omitted() {
  omitted_ = false;
}
inline bool Stream::omitted() const {
  // @@protoc_insertion_point(field_get:Stream.omitted)
  return omitted_;
}
inline void Stream::set_omitted(bool value) {
  
  omitted_ = value;
  // @@protoc_insertion_point(field_set:Stream.omitted)
}

// bool sender = 8;
inline void Stream::clear_sender() {
  sender_ = false;
}
inline bool Stream::sender() const {
  // @@protoc_insertion_point(field_get:Stream.sender)
  return sender_;
}
inline void Stream::set_sender(bool value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:Stream.sender)
}

// -------------------------------------------------------------------

// Interval

// repeated .Stream streams = 1;
inline int Interval::streams_size() const {
  return streams_.size();
}
inline void Interval::clear_streams() {
  streams_.Clear();
}
inline ::Stream* Interval::mutable_streams(int index) {
  // @@protoc_insertion_point(field_mutable:Interval.streams)
  return streams_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Stream >*
Interval::mutable_streams() {
  // @@protoc_insertion_point(field_mutable_list:Interval.streams)
  return &streams_;
}
inline const ::Stream& Interval::streams(int index) const {
  // @@protoc_insertion_point(field_get:Interval.streams)
  return streams_.Get(index);
}
inline ::Stream* Interval::add_streams() {
  // @@protoc_insertion_point(field_add:Interval.streams)
  return streams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Stream >&
Interval::streams() const {
  // @@protoc_insertion_point(field_list:Interval.streams)
  return streams_;
}

// -------------------------------------------------------------------

// CumulativeInterval

// double start = 1;
inline void CumulativeInterval::clear_start() {
  start_ = 0;
}
inline double CumulativeInterval::start() const {
  // @@protoc_insertion_point(field_get:CumulativeInterval.start)
  return start_;
}
inline void CumulativeInterval::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:CumulativeInterval.start)
}

// double end = 2;
inline void CumulativeInterval::clear_end() {
  end_ = 0;
}
inline double CumulativeInterval::end() const {
  // @@protoc_insertion_point(field_get:CumulativeInterval.end)
  return end_;
}
inline void CumulativeInterval::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:CumulativeInterval.end)
}

// double range = 3;
inline void CumulativeInterval::clear_range() {
  range_ = 0;
}
inline double CumulativeInterval::range() const {
  // @@protoc_insertion_point(field_get:CumulativeInterval.range)
  return range_;
}
inline void CumulativeInterval::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:CumulativeInterval.range)
}

// uint64 bytes = 4;
inline void CumulativeInterval::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CumulativeInterval::bytes() const {
  // @@protoc_insertion_point(field_get:CumulativeInterval.bytes)
  return bytes_;
}
inline void CumulativeInterval::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:CumulativeInterval.bytes)
}

// double bits_per_second = 5;
inline void CumulativeInterval::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double CumulativeInterval::bits_per_second() const {
  // @@protoc_insertion_point(field_get:CumulativeInterval.bits_per_second)
  return bits_per_second_;
}
inline void CumulativeInterval::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:CumulativeInterval.bits_per_second)
}

// -------------------------------------------------------------------

// ReportedSendingStream

// int32 socket_number = 1;
inline void ReportedSendingStream::clear_socket_number() {
  socket_number_ = 0;
}
inline ::google::protobuf::int32 ReportedSendingStream::socket_number() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.socket_number)
  return socket_number_;
}
inline void ReportedSendingStream::set_socket_number(::google::protobuf::int32 value) {
  
  socket_number_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.socket_number)
}

// double start = 2;
inline void ReportedSendingStream::clear_start() {
  start_ = 0;
}
inline double ReportedSendingStream::start() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.start)
  return start_;
}
inline void ReportedSendingStream::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.start)
}

// double end = 3;
inline void ReportedSendingStream::clear_end() {
  end_ = 0;
}
inline double ReportedSendingStream::end() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.end)
  return end_;
}
inline void ReportedSendingStream::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.end)
}

// double range = 4;
inline void ReportedSendingStream::clear_range() {
  range_ = 0;
}
inline double ReportedSendingStream::range() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.range)
  return range_;
}
inline void ReportedSendingStream::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.range)
}

// uint64 bytes = 5;
inline void ReportedSendingStream::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReportedSendingStream::bytes() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.bytes)
  return bytes_;
}
inline void ReportedSendingStream::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.bytes)
}

// double bits_per_second = 6;
inline void ReportedSendingStream::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double ReportedSendingStream::bits_per_second() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.bits_per_second)
  return bits_per_second_;
}
inline void ReportedSendingStream::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.bits_per_second)
}

// bool sender = 7;
inline void ReportedSendingStream::clear_sender() {
  sender_ = false;
}
inline bool ReportedSendingStream::sender() const {
  // @@protoc_insertion_point(field_get:ReportedSendingStream.sender)
  return sender_;
}
inline void ReportedSendingStream::set_sender(bool value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingStream.sender)
}

// -------------------------------------------------------------------

// ReportedReceivingStream

// int32 socket_number = 1;
inline void ReportedReceivingStream::clear_socket_number() {
  socket_number_ = 0;
}
inline ::google::protobuf::int32 ReportedReceivingStream::socket_number() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.socket_number)
  return socket_number_;
}
inline void ReportedReceivingStream::set_socket_number(::google::protobuf::int32 value) {
  
  socket_number_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.socket_number)
}

// double start = 2;
inline void ReportedReceivingStream::clear_start() {
  start_ = 0;
}
inline double ReportedReceivingStream::start() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.start)
  return start_;
}
inline void ReportedReceivingStream::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.start)
}

// double end = 3;
inline void ReportedReceivingStream::clear_end() {
  end_ = 0;
}
inline double ReportedReceivingStream::end() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.end)
  return end_;
}
inline void ReportedReceivingStream::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.end)
}

// double range = 4;
inline void ReportedReceivingStream::clear_range() {
  range_ = 0;
}
inline double ReportedReceivingStream::range() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.range)
  return range_;
}
inline void ReportedReceivingStream::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.range)
}

// uint64 bytes = 5;
inline void ReportedReceivingStream::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReportedReceivingStream::bytes() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.bytes)
  return bytes_;
}
inline void ReportedReceivingStream::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.bytes)
}

// double bits_per_second = 6;
inline void ReportedReceivingStream::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double ReportedReceivingStream::bits_per_second() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.bits_per_second)
  return bits_per_second_;
}
inline void ReportedReceivingStream::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.bits_per_second)
}

// bool sender = 7;
inline void ReportedReceivingStream::clear_sender() {
  sender_ = false;
}
inline bool ReportedReceivingStream::sender() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingStream.sender)
  return sender_;
}
inline void ReportedReceivingStream::set_sender(bool value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingStream.sender)
}

// -------------------------------------------------------------------

// ReportedStreamsPair

// .ReportedSendingStream sending_stream = 1;
inline bool ReportedStreamsPair::has_sending_stream() const {
  return this != internal_default_instance() && sending_stream_ != NULL;
}
inline void ReportedStreamsPair::clear_sending_stream() {
  if (GetArenaNoVirtual() == NULL && sending_stream_ != NULL) {
    delete sending_stream_;
  }
  sending_stream_ = NULL;
}
inline const ::ReportedSendingStream& ReportedStreamsPair::_internal_sending_stream() const {
  return *sending_stream_;
}
inline const ::ReportedSendingStream& ReportedStreamsPair::sending_stream() const {
  const ::ReportedSendingStream* p = sending_stream_;
  // @@protoc_insertion_point(field_get:ReportedStreamsPair.sending_stream)
  return p != NULL ? *p : *reinterpret_cast<const ::ReportedSendingStream*>(
      &::_ReportedSendingStream_default_instance_);
}
inline ::ReportedSendingStream* ReportedStreamsPair::release_sending_stream() {
  // @@protoc_insertion_point(field_release:ReportedStreamsPair.sending_stream)
  
  ::ReportedSendingStream* temp = sending_stream_;
  sending_stream_ = NULL;
  return temp;
}
inline ::ReportedSendingStream* ReportedStreamsPair::mutable_sending_stream() {
  
  if (sending_stream_ == NULL) {
    auto* p = CreateMaybeMessage<::ReportedSendingStream>(GetArenaNoVirtual());
    sending_stream_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ReportedStreamsPair.sending_stream)
  return sending_stream_;
}
inline void ReportedStreamsPair::set_allocated_sending_stream(::ReportedSendingStream* sending_stream) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sending_stream_;
  }
  if (sending_stream) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sending_stream = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sending_stream, submessage_arena);
    }
    
  } else {
    
  }
  sending_stream_ = sending_stream;
  // @@protoc_insertion_point(field_set_allocated:ReportedStreamsPair.sending_stream)
}

// .ReportedReceivingStream receiving_stream = 2;
inline bool ReportedStreamsPair::has_receiving_stream() const {
  return this != internal_default_instance() && receiving_stream_ != NULL;
}
inline void ReportedStreamsPair::clear_receiving_stream() {
  if (GetArenaNoVirtual() == NULL && receiving_stream_ != NULL) {
    delete receiving_stream_;
  }
  receiving_stream_ = NULL;
}
inline const ::ReportedReceivingStream& ReportedStreamsPair::_internal_receiving_stream() const {
  return *receiving_stream_;
}
inline const ::ReportedReceivingStream& ReportedStreamsPair::receiving_stream() const {
  const ::ReportedReceivingStream* p = receiving_stream_;
  // @@protoc_insertion_point(field_get:ReportedStreamsPair.receiving_stream)
  return p != NULL ? *p : *reinterpret_cast<const ::ReportedReceivingStream*>(
      &::_ReportedReceivingStream_default_instance_);
}
inline ::ReportedReceivingStream* ReportedStreamsPair::release_receiving_stream() {
  // @@protoc_insertion_point(field_release:ReportedStreamsPair.receiving_stream)
  
  ::ReportedReceivingStream* temp = receiving_stream_;
  receiving_stream_ = NULL;
  return temp;
}
inline ::ReportedReceivingStream* ReportedStreamsPair::mutable_receiving_stream() {
  
  if (receiving_stream_ == NULL) {
    auto* p = CreateMaybeMessage<::ReportedReceivingStream>(GetArenaNoVirtual());
    receiving_stream_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ReportedStreamsPair.receiving_stream)
  return receiving_stream_;
}
inline void ReportedStreamsPair::set_allocated_receiving_stream(::ReportedReceivingStream* receiving_stream) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete receiving_stream_;
  }
  if (receiving_stream) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      receiving_stream = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, receiving_stream, submessage_arena);
    }
    
  } else {
    
  }
  receiving_stream_ = receiving_stream;
  // @@protoc_insertion_point(field_set_allocated:ReportedStreamsPair.receiving_stream)
}

// -------------------------------------------------------------------

// ReportedSendingSummary

// double start = 1;
inline void ReportedSendingSummary::clear_start() {
  start_ = 0;
}
inline double ReportedSendingSummary::start() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.start)
  return start_;
}
inline void ReportedSendingSummary::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.start)
}

// double end = 2;
inline void ReportedSendingSummary::clear_end() {
  end_ = 0;
}
inline double ReportedSendingSummary::end() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.end)
  return end_;
}
inline void ReportedSendingSummary::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.end)
}

// double range = 3;
inline void ReportedSendingSummary::clear_range() {
  range_ = 0;
}
inline double ReportedSendingSummary::range() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.range)
  return range_;
}
inline void ReportedSendingSummary::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.range)
}

// uint64 bytes = 4;
inline void ReportedSendingSummary::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReportedSendingSummary::bytes() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.bytes)
  return bytes_;
}
inline void ReportedSendingSummary::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.bytes)
}

// double bits_per_second = 5;
inline void ReportedSendingSummary::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double ReportedSendingSummary::bits_per_second() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.bits_per_second)
  return bits_per_second_;
}
inline void ReportedSendingSummary::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.bits_per_second)
}

// bool sender = 6;
inline void ReportedSendingSummary::clear_sender() {
  sender_ = false;
}
inline bool ReportedSendingSummary::sender() const {
  // @@protoc_insertion_point(field_get:ReportedSendingSummary.sender)
  return sender_;
}
inline void ReportedSendingSummary::set_sender(bool value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:ReportedSendingSummary.sender)
}

// -------------------------------------------------------------------

// ReportedReceivingSummary

// double start = 1;
inline void ReportedReceivingSummary::clear_start() {
  start_ = 0;
}
inline double ReportedReceivingSummary::start() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.start)
  return start_;
}
inline void ReportedReceivingSummary::set_start(double value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.start)
}

// double end = 2;
inline void ReportedReceivingSummary::clear_end() {
  end_ = 0;
}
inline double ReportedReceivingSummary::end() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.end)
  return end_;
}
inline void ReportedReceivingSummary::set_end(double value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.end)
}

// double range = 3;
inline void ReportedReceivingSummary::clear_range() {
  range_ = 0;
}
inline double ReportedReceivingSummary::range() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.range)
  return range_;
}
inline void ReportedReceivingSummary::set_range(double value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.range)
}

// uint64 bytes = 4;
inline void ReportedReceivingSummary::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReportedReceivingSummary::bytes() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.bytes)
  return bytes_;
}
inline void ReportedReceivingSummary::set_bytes(::google::protobuf::uint64 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.bytes)
}

// double bits_per_second = 5;
inline void ReportedReceivingSummary::clear_bits_per_second() {
  bits_per_second_ = 0;
}
inline double ReportedReceivingSummary::bits_per_second() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.bits_per_second)
  return bits_per_second_;
}
inline void ReportedReceivingSummary::set_bits_per_second(double value) {
  
  bits_per_second_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.bits_per_second)
}

// bool sender = 6;
inline void ReportedReceivingSummary::clear_sender() {
  sender_ = false;
}
inline bool ReportedReceivingSummary::sender() const {
  // @@protoc_insertion_point(field_get:ReportedReceivingSummary.sender)
  return sender_;
}
inline void ReportedReceivingSummary::set_sender(bool value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:ReportedReceivingSummary.sender)
}

// -------------------------------------------------------------------

// ReportedSummariesPair

// .ReportedSendingSummary sending_summary = 1;
inline bool ReportedSummariesPair::has_sending_summary() const {
  return this != internal_default_instance() && sending_summary_ != NULL;
}
inline void ReportedSummariesPair::clear_sending_summary() {
  if (GetArenaNoVirtual() == NULL && sending_summary_ != NULL) {
    delete sending_summary_;
  }
  sending_summary_ = NULL;
}
inline const ::ReportedSendingSummary& ReportedSummariesPair::_internal_sending_summary() const {
  return *sending_summary_;
}
inline const ::ReportedSendingSummary& ReportedSummariesPair::sending_summary() const {
  const ::ReportedSendingSummary* p = sending_summary_;
  // @@protoc_insertion_point(field_get:ReportedSummariesPair.sending_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::ReportedSendingSummary*>(
      &::_ReportedSendingSummary_default_instance_);
}
inline ::ReportedSendingSummary* ReportedSummariesPair::release_sending_summary() {
  // @@protoc_insertion_point(field_release:ReportedSummariesPair.sending_summary)
  
  ::ReportedSendingSummary* temp = sending_summary_;
  sending_summary_ = NULL;
  return temp;
}
inline ::ReportedSendingSummary* ReportedSummariesPair::mutable_sending_summary() {
  
  if (sending_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::ReportedSendingSummary>(GetArenaNoVirtual());
    sending_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ReportedSummariesPair.sending_summary)
  return sending_summary_;
}
inline void ReportedSummariesPair::set_allocated_sending_summary(::ReportedSendingSummary* sending_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sending_summary_;
  }
  if (sending_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sending_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sending_summary, submessage_arena);
    }
    
  } else {
    
  }
  sending_summary_ = sending_summary;
  // @@protoc_insertion_point(field_set_allocated:ReportedSummariesPair.sending_summary)
}

// .ReportedReceivingSummary receiving_summary = 2;
inline bool ReportedSummariesPair::has_receiving_summary() const {
  return this != internal_default_instance() && receiving_summary_ != NULL;
}
inline void ReportedSummariesPair::clear_receiving_summary() {
  if (GetArenaNoVirtual() == NULL && receiving_summary_ != NULL) {
    delete receiving_summary_;
  }
  receiving_summary_ = NULL;
}
inline const ::ReportedReceivingSummary& ReportedSummariesPair::_internal_receiving_summary() const {
  return *receiving_summary_;
}
inline const ::ReportedReceivingSummary& ReportedSummariesPair::receiving_summary() const {
  const ::ReportedReceivingSummary* p = receiving_summary_;
  // @@protoc_insertion_point(field_get:ReportedSummariesPair.receiving_summary)
  return p != NULL ? *p : *reinterpret_cast<const ::ReportedReceivingSummary*>(
      &::_ReportedReceivingSummary_default_instance_);
}
inline ::ReportedReceivingSummary* ReportedSummariesPair::release_receiving_summary() {
  // @@protoc_insertion_point(field_release:ReportedSummariesPair.receiving_summary)
  
  ::ReportedReceivingSummary* temp = receiving_summary_;
  receiving_summary_ = NULL;
  return temp;
}
inline ::ReportedReceivingSummary* ReportedSummariesPair::mutable_receiving_summary() {
  
  if (receiving_summary_ == NULL) {
    auto* p = CreateMaybeMessage<::ReportedReceivingSummary>(GetArenaNoVirtual());
    receiving_summary_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ReportedSummariesPair.receiving_summary)
  return receiving_summary_;
}
inline void ReportedSummariesPair::set_allocated_receiving_summary(::ReportedReceivingSummary* receiving_summary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete receiving_summary_;
  }
  if (receiving_summary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      receiving_summary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, receiving_summary, submessage_arena);
    }
    
  } else {
    
  }
  receiving_summary_ = receiving_summary;
  // @@protoc_insertion_point(field_set_allocated:ReportedSummariesPair.receiving_summary)
}

// -------------------------------------------------------------------

// ResourceStatistics

// double host_total = 1;
inline void ResourceStatistics::clear_host_total() {
  host_total_ = 0;
}
inline double ResourceStatistics::host_total() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.host_total)
  return host_total_;
}
inline void ResourceStatistics::set_host_total(double value) {
  
  host_total_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.host_total)
}

// double host_user = 2;
inline void ResourceStatistics::clear_host_user() {
  host_user_ = 0;
}
inline double ResourceStatistics::host_user() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.host_user)
  return host_user_;
}
inline void ResourceStatistics::set_host_user(double value) {
  
  host_user_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.host_user)
}

// double host_system = 3;
inline void ResourceStatistics::clear_host_system() {
  host_system_ = 0;
}
inline double ResourceStatistics::host_system() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.host_system)
  return host_system_;
}
inline void ResourceStatistics::set_host_system(double value) {
  
  host_system_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.host_system)
}

// double remote_total = 4;
inline void ResourceStatistics::clear_remote_total() {
  remote_total_ = 0;
}
inline double ResourceStatistics::remote_total() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.remote_total)
  return remote_total_;
}
inline void ResourceStatistics::set_remote_total(double value) {
  
  remote_total_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.remote_total)
}

// double remote_user = 5;
inline void ResourceStatistics::clear_remote_user() {
  remote_user_ = 0;
}
inline double ResourceStatistics::remote_user() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.remote_user)
  return remote_user_;
}
inline void ResourceStatistics::set_remote_user(double value) {
  
  remote_user_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.remote_user)
}

// double remote_system = 6;
inline void ResourceStatistics::clear_remote_system() {
  remote_system_ = 0;
}
inline double ResourceStatistics::remote_system() const {
  // @@protoc_insertion_point(field_get:ResourceStatistics.remote_system)
  return remote_system_;
}
inline void ResourceStatistics::set_remote_system(double value) {
  
  remote_system_ = value;
  // @@protoc_insertion_point(field_set:ResourceStatistics.remote_system)
}

// -------------------------------------------------------------------

// Report

// repeated .ReportedStreamsPair streams = 1;
inline int Report::streams_size() const {
  return streams_.size();
}
inline void Report::clear_streams() {
  streams_.Clear();
}
inline ::ReportedStreamsPair* Report::mutable_streams(int index) {
  // @@protoc_insertion_point(field_mutable:Report.streams)
  return streams_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ReportedStreamsPair >*
Report::mutable_streams() {
  // @@protoc_insertion_point(field_mutable_list:Report.streams)
  return &streams_;
}
inline const ::ReportedStreamsPair& Report::streams(int index) const {
  // @@protoc_insertion_point(field_get:Report.streams)
  return streams_.Get(index);
}
inline ::ReportedStreamsPair* Report::add_streams() {
  // @@protoc_insertion_point(field_add:Report.streams)
  return streams_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ReportedStreamsPair >&
Report::streams() const {
  // @@protoc_insertion_point(field_list:Report.streams)
  return streams_;
}

// .ReportedSummariesPair summaries = 2;
inline bool Report::has_summaries() const {
  return this != internal_default_instance() && summaries_ != NULL;
}
inline void Report::clear_summaries() {
  if (GetArenaNoVirtual() == NULL && summaries_ != NULL) {
    delete summaries_;
  }
  summaries_ = NULL;
}
inline const ::ReportedSummariesPair& Report::_internal_summaries() const {
  return *summaries_;
}
inline const ::ReportedSummariesPair& Report::summaries() const {
  const ::ReportedSummariesPair* p = summaries_;
  // @@protoc_insertion_point(field_get:Report.summaries)
  return p != NULL ? *p : *reinterpret_cast<const ::ReportedSummariesPair*>(
      &::_ReportedSummariesPair_default_instance_);
}
inline ::ReportedSummariesPair* Report::release_summaries() {
  // @@protoc_insertion_point(field_release:Report.summaries)
  
  ::ReportedSummariesPair* temp = summaries_;
  summaries_ = NULL;
  return temp;
}
inline ::ReportedSummariesPair* Report::mutable_summaries() {
  
  if (summaries_ == NULL) {
    auto* p = CreateMaybeMessage<::ReportedSummariesPair>(GetArenaNoVirtual());
    summaries_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Report.summaries)
  return summaries_;
}
inline void Report::set_allocated_summaries(::ReportedSummariesPair* summaries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete summaries_;
  }
  if (summaries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      summaries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, summaries, submessage_arena);
    }
    
  } else {
    
  }
  summaries_ = summaries;
  // @@protoc_insertion_point(field_set_allocated:Report.summaries)
}

// .ResourceStatistics cpu_usage = 3;
inline bool Report::has_cpu_usage() const {
  return this != internal_default_instance() && cpu_usage_ != NULL;
}
inline void Report::clear_cpu_usage() {
  if (GetArenaNoVirtual() == NULL && cpu_usage_ != NULL) {
    delete cpu_usage_;
  }
  cpu_usage_ = NULL;
}
inline const ::ResourceStatistics& Report::_internal_cpu_usage() const {
  return *cpu_usage_;
}
inline const ::ResourceStatistics& Report::cpu_usage() const {
  const ::ResourceStatistics* p = cpu_usage_;
  // @@protoc_insertion_point(field_get:Report.cpu_usage)
  return p != NULL ? *p : *reinterpret_cast<const ::ResourceStatistics*>(
      &::_ResourceStatistics_default_instance_);
}
inline ::ResourceStatistics* Report::release_cpu_usage() {
  // @@protoc_insertion_point(field_release:Report.cpu_usage)
  
  ::ResourceStatistics* temp = cpu_usage_;
  cpu_usage_ = NULL;
  return temp;
}
inline ::ResourceStatistics* Report::mutable_cpu_usage() {
  
  if (cpu_usage_ == NULL) {
    auto* p = CreateMaybeMessage<::ResourceStatistics>(GetArenaNoVirtual());
    cpu_usage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Report.cpu_usage)
  return cpu_usage_;
}
inline void Report::set_allocated_cpu_usage(::ResourceStatistics* cpu_usage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpu_usage_;
  }
  if (cpu_usage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_usage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_usage, submessage_arena);
    }
    
  } else {
    
  }
  cpu_usage_ = cpu_usage;
  // @@protoc_insertion_point(field_set_allocated:Report.cpu_usage)
}

// -------------------------------------------------------------------

// Iperf

// .Header header = 1;
inline bool Iperf::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void Iperf::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::Header& Iperf::_internal_header() const {
  return *header_;
}
inline const ::Header& Iperf::header() const {
  const ::Header* p = header_;
  // @@protoc_insertion_point(field_get:Iperf.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline ::Header* Iperf::release_header() {
  // @@protoc_insertion_point(field_release:Iperf.header)
  
  ::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Header* Iperf::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Iperf.header)
  return header_;
}
inline void Iperf::set_allocated_header(::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Iperf.header)
}

// repeated .Interval intervals = 2;
inline int Iperf::intervals_size() const {
  return intervals_.size();
}
inline void Iperf::clear_intervals() {
  intervals_.Clear();
}
inline ::Interval* Iperf::mutable_intervals(int index) {
  // @@protoc_insertion_point(field_mutable:Iperf.intervals)
  return intervals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Interval >*
Iperf::mutable_intervals() {
  // @@protoc_insertion_point(field_mutable_list:Iperf.intervals)
  return &intervals_;
}
inline const ::Interval& Iperf::intervals(int index) const {
  // @@protoc_insertion_point(field_get:Iperf.intervals)
  return intervals_.Get(index);
}
inline ::Interval* Iperf::add_intervals() {
  // @@protoc_insertion_point(field_add:Iperf.intervals)
  return intervals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Interval >&
Iperf::intervals() const {
  // @@protoc_insertion_point(field_list:Iperf.intervals)
  return intervals_;
}

// repeated .CumulativeInterval cumulative_intervals = 3;
inline int Iperf::cumulative_intervals_size() const {
  return cumulative_intervals_.size();
}
inline void Iperf::clear_cumulative_intervals() {
  cumulative_intervals_.Clear();
}
inline ::CumulativeInterval* Iperf::mutable_cumulative_intervals(int index) {
  // @@protoc_insertion_point(field_mutable:Iperf.cumulative_intervals)
  return cumulative_intervals_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::CumulativeInterval >*
Iperf::mutable_cumulative_intervals() {
  // @@protoc_insertion_point(field_mutable_list:Iperf.cumulative_intervals)
  return &cumulative_intervals_;
}
inline const ::CumulativeInterval& Iperf::cumulative_intervals(int index) const {
  // @@protoc_insertion_point(field_get:Iperf.cumulative_intervals)
  return cumulative_intervals_.Get(index);
}
inline ::CumulativeInterval* Iperf::add_cumulative_intervals() {
  // @@protoc_insertion_point(field_add:Iperf.cumulative_intervals)
  return cumulative_intervals_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CumulativeInterval >&
Iperf::cumulative_intervals() const {
  // @@protoc_insertion_point(field_list:Iperf.cumulative_intervals)
  return cumulative_intervals_;
}

// .Report end_report = 4;
inline bool Iperf::has_end_report() const {
  return this != internal_default_instance() && end_report_ != NULL;
}
inline void Iperf::clear_end_report() {
  if (GetArenaNoVirtual() == NULL && end_report_ != NULL) {
    delete end_report_;
  }
  end_report_ = NULL;
}
inline const ::Report& Iperf::_internal_end_report() const {
  return *end_report_;
}
inline const ::Report& Iperf::end_report() const {
  const ::Report* p = end_report_;
  // @@protoc_insertion_point(field_get:Iperf.end_report)
  return p != NULL ? *p : *reinterpret_cast<const ::Report*>(
      &::_Report_default_instance_);
}
inline ::Report* Iperf::release_end_report() {
  // @@protoc_insertion_point(field_release:Iperf.end_report)
  
  ::Report* temp = end_report_;
  end_report_ = NULL;
  return temp;
}
inline ::Report* Iperf::mutable_end_report() {
  
  if (end_report_ == NULL) {
    auto* p = CreateMaybeMessage<::Report>(GetArenaNoVirtual());
    end_report_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Iperf.end_report)
  return end_report_;
}
inline void Iperf::set_allocated_end_report(::Report* end_report) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_report_;
  }
  if (end_report) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_report = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_report, submessage_arena);
    }
    
  } else {
    
  }
  end_report_ = end_report;
  // @@protoc_insertion_point(field_set_allocated:Iperf.end_report)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtocolType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtocolType>() {
  return ::ProtocolType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_iperf_2eproto
