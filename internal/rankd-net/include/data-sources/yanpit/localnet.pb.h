// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: localnet.proto

#ifndef PROTOBUF_INCLUDED_localnet_2eproto
#define PROTOBUF_INCLUDED_localnet_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_localnet_2eproto 

namespace protobuf_localnet_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_localnet_2eproto
class Interface;
class InterfaceDefaultTypeInternal;
extern InterfaceDefaultTypeInternal _Interface_default_instance_;
class Localnet;
class LocalnetDefaultTypeInternal;
extern LocalnetDefaultTypeInternal _Localnet_default_instance_;
class Localnet_InterfacesEntry_DoNotUse;
class Localnet_InterfacesEntry_DoNotUseDefaultTypeInternal;
extern Localnet_InterfacesEntry_DoNotUseDefaultTypeInternal _Localnet_InterfacesEntry_DoNotUse_default_instance_;
namespace google {
namespace protobuf {
template<> ::Interface* Arena::CreateMaybeMessage<::Interface>(Arena*);
template<> ::Localnet* Arena::CreateMaybeMessage<::Localnet>(Arena*);
template<> ::Localnet_InterfacesEntry_DoNotUse* Arena::CreateMaybeMessage<::Localnet_InterfacesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Interface) */ {
 public:
  Interface();
  virtual ~Interface();

  Interface(const Interface& from);

  inline Interface& operator=(const Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Interface(Interface&& from) noexcept
    : Interface() {
    *this = ::std::move(from);
  }

  inline Interface& operator=(Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Interface* internal_default_instance() {
    return reinterpret_cast<const Interface*>(
               &_Interface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Interface* other);
  friend void swap(Interface& a, Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Interface* New() const final {
    return CreateMaybeMessage<Interface>(NULL);
  }

  Interface* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Interface>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Interface& from);
  void MergeFrom(const Interface& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string ip4_addresses = 2;
  int ip4_addresses_size() const;
  void clear_ip4_addresses();
  static const int kIp4AddressesFieldNumber = 2;
  const ::std::string& ip4_addresses(int index) const;
  ::std::string* mutable_ip4_addresses(int index);
  void set_ip4_addresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ip4_addresses(int index, ::std::string&& value);
  #endif
  void set_ip4_addresses(int index, const char* value);
  void set_ip4_addresses(int index, const char* value, size_t size);
  ::std::string* add_ip4_addresses();
  void add_ip4_addresses(const ::std::string& value);
  #if LANG_CXX11
  void add_ip4_addresses(::std::string&& value);
  #endif
  void add_ip4_addresses(const char* value);
  void add_ip4_addresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ip4_addresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ip4_addresses();

  // repeated string ip6_addresses = 3;
  int ip6_addresses_size() const;
  void clear_ip6_addresses();
  static const int kIp6AddressesFieldNumber = 3;
  const ::std::string& ip6_addresses(int index) const;
  ::std::string* mutable_ip6_addresses(int index);
  void set_ip6_addresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ip6_addresses(int index, ::std::string&& value);
  #endif
  void set_ip6_addresses(int index, const char* value);
  void set_ip6_addresses(int index, const char* value, size_t size);
  ::std::string* add_ip6_addresses();
  void add_ip6_addresses(const ::std::string& value);
  #if LANG_CXX11
  void add_ip6_addresses(::std::string&& value);
  #endif
  void add_ip6_addresses(const char* value);
  void add_ip6_addresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ip6_addresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ip6_addresses();

  // string mac_address = 1;
  void clear_mac_address();
  static const int kMacAddressFieldNumber = 1;
  const ::std::string& mac_address() const;
  void set_mac_address(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_address(::std::string&& value);
  #endif
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  ::std::string* mutable_mac_address();
  ::std::string* release_mac_address();
  void set_allocated_mac_address(::std::string* mac_address);

  // string duplex_type = 5;
  void clear_duplex_type();
  static const int kDuplexTypeFieldNumber = 5;
  const ::std::string& duplex_type() const;
  void set_duplex_type(const ::std::string& value);
  #if LANG_CXX11
  void set_duplex_type(::std::string&& value);
  #endif
  void set_duplex_type(const char* value);
  void set_duplex_type(const char* value, size_t size);
  ::std::string* mutable_duplex_type();
  ::std::string* release_duplex_type();
  void set_allocated_duplex_type(::std::string* duplex_type);

  // string operation_state = 9;
  void clear_operation_state();
  static const int kOperationStateFieldNumber = 9;
  const ::std::string& operation_state() const;
  void set_operation_state(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_state(::std::string&& value);
  #endif
  void set_operation_state(const char* value);
  void set_operation_state(const char* value, size_t size);
  ::std::string* mutable_operation_state();
  ::std::string* release_operation_state();
  void set_allocated_operation_state(::std::string* operation_state);

  // bool has_carrier = 4;
  void clear_has_carrier();
  static const int kHasCarrierFieldNumber = 4;
  bool has_carrier() const;
  void set_has_carrier(bool value);

  // int32 interface_index = 6;
  void clear_interface_index();
  static const int kInterfaceIndexFieldNumber = 6;
  ::google::protobuf::int32 interface_index() const;
  void set_interface_index(::google::protobuf::int32 value);

  // int32 enslaved_interface_index = 7;
  void clear_enslaved_interface_index();
  static const int kEnslavedInterfaceIndexFieldNumber = 7;
  ::google::protobuf::int32 enslaved_interface_index() const;
  void set_enslaved_interface_index(::google::protobuf::int32 value);

  // int32 mtu = 8;
  void clear_mtu();
  static const int kMtuFieldNumber = 8;
  ::google::protobuf::int32 mtu() const;
  void set_mtu(::google::protobuf::int32 value);

  // int64 speed = 10;
  void clear_speed();
  static const int kSpeedFieldNumber = 10;
  ::google::protobuf::int64 speed() const;
  void set_speed(::google::protobuf::int64 value);

  // int64 rx_bytes = 11;
  void clear_rx_bytes();
  static const int kRxBytesFieldNumber = 11;
  ::google::protobuf::int64 rx_bytes() const;
  void set_rx_bytes(::google::protobuf::int64 value);

  // int64 tx_bytes = 12;
  void clear_tx_bytes();
  static const int kTxBytesFieldNumber = 12;
  ::google::protobuf::int64 tx_bytes() const;
  void set_tx_bytes(::google::protobuf::int64 value);

  // int64 rx_packets = 13;
  void clear_rx_packets();
  static const int kRxPacketsFieldNumber = 13;
  ::google::protobuf::int64 rx_packets() const;
  void set_rx_packets(::google::protobuf::int64 value);

  // int64 tx_packets = 14;
  void clear_tx_packets();
  static const int kTxPacketsFieldNumber = 14;
  ::google::protobuf::int64 tx_packets() const;
  void set_tx_packets(::google::protobuf::int64 value);

  // int32 rx_errors = 15;
  void clear_rx_errors();
  static const int kRxErrorsFieldNumber = 15;
  ::google::protobuf::int32 rx_errors() const;
  void set_rx_errors(::google::protobuf::int32 value);

  // int32 tx_errors = 16;
  void clear_tx_errors();
  static const int kTxErrorsFieldNumber = 16;
  ::google::protobuf::int32 tx_errors() const;
  void set_tx_errors(::google::protobuf::int32 value);

  // int32 rx_dropped = 17;
  void clear_rx_dropped();
  static const int kRxDroppedFieldNumber = 17;
  ::google::protobuf::int32 rx_dropped() const;
  void set_rx_dropped(::google::protobuf::int32 value);

  // int32 tx_dropped = 18;
  void clear_tx_dropped();
  static const int kTxDroppedFieldNumber = 18;
  ::google::protobuf::int32 tx_dropped() const;
  void set_tx_dropped(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ip4_addresses_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ip6_addresses_;
  ::google::protobuf::internal::ArenaStringPtr mac_address_;
  ::google::protobuf::internal::ArenaStringPtr duplex_type_;
  ::google::protobuf::internal::ArenaStringPtr operation_state_;
  bool has_carrier_;
  ::google::protobuf::int32 interface_index_;
  ::google::protobuf::int32 enslaved_interface_index_;
  ::google::protobuf::int32 mtu_;
  ::google::protobuf::int64 speed_;
  ::google::protobuf::int64 rx_bytes_;
  ::google::protobuf::int64 tx_bytes_;
  ::google::protobuf::int64 rx_packets_;
  ::google::protobuf::int64 tx_packets_;
  ::google::protobuf::int32 rx_errors_;
  ::google::protobuf::int32 tx_errors_;
  ::google::protobuf::int32 rx_dropped_;
  ::google::protobuf::int32 tx_dropped_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_localnet_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Localnet_InterfacesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Localnet_InterfacesEntry_DoNotUse, 
    ::std::string, ::Interface,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Localnet_InterfacesEntry_DoNotUse, 
    ::std::string, ::Interface,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Localnet_InterfacesEntry_DoNotUse();
  Localnet_InterfacesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Localnet_InterfacesEntry_DoNotUse& other);
  static const Localnet_InterfacesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Localnet_InterfacesEntry_DoNotUse*>(&_Localnet_InterfacesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Localnet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Localnet) */ {
 public:
  Localnet();
  virtual ~Localnet();

  Localnet(const Localnet& from);

  inline Localnet& operator=(const Localnet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Localnet(Localnet&& from) noexcept
    : Localnet() {
    *this = ::std::move(from);
  }

  inline Localnet& operator=(Localnet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Localnet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Localnet* internal_default_instance() {
    return reinterpret_cast<const Localnet*>(
               &_Localnet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Localnet* other);
  friend void swap(Localnet& a, Localnet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Localnet* New() const final {
    return CreateMaybeMessage<Localnet>(NULL);
  }

  Localnet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Localnet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Localnet& from);
  void MergeFrom(const Localnet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Localnet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .Interface> interfaces = 2;
  int interfaces_size() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::Interface >&
      interfaces() const;
  ::google::protobuf::Map< ::std::string, ::Interface >*
      mutable_interfaces();

  // int64 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Localnet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Localnet_InterfacesEntry_DoNotUse,
      ::std::string, ::Interface,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > interfaces_;
  ::google::protobuf::int64 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_localnet_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Interface

// string mac_address = 1;
inline void Interface::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interface::mac_address() const {
  // @@protoc_insertion_point(field_get:Interface.mac_address)
  return mac_address_.GetNoArena();
}
inline void Interface::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interface.mac_address)
}
#if LANG_CXX11
inline void Interface::set_mac_address(::std::string&& value) {
  
  mac_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interface.mac_address)
}
#endif
inline void Interface::set_mac_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interface.mac_address)
}
inline void Interface::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interface.mac_address)
}
inline ::std::string* Interface::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:Interface.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interface::release_mac_address() {
  // @@protoc_insertion_point(field_release:Interface.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interface::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:Interface.mac_address)
}

// repeated string ip4_addresses = 2;
inline int Interface::ip4_addresses_size() const {
  return ip4_addresses_.size();
}
inline void Interface::clear_ip4_addresses() {
  ip4_addresses_.Clear();
}
inline const ::std::string& Interface::ip4_addresses(int index) const {
  // @@protoc_insertion_point(field_get:Interface.ip4_addresses)
  return ip4_addresses_.Get(index);
}
inline ::std::string* Interface::mutable_ip4_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:Interface.ip4_addresses)
  return ip4_addresses_.Mutable(index);
}
inline void Interface::set_ip4_addresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interface.ip4_addresses)
  ip4_addresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interface::set_ip4_addresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Interface.ip4_addresses)
  ip4_addresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interface::set_ip4_addresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip4_addresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interface.ip4_addresses)
}
inline void Interface::set_ip4_addresses(int index, const char* value, size_t size) {
  ip4_addresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interface.ip4_addresses)
}
inline ::std::string* Interface::add_ip4_addresses() {
  // @@protoc_insertion_point(field_add_mutable:Interface.ip4_addresses)
  return ip4_addresses_.Add();
}
inline void Interface::add_ip4_addresses(const ::std::string& value) {
  ip4_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interface.ip4_addresses)
}
#if LANG_CXX11
inline void Interface::add_ip4_addresses(::std::string&& value) {
  ip4_addresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Interface.ip4_addresses)
}
#endif
inline void Interface::add_ip4_addresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip4_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interface.ip4_addresses)
}
inline void Interface::add_ip4_addresses(const char* value, size_t size) {
  ip4_addresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interface.ip4_addresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interface::ip4_addresses() const {
  // @@protoc_insertion_point(field_list:Interface.ip4_addresses)
  return ip4_addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interface::mutable_ip4_addresses() {
  // @@protoc_insertion_point(field_mutable_list:Interface.ip4_addresses)
  return &ip4_addresses_;
}

// repeated string ip6_addresses = 3;
inline int Interface::ip6_addresses_size() const {
  return ip6_addresses_.size();
}
inline void Interface::clear_ip6_addresses() {
  ip6_addresses_.Clear();
}
inline const ::std::string& Interface::ip6_addresses(int index) const {
  // @@protoc_insertion_point(field_get:Interface.ip6_addresses)
  return ip6_addresses_.Get(index);
}
inline ::std::string* Interface::mutable_ip6_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:Interface.ip6_addresses)
  return ip6_addresses_.Mutable(index);
}
inline void Interface::set_ip6_addresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Interface.ip6_addresses)
  ip6_addresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Interface::set_ip6_addresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Interface.ip6_addresses)
  ip6_addresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Interface::set_ip6_addresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip6_addresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Interface.ip6_addresses)
}
inline void Interface::set_ip6_addresses(int index, const char* value, size_t size) {
  ip6_addresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Interface.ip6_addresses)
}
inline ::std::string* Interface::add_ip6_addresses() {
  // @@protoc_insertion_point(field_add_mutable:Interface.ip6_addresses)
  return ip6_addresses_.Add();
}
inline void Interface::add_ip6_addresses(const ::std::string& value) {
  ip6_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Interface.ip6_addresses)
}
#if LANG_CXX11
inline void Interface::add_ip6_addresses(::std::string&& value) {
  ip6_addresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Interface.ip6_addresses)
}
#endif
inline void Interface::add_ip6_addresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip6_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Interface.ip6_addresses)
}
inline void Interface::add_ip6_addresses(const char* value, size_t size) {
  ip6_addresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Interface.ip6_addresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Interface::ip6_addresses() const {
  // @@protoc_insertion_point(field_list:Interface.ip6_addresses)
  return ip6_addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Interface::mutable_ip6_addresses() {
  // @@protoc_insertion_point(field_mutable_list:Interface.ip6_addresses)
  return &ip6_addresses_;
}

// bool has_carrier = 4;
inline void Interface::clear_has_carrier() {
  has_carrier_ = false;
}
inline bool Interface::has_carrier() const {
  // @@protoc_insertion_point(field_get:Interface.has_carrier)
  return has_carrier_;
}
inline void Interface::set_has_carrier(bool value) {
  
  has_carrier_ = value;
  // @@protoc_insertion_point(field_set:Interface.has_carrier)
}

// string duplex_type = 5;
inline void Interface::clear_duplex_type() {
  duplex_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interface::duplex_type() const {
  // @@protoc_insertion_point(field_get:Interface.duplex_type)
  return duplex_type_.GetNoArena();
}
inline void Interface::set_duplex_type(const ::std::string& value) {
  
  duplex_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interface.duplex_type)
}
#if LANG_CXX11
inline void Interface::set_duplex_type(::std::string&& value) {
  
  duplex_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interface.duplex_type)
}
#endif
inline void Interface::set_duplex_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  duplex_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interface.duplex_type)
}
inline void Interface::set_duplex_type(const char* value, size_t size) {
  
  duplex_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interface.duplex_type)
}
inline ::std::string* Interface::mutable_duplex_type() {
  
  // @@protoc_insertion_point(field_mutable:Interface.duplex_type)
  return duplex_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interface::release_duplex_type() {
  // @@protoc_insertion_point(field_release:Interface.duplex_type)
  
  return duplex_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interface::set_allocated_duplex_type(::std::string* duplex_type) {
  if (duplex_type != NULL) {
    
  } else {
    
  }
  duplex_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), duplex_type);
  // @@protoc_insertion_point(field_set_allocated:Interface.duplex_type)
}

// int32 interface_index = 6;
inline void Interface::clear_interface_index() {
  interface_index_ = 0;
}
inline ::google::protobuf::int32 Interface::interface_index() const {
  // @@protoc_insertion_point(field_get:Interface.interface_index)
  return interface_index_;
}
inline void Interface::set_interface_index(::google::protobuf::int32 value) {
  
  interface_index_ = value;
  // @@protoc_insertion_point(field_set:Interface.interface_index)
}

// int32 enslaved_interface_index = 7;
inline void Interface::clear_enslaved_interface_index() {
  enslaved_interface_index_ = 0;
}
inline ::google::protobuf::int32 Interface::enslaved_interface_index() const {
  // @@protoc_insertion_point(field_get:Interface.enslaved_interface_index)
  return enslaved_interface_index_;
}
inline void Interface::set_enslaved_interface_index(::google::protobuf::int32 value) {
  
  enslaved_interface_index_ = value;
  // @@protoc_insertion_point(field_set:Interface.enslaved_interface_index)
}

// int32 mtu = 8;
inline void Interface::clear_mtu() {
  mtu_ = 0;
}
inline ::google::protobuf::int32 Interface::mtu() const {
  // @@protoc_insertion_point(field_get:Interface.mtu)
  return mtu_;
}
inline void Interface::set_mtu(::google::protobuf::int32 value) {
  
  mtu_ = value;
  // @@protoc_insertion_point(field_set:Interface.mtu)
}

// string operation_state = 9;
inline void Interface::clear_operation_state() {
  operation_state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Interface::operation_state() const {
  // @@protoc_insertion_point(field_get:Interface.operation_state)
  return operation_state_.GetNoArena();
}
inline void Interface::set_operation_state(const ::std::string& value) {
  
  operation_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Interface.operation_state)
}
#if LANG_CXX11
inline void Interface::set_operation_state(::std::string&& value) {
  
  operation_state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Interface.operation_state)
}
#endif
inline void Interface::set_operation_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Interface.operation_state)
}
inline void Interface::set_operation_state(const char* value, size_t size) {
  
  operation_state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Interface.operation_state)
}
inline ::std::string* Interface::mutable_operation_state() {
  
  // @@protoc_insertion_point(field_mutable:Interface.operation_state)
  return operation_state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Interface::release_operation_state() {
  // @@protoc_insertion_point(field_release:Interface.operation_state)
  
  return operation_state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Interface::set_allocated_operation_state(::std::string* operation_state) {
  if (operation_state != NULL) {
    
  } else {
    
  }
  operation_state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_state);
  // @@protoc_insertion_point(field_set_allocated:Interface.operation_state)
}

// int64 speed = 10;
inline void Interface::clear_speed() {
  speed_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Interface::speed() const {
  // @@protoc_insertion_point(field_get:Interface.speed)
  return speed_;
}
inline void Interface::set_speed(::google::protobuf::int64 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Interface.speed)
}

// int64 rx_bytes = 11;
inline void Interface::clear_rx_bytes() {
  rx_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Interface::rx_bytes() const {
  // @@protoc_insertion_point(field_get:Interface.rx_bytes)
  return rx_bytes_;
}
inline void Interface::set_rx_bytes(::google::protobuf::int64 value) {
  
  rx_bytes_ = value;
  // @@protoc_insertion_point(field_set:Interface.rx_bytes)
}

// int64 tx_bytes = 12;
inline void Interface::clear_tx_bytes() {
  tx_bytes_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Interface::tx_bytes() const {
  // @@protoc_insertion_point(field_get:Interface.tx_bytes)
  return tx_bytes_;
}
inline void Interface::set_tx_bytes(::google::protobuf::int64 value) {
  
  tx_bytes_ = value;
  // @@protoc_insertion_point(field_set:Interface.tx_bytes)
}

// int64 rx_packets = 13;
inline void Interface::clear_rx_packets() {
  rx_packets_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Interface::rx_packets() const {
  // @@protoc_insertion_point(field_get:Interface.rx_packets)
  return rx_packets_;
}
inline void Interface::set_rx_packets(::google::protobuf::int64 value) {
  
  rx_packets_ = value;
  // @@protoc_insertion_point(field_set:Interface.rx_packets)
}

// int64 tx_packets = 14;
inline void Interface::clear_tx_packets() {
  tx_packets_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Interface::tx_packets() const {
  // @@protoc_insertion_point(field_get:Interface.tx_packets)
  return tx_packets_;
}
inline void Interface::set_tx_packets(::google::protobuf::int64 value) {
  
  tx_packets_ = value;
  // @@protoc_insertion_point(field_set:Interface.tx_packets)
}

// int32 rx_errors = 15;
inline void Interface::clear_rx_errors() {
  rx_errors_ = 0;
}
inline ::google::protobuf::int32 Interface::rx_errors() const {
  // @@protoc_insertion_point(field_get:Interface.rx_errors)
  return rx_errors_;
}
inline void Interface::set_rx_errors(::google::protobuf::int32 value) {
  
  rx_errors_ = value;
  // @@protoc_insertion_point(field_set:Interface.rx_errors)
}

// int32 tx_errors = 16;
inline void Interface::clear_tx_errors() {
  tx_errors_ = 0;
}
inline ::google::protobuf::int32 Interface::tx_errors() const {
  // @@protoc_insertion_point(field_get:Interface.tx_errors)
  return tx_errors_;
}
inline void Interface::set_tx_errors(::google::protobuf::int32 value) {
  
  tx_errors_ = value;
  // @@protoc_insertion_point(field_set:Interface.tx_errors)
}

// int32 rx_dropped = 17;
inline void Interface::clear_rx_dropped() {
  rx_dropped_ = 0;
}
inline ::google::protobuf::int32 Interface::rx_dropped() const {
  // @@protoc_insertion_point(field_get:Interface.rx_dropped)
  return rx_dropped_;
}
inline void Interface::set_rx_dropped(::google::protobuf::int32 value) {
  
  rx_dropped_ = value;
  // @@protoc_insertion_point(field_set:Interface.rx_dropped)
}

// int32 tx_dropped = 18;
inline void Interface::clear_tx_dropped() {
  tx_dropped_ = 0;
}
inline ::google::protobuf::int32 Interface::tx_dropped() const {
  // @@protoc_insertion_point(field_get:Interface.tx_dropped)
  return tx_dropped_;
}
inline void Interface::set_tx_dropped(::google::protobuf::int32 value) {
  
  tx_dropped_ = value;
  // @@protoc_insertion_point(field_set:Interface.tx_dropped)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Localnet

// int64 timestamp = 1;
inline void Localnet::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Localnet::timestamp() const {
  // @@protoc_insertion_point(field_get:Localnet.timestamp)
  return timestamp_;
}
inline void Localnet::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Localnet.timestamp)
}

// map<string, .Interface> interfaces = 2;
inline int Localnet::interfaces_size() const {
  return interfaces_.size();
}
inline void Localnet::clear_interfaces() {
  interfaces_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::Interface >&
Localnet::interfaces() const {
  // @@protoc_insertion_point(field_map:Localnet.interfaces)
  return interfaces_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::Interface >*
Localnet::mutable_interfaces() {
  // @@protoc_insertion_point(field_mutable_map:Localnet.interfaces)
  return interfaces_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_localnet_2eproto
